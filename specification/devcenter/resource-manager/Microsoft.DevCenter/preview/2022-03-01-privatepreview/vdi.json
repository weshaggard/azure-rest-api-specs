{
  "swagger": "2.0",
  "info": {
    "version": "2022-03-01-privatepreview",
    "title": "DevCenter",
    "description": "DevCenter Management API"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/skus": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "SKUs"
        ],
        "description": "Lists the Microsoft.DevCenter SKUs available in a subscription",
        "operationId": "Skus_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SkuListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Skus_ListBySubscription": {
            "$ref": "./examples/Skus_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Pools"
        ],
        "description": "Lists pools for a project",
        "operationId": "Pools_ListByProject",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/PoolListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Pools_ListByProject": {
            "$ref": "./examples/Pools_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/projects/{projectName}/pools/{poolName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ProjectNameParameter"
        },
        {
          "$ref": "#/parameters/PoolNameParameter"
        }
      ],
      "get": {
        "tags": [
          "Pools"
        ],
        "description": "Gets a machine pool",
        "operationId": "Pools_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Get": {
            "$ref": "./examples/Pools_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Pools"
        ],
        "description": "Creates or updates a machine pool",
        "operationId": "Pools_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Pools_CreateOrUpdate": {
            "$ref": "./examples/Pools_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Pools"
        ],
        "description": "Partially updates a machine pool",
        "operationId": "Pools_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents a machine pool",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PoolUpdate"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously",
            "schema": {
              "$ref": "#/definitions/Pool"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Update": {
            "$ref": "./examples/Pools_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Pools"
        ],
        "description": "Deletes a machine pool",
        "operationId": "Pools_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. Resource has been deleted"
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Pools_Delete": {
            "$ref": "./examples/Pools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DevCenter/networkconnections": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists network connections in a subscription",
        "operationId": "NetworkConnections_ListBySubscription",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListBySubscription": {
            "$ref": "./examples/NetworkConnections_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkconnections": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists network connections in a resource group",
        "operationId": "NetworkConnections_ListByResourceGroup",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnectionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListByResourceGroup": {
            "$ref": "./examples/NetworkConnections_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkconnectionss/{networkConnectionName}": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "#/parameters/NetworkConnectionName"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Gets a network connection resource",
        "operationId": "NetworkConnections_Get",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Get": {
            "$ref": "./examples/NetworkConnections_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Network Connections"
        ],
        "description": "Creates or updates a Network Connections resource",
        "operationId": "NetworkConnections_CreateOrUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "201": {
            "description": "Created. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_CreateOrUpdate": {
            "$ref": "./examples/NetworkConnections_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Network Connections"
        ],
        "description": "Partially updates Network Connections",
        "operationId": "NetworkConnections_Update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Represents network connection",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkConnectionUpdate"
            }
          }
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NetworkConnection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Update": {
            "$ref": "./examples/NetworkConnections_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Network Connections"
        ],
        "description": "Deletes a Network Connections resource",
        "operationId": "NetworkConnections_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "responses": {
          "200": {
            "description": "OK. Resource has been deleted"
          },
          "202": {
            "description": "Accepted. Operation will complete asynchronously."
          },
          "204": {
            "description": "Resource does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_Delete": {
            "$ref": "./examples/NetworkConnections_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkconnections/{networkConnectionName}/healthchecks": {
      "parameters": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
        },
        {
          "$ref": "commonDefinitions.json#/parameters/TopParameter"
        },
        {
          "$ref": "#/parameters/NetworkConnectionName"
        }
      ],
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Lists health check status details",
        "operationId": "NetworkConnections_ListHealthDetails",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetailsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_ListHealthDetails": {
            "$ref": "./examples/NetworkConnections_ListHealthDetails.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/networkconnections/{networkConnectionName}/healthchecks/latest": {
      "get": {
        "tags": [
          "Network Connections"
        ],
        "description": "Gets health check status details.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "commonDefinitions.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkConnectionName"
          }
        ],
        "operationId": "NetworkConnections_GetHealthDetails",
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatusDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "commonDefinitions.json#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "NetworkConnections_GetHealthDetails": {
            "$ref": "./examples/NetworkConnections_GetHealthDetails.json"
          }
        }
      }
    }
  },
  "definitions": {
    "SkuListResult": {
      "description": "Results of the Microsoft.DevCenter SKU list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "commonDefinitions.json#/definitions/Sku"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Pool": {
      "description": "A pool of Virtual Machines.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Pool properties",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PoolProperties"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "PoolUpdateProperties": {
      "description": "Properties of a Pool. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "sku": {
          "description": "The SKU for the virtual machine. Defines the type of virtual machines used in the pool.",
          "$ref": "commonDefinitions.json#/definitions/Sku"
        },
        "devBoxDefinitionName": {
          "description": "Name of a Dev Box definition in parent Project of this Pool",
          "type": "string"
        },
        "networkConnectionName": {
          "description": "Name of a Network Connection in parent Project of this Pool",
          "type": "string"
        }
      }
    },
    "PoolProperties": {
      "type": "object",
      "description": "Properties of a Pool",
      "allOf": [
        {
          "$ref": "#/definitions/PoolUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "PoolListResult": {
      "description": "Results of the machine pool list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pool"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PoolUpdate": {
      "description": "The pool properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PoolUpdateProperties",
          "description": "Properties of a pool to be updated."
        }
      }
    },
    "ImageReference": {
      "type": "object",
      "description": "Image reference information",
      "properties": {
        "id": {
          "description": "Image resource ID.",
          "type": "string"
        },
        "exactVersion": {
          "type": "string",
          "readOnly": true,
          "description": "The actual version of the image after use. When id references a gallery image latest version, this will indicate the actual version in use."
        },
        "publisher": {
          "description": "The image publisher.",
          "type": "string"
        },
        "offer": {
          "description": "The image offer.",
          "type": "string"
        },
        "sku": {
          "description": "The image sku.",
          "type": "string"
        }
      }
    },
    "ImageValidationStatus": {
      "description": "Image validation status",
      "enum": [
        "Unknown",
        "Pending",
        "Succeeded",
        "Failed",
        "TimedOut"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ImageValidationStatus",
        "modelAsString": true
      }
    },
    "ImageValidationErrorDetails": {
      "type": "object",
      "description": "Image validation error details",
      "properties": {
        "code": {
          "type": "string",
          "description": "An identifier for the error."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error."
        }
      }
    },
    "NetworkConnection": {
      "type": "object",
      "description": "Network related settings",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Properties of a Network Connection",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkProperties"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "NetworkConnectionUpdate": {
      "description": "The network connection properties for partial update. Properties not provided in the update request will not be changed.",
      "type": "object",
      "allOf": [
        {
          "$ref": "commonDefinitions.json#/definitions/TrackedResourceUpdate"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/NetworkConnectionUpdateProperties",
          "description": "Properties of a network connection resource to be updated."
        }
      }
    },
    "NetworkConnectionUpdateProperties": {
      "description": "Properties of network connection. These properties can be updated after the resource has been created.",
      "type": "object",
      "properties": {
        "subnetId": {
          "description": "The subnet to attach Virtual Machines to",
          "type": "string"
        },
        "networkingResourceGroupId": {
          "description": "Target resource group id for NICs to be placed. Required format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}'",
          "type": "string"
        },
        "domainName": {
          "description": "Active Directory domain name",
          "type": "string"
        },
        "organizationUnit": {
          "description": "Active Directory domain Organization Unit (OU)",
          "type": "string"
        },
        "domainUsername": {
          "description": "The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.",
          "type": "string"
        },
        "domainPassword": {
          "description": "The password for the account used to join domain",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "NetworkProperties": {
      "description": "Network properties",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkConnectionUpdateProperties"
        }
      ],
      "properties": {
        "provisioningState": {
          "description": "The provisioning state of the resource.",
          "$ref": "commonDefinitions.json#/definitions/ProvisioningState",
          "readOnly": true
        },
        "healthCheckStatus": {
          "description": "Overall health status of the network connection. Health checks are run on creation, update, and periodically to validate the network connection.",
          "$ref": "#/definitions/HealthCheckStatus",
          "readOnly": true
        },
        "networkingResourceGroupName": {
          "description": "The name for resource group where NICs will be placed.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "domainJoinType": {
          "description": "AAD Join type.",
          "$ref": "#/definitions/DomainJoinType",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      }
    },
    "NetworkConnectionListResult": {
      "description": "Result of the network connection list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkConnection"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DomainJoinType": {
      "description": "Active Directory join type",
      "enum": [
        "HybridAzureADJoin",
        "AzureADJoin"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "DomainJoinType",
        "modelAsString": true
      }
    },
    "HealthCheckStatus": {
      "description": "Health check status values",
      "enum": [
        "Pending",
        "Running",
        "Passed",
        "Failed",
        "Warning",
        "Unknown"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "HealthCheckStatus",
        "modelAsString": true
      }
    },
    "HealthCheckStatusDetails": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Health check status details properties.",
          "$ref": "#/definitions/HealthCheckStatusDetailsProperties"
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "readOnly": true
        }
      }
    },
    "HealthCheckStatusDetailsProperties": {
      "description": "",
      "type": "object",
      "properties": {
        "startDateTime": {
          "type": "string",
          "description": "Start time of last execution of the health checks.",
          "readOnly": true,
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "description": "End time of last execution of the health checks.",
          "readOnly": true,
          "format": "date-time"
        },
        "healthChecks": {
          "description": "Details for each health check item.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthCheck"
          },
          "readOnly": true
        }
      }
    },
    "HealthCheck": {
      "description": "An individual health check item",
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the health check item.",
          "$ref": "#/definitions/HealthCheckStatus",
          "readOnly": true
        },
        "displayName": {
          "description": "The display name of this health check item.",
          "type": "string",
          "readOnly": true
        },
        "startDateTime": {
          "description": "Start time of health check item.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "endDateTime": {
          "description": "End time of the health check item.",
          "type": "string",
          "readOnly": true,
          "format": "date-time"
        },
        "errorType": {
          "description": "The type of error that occurred during this health check.",
          "type": "string",
          "readOnly": true
        },
        "recommendedAction": {
          "description": "The recommended action to fix the corresponding error.",
          "type": "string",
          "readOnly": true
        },
        "additionalDetails": {
          "description": "Additional details about the health check or the recommended action.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "HealthCheckStatusDetailsListResult": {
      "description": "Result of the network health check list operation.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Current page of results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HealthCheckStatusDetails"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "URL to get the next set of results if there are any.",
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "PoolNameParameter": {
      "name": "poolName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the pool.",
      "x-ms-parameter-location": "method"
    },
    "NetworkConnectionName": {
      "name": "networkConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the Network Connection that can be applied to a Pool.",
      "x-ms-parameter-location": "method"
    },
    "FilterParameter": {
      "name": "$filter",
      "in": "query",
      "description": "The filter to apply to the operation. Example: '$filter=contains(name,'myName').",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    }
  }
}
