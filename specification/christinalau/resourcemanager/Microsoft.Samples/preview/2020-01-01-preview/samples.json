{
    "swagger": "2.0",
    "info": {
      "title": "Samples",
      "description": "The Microsoft.Samples Rest API spec.",
      "version": "2020-01-01-preview",
      "x-ms-code-generation-settings": {
        "name": "SamplesClient"
      }
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Samples/samples/{samplesName}": {
        "get": {
          "operationId": "samples_Retrieve",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/samplesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Retrieves the samples resource.",
              "schema": {
                "$ref": "#/definitions/samples"
              }
            }
          }
        },
        "put": {
          "operationId": "samples_CreateOrUpdate",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/samplesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "name": "samples",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/samples"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the samples resource.",
              "schema": {
                "$ref": "#/definitions/samples"
              }
            },
            "201": {
              "description": "Creates the samples resource.",
              "schema": {
                "$ref": "#/definitions/samples"
              }
            }
          }
        },
        "delete": {
          "operationId": "samples_Delete",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/samplesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Deletes the samples resource."
            }
          }
        },
        "patch": {
          "operationId": "samples_Update",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/samplesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "name": "samples",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/samplesPatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the samples resource.",
              "schema": {
                "$ref": "#/definitions/samples"
              }
            },
            "201": {
              "description": "Updates the samples resource.",
              "schema": {
                "$ref": "#/definitions/samples"
              }
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Samples/samples": {
        "get": {
          "operationId": "samples_ListByResourceGroup",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists all samples under the resouce group.",
              "schema": {
                "$ref": "#/definitions/samplesListResult"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.Samples/samples": {
        "get": {
          "operationId": "samples_ListBySubscription",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists all samples under the subscription.",
              "schema": {
                "$ref": "#/definitions/samplesListResult"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/providers/Microsoft.Samples/operations": {
        "get": {
          "operationId": "Operations_List",
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Describe the result of a successful operation.",
              "schema": {
                "$ref": "#/definitions/ResourceProviderOperationList"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      }
    },
    "definitions": {
      "samplesProperties": {
        "properties": {
          "sampleResource": {
            "type": "string"
          },
          "secretValue": {
            "type": "string"
          },
          "cronSpec": {
            "type": "string"
          },
          "image": {
            "type": "string"
          },
          "replicas": {
            "type": "integer"
          },
          "provisioningState": {
            "type": "string"
          }
        }
      },
      "samples": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/samplesProperties"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Id"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Name"
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Type"
          },
          "location": {
            "type": "string",
            "description": "The resource location"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "extendedLocation": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The extended location type."
              },
              "name": {
                "type": "string",
                "description": "The extended location name."
              }
            }
          }
        },
        "required": [
          "location"
        ],
        "description": "The samples resource definition."
      },
      "samplesPatch": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          }
        },
        "description": "The samples resource patch definition."
      },
      "samplesListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/samples"
            }
          },
          "nextLink": {
            "type": "string"
          }
        }
      },
      "ResourceProviderOperationList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceProviderOperation"
            }
          },
          "nextLink": {
            "type": "string"
          }
        },
        "description": "Results of the request to list operations."
      },
      "ResourceProviderOperation": {
        "type": "object",
        "properties": {
          "isDataAction": {
            "type": "string",
            "description": "Indicates whether the operation applies to data-plane."
          },
          "name": {
            "type": "string",
            "description": "Operation name, in format of {provider}/{resource}/{operation}"
          },
          "display": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "The resource provider."
              },
              "resource": {
                "type": "string",
                "description": "Resource on which the operation is performed."
              },
              "operation": {
                "type": "string",
                "description": "Type of operation: get, read, delete, etc."
              },
              "description": {
                "type": "string",
                "description": "Description of this operation."
              }
            },
            "description": "Display metadata associated with the operation."
          }
        },
        "description": "Results of the request to list operations."
      },
      "Properties": {
        "properties": {
          "AccessMode": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "properties": {
              "items": {
                "type": "string"
              }
            }
          },
          "DataResilience": {
            "type": "boolean"
          },
          "FailoverSpeed": {
            "type": "string",
            "description": "PerformanceTier indicates how PersistentVolumeClaims should be bound."
          },
          "Limitations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "properties": {
              "items": {
                "type": "string"
              }
            }
          },
          "Performance": {
            "type": "string",
            "description": "PerformanceTier indicates how PersistentVolumeClaims should be bound."
          },
          "Priority": {
            "type": "integer",
            "description": "the less the better"
          },
          "allowVolumeExpansion": {
            "type": "boolean",
            "description": "AllowVolumeExpansion shows whether the storage class allow volume expand"
          },
          "default": {
            "type": "boolean",
            "description": "Default is whether the storageclass is configed as default storageclass"
          },
          "mountOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "properties": {
              "items": {
                "type": "string"
              }
            },
            "description": "Dynamically provisioned PersistentVolumes of this storage class are created with these mountOptions, e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid."
          },
          "provisioner": {
            "type": "string",
            "description": "Provisioner is the provisioner of the storageclass"
          },
          "storageclasstype": {
            "type": "string",
            "description": "StorageClassType is the type of the storageclass"
          },
          "templateParameters": {
            "type": "object",
            "properties": {
              "accessKeyID": {
                "type": "string",
                "description": "the AccessKeyID used by S3 module"
              },
              "backingStorageClassName": {
                "type": "string",
                "description": "the backing storageclass used by the created storageclass"
              },
              "endpoint": {
                "type": "string",
                "description": "the endpoint used by S3 module"
              },
              "region": {
                "type": "string",
                "description": "the region used by S3 module"
              },
              "secretAccessKey": {
                "type": "string",
                "description": "the secretAccessKey used by S3 module"
              }
            },
            "description": "TemplateParameters are parameters used for storageclass template"
          },
          "volumeBindingMode": {
            "type": "string",
            "description": "VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature."
          },
          "provisioningState": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "scProvisioningState": {
                "type": "string",
                "description": "State of the SC Provisioner"
              }
            },
            "description": "ManagedStorageClassStatus defines the observed state of ManagedStorageClass"
          }
        }
      },
      "": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/Properties"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Id"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Name"
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Type"
          },
          "location": {
            "type": "string",
            "description": "The resource location"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "extendedLocation": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The extended location type."
              },
              "name": {
                "type": "string",
                "description": "The extended location name."
              }
            }
          }
        },
        "required": [
          "location"
        ],
        "description": "The  resource definition."
      },
      "Patch": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          }
        },
        "description": "The  resource patch definition."
      },
      "ListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/"
            }
          },
          "nextLink": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "samplesNameParameter": {
        "name": "samplesName",
        "in": "path",
        "required": true,
        "type": "string",
        "maxLength": 64,
        "minLength": 3
      },
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
      },
      "ResourceGroupNameParameter": {
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the resource group."
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
      },
      "NameParameter": {
        "name": "Name",
        "in": "path",
        "required": true,
        "type": "string",
        "maxLength": 64,
        "minLength": 3
      }
    }
  }