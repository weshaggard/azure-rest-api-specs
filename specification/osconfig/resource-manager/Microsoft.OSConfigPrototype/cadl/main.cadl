import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using OpenAPI;
using Autorest;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Foundations;

#suppress "@azure-tools/cadl-azure-core/casing-style" "Existing service name."
@armProviderNamespace
@service({
  title: "Microsoft.OSConfigPrototype",
  version: "2023-03-01-preview",
})
@useDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.OSConfigPrototype;

interface Operations extends Azure.ResourceManager.Operations {}

@doc("Device identity.")
model DeviceIdentity {
  @secret
  @visibility("create", "update")
  @doc("Identifier of the device.")
  deviceId?: string;
  
  @secret
  @visibility("create", "update")
  @doc("Identifier of the module.")
  moduleId?: string;

  @secret
  @visibility("create", "update")
  @doc("Connection string of the device.")
  connectionString?: string;
}

@doc("Device resource.")
model Device is TrackedResource<DeviceProperties> {
  @key("deviceName")
  @path
  @segment("devices")
  @pattern("^[a-zA-Z0-9-]{3,36}$")
  @doc("Name of the device.")
  name: string;
}

@doc("Device properties.")
model DeviceProperties {
  @extension("x-ms-secret", true)
  @visibility("create", "update")
  @doc("Identity of the device.")
  identity?: DeviceIdentity;

  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@parentResource(Device)
model Assignment is TrackedResource<AssignmentProperties> {
  @key("assignmentName")
  @path
  @segment("assignments")
  @pattern("^[a-zA-Z0-9-]{3,36}$")
  @doc("Name of the assignment.")
  name: string;
}

@doc("Assignment properties.")
model AssignmentProperties {
  @visibility("create", "update", "read")
  @doc("Name of the MIM component.")
  componentName?: string;
  
  @visibility("create", "update", "read")
  @doc("Name of the desired MIM object.")
  desiredObjectName?: string;
  
  @visibility("create", "update", "read")
  @doc("Value of the desired MIM object.")
  desiredObjectValue?: string;

  @visibility("create", "update", "read")
  @doc("Name of the reported MIM object.")
  reportedObjectName?: string;
  
  @visibility("create", "update", "read")
  @doc("Value of the reported MIM object.")
  reportedObjectValue?: string;

  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@armResourceOperations
interface Devices extends TrackedResourceOperations<Device, DeviceProperties> {
  delete is ArmResourceDeleteSync<Device>
}

@armResourceOperations
interface Assignments extends TrackedResourceOperations<Assignment, AssignmentProperties> {
  delete is ArmResourceDeleteSync<Assignment>
}

@lroStatus
enum ProvisioningState {
  // ...ResourceProvisioningState,
  Succeeded,
  Failed,
  Canceled,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}
