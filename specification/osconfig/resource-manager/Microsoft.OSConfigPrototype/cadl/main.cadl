import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.Core;
using Azure.ResourceManager;

#suppress "@azure-tools/cadl-azure-core/casing-style" "Existing service name."
@armProviderNamespace
@service({
  title: "Microsoft.OSConfigPrototype",
  version: "2023-01-01-preview",
})
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.OSConfigPrototype;

interface Operations extends Azure.ResourceManager.Operations {}

@doc("Device resource.")
model Device is TrackedResource<DeviceProperties> {
  @key("deviceName")
  @path
  @segment("devices")
  @pattern("^[a-zA-Z0-9-]{3,24}$")
  @doc("Name of the device.")
  name: string;
}

@doc("Device properties.")
model DeviceProperties {
  @secret
  @visibility("create", "update")
  @doc("Connection string of the device.")
  connectionString?: string;

  @visibility("create", "update", "read")
  @doc("Desired state of the device.")
  desired?: string;

  @visibility("read")
  @doc("Reported state of the device.")
  reported?: string;

  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;
}

@armResourceOperations
interface Devices extends ResourceOperations<Device, DeviceProperties> {
  delete is ArmResourceDeleteSync<Device>
}

@lroStatus
enum ProvisioningState {
  ...ResourceProvisioningState,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}
