enum CommandAction {
  None: 0,
  Reboot: 1,
  Shutdown: 2,
  RunCommand: 3,
  RefreshCommandStatus: 4,
  CancelCommand: 5,
}

@doc("Command arguments.")
model CommandArguments {
  @visibility("create", "update", "read")
  @doc("Identifer of the command.")
  commandId?: string;
  
  @visibility("create", "update", "read")
  @doc("Arguments of the command.")
  arguments?: string;
  
  @visibility("create", "update", "read")
  @doc("Timeout of the command.")
  timeout?: integer;
  
  @visibility("create", "update", "read")
  @doc("Whether to use single line text result or not.")
  singleLineTextResult?: boolean;
  
  @visibility("create", "update", "read")
  @doc("Action of the command.")
  action?: CommandAction;
}

@doc("Desired properties for CommandRunner.")
model DesiredCommandRunnerProperties {
  @visibility("create", "update", "read")
  @doc("Arguments of the command.")
  commandArguments?: string;
}

enum CommandState {
  Unknown: 0,
  Running: 1,
  Succeeded: 2,
  Failed: 3,
  TimedOut: 4,
  Canceled: 5,
}

@doc("Command status.")
model CommandStatus {
  @visibility("read")
  @doc("Identifier of the command.")
  commandId?: string;
  
  @visibility("read")
  @doc("Result code of the command.")
  resultCode?: integer;
  
  @visibility("read")
  @doc("Text result of the command.")
  textResult?: string;

  @visibility("read")
  @doc("State of the command.")
  currentState?: CommandState;
}

@doc("Reported properties for CommandRunner.")
model ReportedCommandRunnerProperties {
  @visibility("read")
  @doc("Status of the command.")
  commandStatus?: CommandStatus;
}