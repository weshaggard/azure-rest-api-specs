{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.OSConfigPrototype",
    "version": "2023-01-01-preview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Devices"
    }
  ],
  "paths": {
    "/providers/Microsoft.OSConfigPrototype/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OSConfigPrototype/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListBySubscription",
        "description": "List Device resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DevicesListBySubscription": {
            "$ref": "./examples/Devices_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OSConfigPrototype/devices": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_ListByResourceGroup",
        "description": "List Device resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "DevicesListByResourceGroup": {
            "$ref": "./examples/Devices_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OSConfigPrototype/devices/{deviceName}": {
      "get": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Get",
        "description": "Get a Device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "description": "Name of the device.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevicesGet": {
            "$ref": "./examples/Devices_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_CreateOrUpdate",
        "description": "Create a Device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "description": "Name of the device.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevicesCreateOrUpdate": {
            "$ref": "./examples/Devices_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Update",
        "description": "Update a Device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "description": "Name of the device.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DeviceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevicesUpdate": {
            "$ref": "./examples/Devices_Update.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Devices"
        ],
        "operationId": "Devices_Delete",
        "description": "Delete a Device",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "deviceName",
            "in": "path",
            "required": true,
            "description": "Name of the device.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "DevicesDelete": {
            "$ref": "./examples/Devices_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CommandRunner.Desired.CommandAction": {
      "type": "number",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "x-ms-enum": {
        "name": "CommandAction",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": 0
          },
          {
            "name": "Reboot",
            "value": 1
          },
          {
            "name": "Shutdown",
            "value": 2
          },
          {
            "name": "RunCommand",
            "value": 3
          },
          {
            "name": "RefreshCommandStatus",
            "value": 4
          },
          {
            "name": "CancelCommand",
            "value": 5
          }
        ]
      }
    },
    "CommandRunner.Desired.CommandArguments": {
      "type": "object",
      "properties": {
        "commandId": {
          "type": "string",
          "description": "Identifer of the command.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "arguments": {
          "type": "string",
          "description": "Arguments of the command.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "timeout": {
          "description": "Timeout of the command.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "singleLineTextResult": {
          "type": "boolean",
          "description": "Whether to use single line text result or not.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "action": {
          "$ref": "#/definitions/CommandRunner.Desired.CommandAction",
          "description": "Action of the command.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Command arguments."
    },
    "CommandRunner.Desired.Properties": {
      "type": "object",
      "properties": {
        "commandArguments": {
          "$ref": "#/definitions/CommandRunner.Desired.CommandArguments",
          "description": "Arguments of the command.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Desired properties."
    },
    "CommandRunner.Reported.CommandState": {
      "type": "number",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "x-ms-enum": {
        "name": "CommandState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": 0
          },
          {
            "name": "Running",
            "value": 1
          },
          {
            "name": "Succeeded",
            "value": 2
          },
          {
            "name": "Failed",
            "value": 3
          },
          {
            "name": "TimedOut",
            "value": 4
          },
          {
            "name": "Canceled",
            "value": 5
          }
        ]
      }
    },
    "CommandRunner.Reported.CommandStatus": {
      "type": "object",
      "properties": {
        "commandId": {
          "type": "string",
          "description": "Identifier of the command.",
          "readOnly": true
        },
        "resultCode": {
          "description": "Result code of the command.",
          "readOnly": true
        },
        "textResult": {
          "type": "string",
          "description": "Text result of the command.",
          "readOnly": true
        },
        "currentState": {
          "$ref": "#/definitions/CommandRunner.Reported.CommandState",
          "description": "State of the command.",
          "readOnly": true
        }
      },
      "description": "Command status."
    },
    "CommandRunner.Reported.Properties": {
      "type": "object",
      "properties": {
        "commandStatus": {
          "$ref": "#/definitions/CommandRunner.Reported.CommandStatus",
          "description": "Status of the command.",
          "readOnly": true
        }
      },
      "description": "Reported properties."
    },
    "DesiredProperties": {
      "type": "object",
      "properties": {
        "commandRunner": {
          "$ref": "#/definitions/CommandRunner.Desired.Properties",
          "description": "Desired properties for CommandRunner.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "firewall": {
          "$ref": "#/definitions/Firewall.Desired.Properties",
          "description": "Desired properties for Firewall.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "hostName": {
          "$ref": "#/definitions/HostName.Desired.Properties",
          "description": "Desired properties for HostName.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Desired properties."
    },
    "Device": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Device resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DeviceIdentity": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Identifier of the device.",
          "format": "password",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "moduleId": {
          "type": "string",
          "description": "Identifier of the module.",
          "format": "password",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "connectionString": {
          "type": "string",
          "description": "Connection string of the device.",
          "format": "password",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        }
      },
      "description": "Device identity."
    },
    "DeviceInfo.Reported.Properties": {
      "type": "object",
      "properties": {
        "osName": {
          "type": "string",
          "description": "Name of the OS.",
          "readOnly": true
        },
        "osVersion": {
          "type": "string",
          "description": "Version of the OS.",
          "readOnly": true
        },
        "cpuType": {
          "type": "string",
          "description": "Type of the CPU.",
          "readOnly": true
        },
        "cpuVendorId": {
          "type": "string",
          "description": "Identifier of the CPU vendor.",
          "readOnly": true
        },
        "cpuModel": {
          "type": "string",
          "description": "Model of the CPU.",
          "readOnly": true
        },
        "totalMemory": {
          "description": "Total memory available on the system.",
          "readOnly": true
        },
        "freeMemory": {
          "description": "Free memory available on the system.",
          "readOnly": true
        },
        "kernelName": {
          "type": "string",
          "description": "Name of the kernel.",
          "readOnly": true
        },
        "kernelRelease": {
          "type": "string",
          "description": "Release of the kernel.",
          "readOnly": true
        },
        "kernelVersion": {
          "type": "string",
          "description": "Version of the kernel.",
          "readOnly": true
        },
        "productVendor": {
          "type": "string",
          "description": "Vendor of the product.",
          "readOnly": true
        },
        "productName": {
          "type": "string",
          "description": "Name of the product.",
          "readOnly": true
        },
        "productVersion": {
          "type": "string",
          "description": "Version of the product.",
          "readOnly": true
        },
        "systemCapabilities": {
          "type": "string",
          "description": "Capabilities of the system.",
          "readOnly": true
        },
        "systemConfiguration": {
          "type": "string",
          "description": "Configuration the system.",
          "readOnly": true
        },
        "osConfigVersion": {
          "type": "string",
          "description": "Version of OSConfig.",
          "readOnly": true
        }
      },
      "description": "Reported properties."
    },
    "DeviceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          },
          "x-cadl-name": "Device[]",
          "description": "The Device items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a Device list operation.",
      "required": [
        "value"
      ]
    },
    "DeviceProperties": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/DeviceIdentity",
          "description": "Identity of the device.",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "desired": {
          "$ref": "#/definitions/DesiredProperties",
          "description": "Desired state of the device.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "reported": {
          "$ref": "#/definitions/ReportedProperties",
          "description": "Reported state of the device.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "description": "Device properties."
    },
    "DeviceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/DeviceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the Device."
    },
    "DeviceUpdateProperties": {
      "type": "object",
      "properties": {
        "identity": {
          "$ref": "#/definitions/DeviceIdentity",
          "description": "Identity of the device.",
          "x-ms-secret": true,
          "x-ms-mutability": [
            "update",
            "create"
          ]
        },
        "desired": {
          "$ref": "#/definitions/DesiredProperties",
          "description": "Desired state of the device.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the Device."
    },
    "Firewall.Desired.DefaultPolicy": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/Firewall.Desired.DefaultPolicyDirection",
          "description": "Direction of the default policy.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "action": {
          "$ref": "#/definitions/Firewall.Desired.DefaultPolicyAction",
          "description": "Action of the default policy.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Default policy."
    },
    "Firewall.Desired.DefaultPolicyAction": {
      "type": "string",
      "enum": [
        "accept",
        "drop"
      ],
      "x-ms-enum": {
        "name": "DefaultPolicyAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Accept",
            "value": "accept"
          },
          {
            "name": "Drop",
            "value": "drop"
          }
        ]
      }
    },
    "Firewall.Desired.DefaultPolicyDirection": {
      "type": "string",
      "enum": [
        "in",
        "out"
      ],
      "x-ms-enum": {
        "name": "DefaultPolicyDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "in"
          },
          {
            "name": "Out",
            "value": "out"
          }
        ]
      }
    },
    "Firewall.Desired.Properties": {
      "type": "object",
      "properties": {
        "desiredRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Firewall.Desired.Rule"
          },
          "x-ms-identifiers": [
            "sourceAddress",
            "sourcePort",
            "destinationAddress",
            "destinationPort"
          ],
          "x-cadl-name": "Firewall.Desired.Rule[]",
          "description": "Rules of the firewall.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "desiredDefaultPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Firewall.Desired.DefaultPolicy"
          },
          "x-ms-identifiers": [
            "direction",
            "action"
          ],
          "x-cadl-name": "Firewall.Desired.DefaultPolicy[]",
          "description": "Default policies of the firewall.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Desired properties."
    },
    "Firewall.Desired.Rule": {
      "type": "object",
      "properties": {
        "desiredState": {
          "$ref": "#/definitions/Firewall.Desired.RuleState",
          "description": "State of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "action": {
          "$ref": "#/definitions/Firewall.Desired.RuleDirection",
          "description": "Action of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "direction": {
          "$ref": "#/definitions/Firewall.Desired.RuleAction",
          "description": "Direction of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "protocol": {
          "$ref": "#/definitions/Firewall.Desired.RuleProtocol",
          "description": "Protocol of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "sourceAddress": {
          "type": "string",
          "description": "Source address of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "sourcePort": {
          "description": "Source port of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "destinationAddress": {
          "type": "string",
          "description": "Destination address of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "destinationPort": {
          "description": "Destination port of the rule.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Rule."
    },
    "Firewall.Desired.RuleAction": {
      "type": "string",
      "enum": [
        "accept",
        "drop",
        "reject"
      ],
      "x-ms-enum": {
        "name": "RuleAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Accept",
            "value": "accept"
          },
          {
            "name": "Drop",
            "value": "drop"
          },
          {
            "name": "Reject",
            "value": "reject"
          }
        ]
      }
    },
    "Firewall.Desired.RuleDirection": {
      "type": "string",
      "enum": [
        "in",
        "out"
      ],
      "x-ms-enum": {
        "name": "RuleDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "in"
          },
          {
            "name": "Out",
            "value": "out"
          }
        ]
      }
    },
    "Firewall.Desired.RuleProtocol": {
      "type": "string",
      "enum": [
        "any",
        "tcp",
        "udp",
        "icmp"
      ],
      "x-ms-enum": {
        "name": "RuleProtocol",
        "modelAsString": true,
        "values": [
          {
            "name": "Any",
            "value": "any"
          },
          {
            "name": "TCP",
            "value": "tcp"
          },
          {
            "name": "UDP",
            "value": "udp"
          },
          {
            "name": "ICMP",
            "value": "icmp"
          }
        ]
      }
    },
    "Firewall.Desired.RuleState": {
      "type": "string",
      "enum": [
        "present",
        "absent"
      ],
      "x-ms-enum": {
        "name": "RuleState",
        "modelAsString": true,
        "values": [
          {
            "name": "Present",
            "value": "present"
          },
          {
            "name": "Absent",
            "value": "absent"
          }
        ]
      }
    },
    "Firewall.Reported.ConfigurationStatus": {
      "type": "string",
      "enum": [
        "unknown",
        "success",
        "failure"
      ],
      "x-ms-enum": {
        "name": "ConfigurationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "unknown"
          },
          {
            "name": "Success",
            "value": "success"
          },
          {
            "name": "Failure",
            "value": "failure"
          }
        ]
      }
    },
    "Firewall.Reported.DefaultPolicy": {
      "type": "object",
      "properties": {
        "direction": {
          "$ref": "#/definitions/Firewall.Reported.DefaultPolicyDirection",
          "description": "Direction of the default policy.",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/Firewall.Reported.DefaultPolicyAction",
          "description": "Action of the default policy.",
          "readOnly": true
        }
      },
      "description": "Default policy."
    },
    "Firewall.Reported.DefaultPolicyAction": {
      "type": "string",
      "enum": [
        "accept",
        "drop"
      ],
      "x-ms-enum": {
        "name": "DefaultPolicyAction",
        "modelAsString": true,
        "values": [
          {
            "name": "Accept",
            "value": "accept"
          },
          {
            "name": "Drop",
            "value": "drop"
          }
        ]
      }
    },
    "Firewall.Reported.DefaultPolicyDirection": {
      "type": "string",
      "enum": [
        "in",
        "out"
      ],
      "x-ms-enum": {
        "name": "DefaultPolicyDirection",
        "modelAsString": true,
        "values": [
          {
            "name": "In",
            "value": "in"
          },
          {
            "name": "Out",
            "value": "out"
          }
        ]
      }
    },
    "Firewall.Reported.Properties": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/Firewall.Reported.State",
          "description": "State of the firewall.",
          "readOnly": true
        },
        "fingerprint": {
          "type": "string",
          "description": "Fingerprint of the firewall.",
          "readOnly": true
        },
        "configurationStatus": {
          "$ref": "#/definitions/Firewall.Reported.ConfigurationStatus",
          "description": "Configuration status of the firewall.",
          "readOnly": true
        },
        "configurationStatusDetail": {
          "type": "string",
          "description": "Configuration status details of the firewall.",
          "readOnly": true
        },
        "defaultPolicies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Firewall.Reported.DefaultPolicy"
          },
          "x-ms-identifiers": [
            "direction",
            "action"
          ],
          "x-cadl-name": "Firewall.Reported.DefaultPolicy[]",
          "description": "Default policies of the firewall.",
          "readOnly": true
        }
      },
      "description": "Reported properties."
    },
    "Firewall.Reported.State": {
      "type": "string",
      "enum": [
        "unknown",
        "enabled",
        "disabled"
      ],
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "unknown"
          },
          {
            "name": "Enabled",
            "value": "enabled"
          },
          {
            "name": "Disabled",
            "value": "disabled"
          }
        ]
      }
    },
    "HostName.Desired.Properties": {
      "type": "object",
      "properties": {
        "desiredName": {
          "type": "string",
          "description": "Host name of the device.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "desiredHosts": {
          "type": "string",
          "description": "Hosts of the device.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Desired properties."
    },
    "HostName.Reported.Properties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Host name of the device.",
          "readOnly": true
        },
        "hosts": {
          "type": "string",
          "description": "Hosts of the device.",
          "readOnly": true
        }
      },
      "description": "Reported properties."
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ReportedProperties": {
      "type": "object",
      "properties": {
        "commandRunner": {
          "$ref": "#/definitions/CommandRunner.Reported.Properties",
          "description": "Reported properties for CommandRunner.",
          "readOnly": true
        },
        "deviceInfo": {
          "$ref": "#/definitions/DeviceInfo.Reported.Properties",
          "description": "Reported properties for DeviceInfo.",
          "readOnly": true
        },
        "firewall": {
          "$ref": "#/definitions/Firewall.Reported.Properties",
          "description": "Reported properties for Firewall.",
          "readOnly": true
        },
        "hostName": {
          "$ref": "#/definitions/HostName.Reported.Properties",
          "description": "Reported properties for HostName.",
          "readOnly": true
        }
      },
      "description": "Reported properties."
    }
  },
  "parameters": {}
}
