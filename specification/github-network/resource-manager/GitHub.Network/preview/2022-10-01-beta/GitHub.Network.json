{
  "swagger": "2.0",
  "info": {
    "version": "2022-10-01-beta",
    "title": "GitHub.Network client",
    "description": "GitHub.Network Resource Provider REST API version 2022-10-01-beta"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/GitHub.Network/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Retrieves a list of available API operations",
        "summary": "Retrieves a list of available API operations under this Resource Provider.",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of operations under GitHub.Network resource provider.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound.",
            "schema": {
              "$ref": "#/definitions/OperationsErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OperationsGet": {
            "$ref": "./examples/OperationGroupGet.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/GitHub.Network/{networkSettingsType}/{networkSettingsName}": {
      "get": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Retrieves information about a GitHub.Network resource.",
        "description": "Retrieves the properties of a GitHub.Network resource.",
        "operationId": "Resource_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the GitHub.Network resource",
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (GitHub.Network resource does not exist.)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceGet": {
            "$ref": "./examples/ResourceGet_example.json"
          }
        }
      },
      "delete": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Deletes a GitHub.Network resource.",
        "description": "Deletes an existing GitHub.Network resource.",
        "operationId": "Resource_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the GitHub.Network resource is deleted."
          },
          "204": {
            "description": "The request was successful; GitHub.Network resource does not exist."
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict(GitHub.Network resource is in a non-terminal state due to an ongoing operation.)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceDelete": {
            "$ref": "./examples/ResourceDelete_example.json"
          }
        }
      },
      "put": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Creates a GitHub.Network resource.",
        "description": "Creates a GitHub.Network resource with the specified create parameters.",
        "operationId": "Resource_Create",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsNameParameter"
          },
          {
            "name": "networkSettings",
            "in": "body",
            "description": "GitHub.Network resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the GitHub.Network resource",
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResource",
              "x-ms-azure-resource": true
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (GitHub.Network resource could not be created/updated)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceCreate": {
            "$ref": "./examples/ResourceCreate_example.json"
          }
        }
      },
      "patch": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Updates a GitHub.Network resource.",
        "description": "Updates the properties of an existing GitHub.Network resource with the specified update parameters.",
        "operationId": "Resource_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsNameParameter"
          },
          {
            "name": "networkSettings",
            "in": "body",
            "description": "Parameters for updating the GitHub.Network resource.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated GitHub.Network resource.",
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResource",
              "x-ms-azure-resource": true
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (GitHub.Network resource does not exist.)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ResourceUpdate": {
            "$ref": "./examples/ResourceUpdate_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/GitHub.Network/{networkSettingsType}": {
      "get": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Retrieves information about all GitHub.Network resources under the given subscription and resource group",
        "description": "Retrieves the properties of all GitHub.Network resources.",
        "operationId": "Resource_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the GitHub.Network resource",
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResourceList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (GitHub.Network resource does not exist.)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ResourceListGet": {
            "$ref": "./examples/ResourceListGet_example.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/GitHub.Network/{networkSettingsType}": {
      "get": {
        "tags": [
          "networkSettings"
        ],
        "summary": "Retrieves information about all GitHub.Network resources under the given subscription",
        "description": "Retrieves the properties of all GitHub.Network resources.",
        "operationId": "Resource_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/NetworkSettingsTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of GitHub.Network resources",
            "schema": {
              "$ref": "#/definitions/NetworkSettingsResourceList"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (GitHub.Network resource does not exist.)",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "ResourceListBySub": {
            "$ref": "./examples/ResourceListBySub_example.json"
          }
        }
      }
    }
  },
  "definitions": {
    "OperationsErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "description": "Error definition.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the sub status for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "An Azure resource.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id for the resource.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Tags for the GitHub.Network resource",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "description": "Region where the Azure resource is located.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "x-ms-azure-resource": true
    },
    "Identity": {
      "type": "object",
      "description": "Model representing a managed identity for a GitHub.Network resource.",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'None' will remove any identities.",
          "enum": [
            "None",
            "SystemAssigned"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": false
          }
        },
        "principalId": {
          "description": "The principal ID of resource identity",
          "type": "string",
          "readOnly": true
        },
        "tenantId": {
          "description": "The tenant ID of resource",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceProviderOperationList": {
      "description": "List containing this Resource Provider's available operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Resource provider operations list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperationDefinition"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next page for list of Azure operations.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourceProviderOperationDefinition": {
      "description": "Describes the Resource Provider Operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource provider operation name.",
          "type": "string"
        },
        "display": {
          "description": "Resource provider display properties.",
          "$ref": "#/definitions/ResourceProviderOperationDisplay"
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "description": "Describes the properties of the Operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the resource provider.",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type.",
          "type": "string"
        },
        "operation": {
          "description": "Name of the resource provider operation.",
          "type": "string"
        },
        "description": {
          "description": "Description of the resource provider operation.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response indicates that the service is not able to process the incoming request.",
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "NetworkSettingsResource": {
      "type": "object",
      "description": "GitHub.Network resource. Represents the high level Network needed for vnet injection.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "identity": {
          "$ref": "#/definitions/Identity",
          "description": "The managed identity associated with the resource."
        },
        "properties": {
          "type": "object",
          "description": "Additional GitHub.Network resource properties.",
          "title": "GitHub.Network resource properties",
          "properties": {
            "subnetId": {
              "description": "Specifies a subnet ID for vnet-injection.",
              "type": "string"
            }
          }
        }
      }
    },
    "NetworkSettingsResourceList": {
      "description": "Object that includes an array of GitHub.Network resources and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of GitHub.Network resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkSettingsResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "maxLength": 90,
      "minLength": 1,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    },
    "NetworkSettingsTypeParameter": {
      "name": "networkSettingsType",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the GitHub.Network resource type",
      "pattern": "^(?:actionsNetworkSettings|codespacesNetworkSettings)$",
      "x-ms-parameter-location": "method"
    },
    "NetworkSettingsNameParameter": {
      "name": "networkSettingsName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the GitHub.Network resource",
      "pattern": "^[a-zA-Z0-9]",
      "x-ms-parameter-location": "method"
    }
  }
}
