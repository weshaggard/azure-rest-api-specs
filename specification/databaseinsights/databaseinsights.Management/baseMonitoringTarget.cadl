import "@cadl-lang/rest";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-providerhub-controller";

namespace Microsoft.DatabaseInsights;

using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;
using OpenAPI;


@doc("Generic properties of a monitoring target")
@discriminator("targetType")
model MonitoringTargetProperties {
 
  @doc("To use SQL authentication for monitoring targets, specify the vault where username and password secrets are stored")
  targetVault?: VaultSecret;

  @doc("The server name to use in the connection string when connecting to a target. Port number and instance name must be specified separately.")
  @maxLength(200)
  connectionServerName: string;

  @doc("Monitoring target collection status")
  @knownValues(MonitoringTargetCollectionStatus)
  targetCollectionStatus?: string;

  @visibility("read")
  @doc("The provisioning state of the resource.")
  provisioningState?: ResourceProvisioningState;

}
@doc("Vault specific details required if using SQL authentication to connect to a target")
model VaultSecret {
  @doc("ARM ResourceId of the Key Vault instance storing database authentication secrets")
  akvResourceId?: string;
  
  @doc("The path to the Key Vault secret storing the login name (aka user name, aka account name) for authentication to a monitoring target")
  akvTargetUser?: string;

  @doc("The path to the Key Vault secret storing the password for authentication to a monitoring target")
  akvTargetPassword?: string;
}

@doc("Monitoring target states")
enum MonitoringTargetCollectionStatus {
  Enabled,
  Disabled
}

@armResourceOperations
interface MonitoringTargets extends ProxyResourceOperations<MonitoringTarget> {}

