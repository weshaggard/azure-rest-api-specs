import "@cadl-lang/rest";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-providerhub-controller";
import "./sqlDbSingleDatabaseTarget.cadl";
import "./sqlDbElasticPoolTarget.cadl";
import "./sqlMiTarget.cadl";
import "./sqlVmTarget.cadl";

@service({
  title: "Microsoft.DatabaseInsights",
  version: "2023-03-01-preview",
})

@Versioning.versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
@armProviderNamespace
namespace Microsoft.DatabaseInsights;

using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;
using OpenAPI;

interface Operations extends Azure.ResourceManager.Operations {}

@doc("A DatabaseInsightsProviderHub resource")
model DatabaseMonitoringAgent is TrackedResource<DatabaseMonitoringAgentProperties> {
  @doc("Database Monitoring Agent name.")
  @key("databaseMonitoringAgentName")
  @pattern("^[a-zA-Z]{1}[a-zA-Z0-9-_]{3,60}$")
  @path
  @segment("databaseMonitoringAgents")
  name: string;
}

@doc("rp specific properties of the resource DatabaseMonitoring Agent")
model DatabaseMonitoringAgentProperties {
  @doc("A data store for collected monitoring data.")
  datastore?: Datastore;
  
  @visibility("read")
  @doc("The provisioning state of the resource.")
  provisioningState?: ResourceProvisioningState;

  ...ManagedServiceIdentity
}

@doc("Properties of data store")
model Datastore {
  @doc("ARM ResourceId of an Azure Data Explorer database.")
  adxDatabaseResourceId: string;
  @doc("URI of an Azure Data Explorer Cluster.")
  adxClusterUri: string;
}

@armResourceOperations
interface DatabaseMonitoringAgents extends ResourceOperations<DatabaseMonitoringAgent, DatabaseMonitoringAgentProperties> {
  @doc("Action to start monitoring all monitoring targets in a given Database Monitoring Agent.")
  @action 
  @post
  @armResourceAction(DatabaseMonitoringAgent)
  startAgent(...ResourceInstanceParameters<DatabaseMonitoringAgent>): ArmResponse<DatabaseMonitoringAgent> | ErrorResponse;
}

@parentResource(DatabaseMonitoringAgent)
model MonitoringTarget is ProxyResource<MonitoringTargetProperties> {
  @doc("Monitoring target resource name.")
  @key("monitoringTargetName")
  @pattern("^[a-zA-Z]{1}[a-zA-Z0-9-_]{3,60}$")
  @segment("monitoringTargets")
  @path
  name: string;
}