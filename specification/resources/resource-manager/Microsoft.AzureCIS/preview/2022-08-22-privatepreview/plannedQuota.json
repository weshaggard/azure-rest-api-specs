{
  "swagger": "2.0",
  "info": {
    "title": "Foundational ARM Client",
    "description": "PlannedQuota Provider",
    "version": "2022-08-22-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.AzureCIS/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available PlannedQuota provider operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "List operations": {
            "$ref": "./examples/PlannedQuotaOperationList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/plannedQuotas": {
      "get": {
        "description": "List all PlannedQuota info in the subscription.",
        "x-ms-examples": {
          "List PlannedQuotas in a subscription": {
            "$ref": "./examples/GetAllPlannedQuota.json"
          }
        },
        "operationId": "PlannedQuota_ListSubscriptionLevel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List all PlannedQuota in the specified subscription.",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModelArray"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/plannedQuotas": {
      "get": {
        "description": "List all PlannedQuota in the resource group.",
        "x-ms-examples": {
          "List all PlannedQuotas in a resource group": {
            "$ref": "./examples/GetPlannedQuotaInResourceGroup.json"
          }
        },
        "operationId": "PlannedQuota_ListResourceGroupLevel",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List PlannedQuota in the resource group.",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModelArray"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/plannedQuotas/{resourceName}": {
      "put": {
        "description": "Create or update PlannedQuota for resource group.",
        "x-ms-examples": {
          "Create or update PlannedQuota": {
            "$ref": "./examples/CreatePlannedQuota.json"
          }
        },
        "operationId": "PlannedQuota_CreateUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "PlannedQuota",
            "description": "PlannedQuotas details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PlannedQuota updated successfully.",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "201": {
            "description": "PlannedQuota created successfully.",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch PlannedQuota for the resource group.",
        "x-ms-examples": {
          "Patch PlannedQuota": {
            "$ref": "./examples/PatchPlannedQuota.json"
          }
        },
        "operationId": "plannedQuota_Patch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "PlannedQuota",
            "description": "PlannedQuota details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch request has been accepted, resource is already in the state matching the PATCH request body.",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "202": {
            "description": "Patch request ahs been accepted.",
            "headers": {
              "Location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Returns PlannedQuota info.",
        "x-ms-examples": {
          "Get PlannedQuota": {
            "$ref": "./examples/GetPlannedQuota.json"
          }
        },
        "operationId": "plannedQuota_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get PlannedQuota info",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete PlannedQuota",
        "x-ms-examples": {
          "Delete PlannedQuota": {
            "$ref": "./examples/DeletePlannedQuota.json"
          }
        },
        "operationId": "plannedQuota_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete request has been accepted"
          },
          "202": {
            "description": "Delete request has been accepted",
            "headers": {
              "Location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Delete request has been accepted"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/plannedQuotas/{resourceName}": {
      "put": {
        "description": "Create or update PlannedQuota (subscription only)",
        "x-ms-examples": {
          "Create or update plannedQuota": {
            "$ref": "./examples/CreatePlannedQuotaSubOnly.json"
          }
        },
        "operationId": "PlannedQuota_SubOnlyCreateUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "PlannedQuota",
            "description": "PlannedQuotas details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "plannedQuota resource created successfully",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "200": {
            "description": "plannedQuota resource updated successfully",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch plannedQuota",
        "x-ms-examples": {
          "Patch plannedQuota": {
            "$ref": "./examples/PatchPlannedQuotaSubOnly.json"
          }
        },
        "operationId": "PlannedQuota_SubOnlyPatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "PlannedQuota",
            "description": "PlannedQuota details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patch request has been accepted, resource is already in the state matching the PATCH request body",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "202": {
            "description": "Patch request has been accepted",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "description": "Returns an plannedQuota info",
        "x-ms-examples": {
          "Get plannedQuota": {
            "$ref": "./examples/GetPlannedQuotaSubOnly.json"
          }
        },
        "operationId": "PlannedQuota_SubOnlyGet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Get plannedQuota info",
            "schema": {
              "$ref": "#/definitions/PlannedQuotaModel"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete plannedQuota",
        "x-ms-examples": {
          "Delete plannedQuota": {
            "$ref": "./examples/DeletePlannedQuotaSubOnly.json"
          }
        },
        "operationId": "PlannedQuota_SubOnlyDelete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Delete request has been accepted"
          },
          "202": {
            "description": "Delete request has been accepted"
          },
          "204": {
            "description": "Delete request has been accepted"
          },
          "default": {
            "description": "Error response describing the reason for operation failure.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PlannedQuotaModelArray": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlannedQuotaModel"
          },
          "description": "An array of PlannedQuota resource payloads."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of payloads of PlannedQuota resource information."
    },
    "PlannedQuotaModel": {
      "type": "object",
      "description": "Response payload of PlannedQuota resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlannedQuotaResource",
          "description": "Details of PlannedQuota resource."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PlannedQuotaResource": {
      "required": [
        "region",
        "serviceTreeId",
        "subscriptionNameInPlan",
        "subscriptionId"
      ],
      "type": "object",
      "description": "Resource of PlannedQuota.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning State of the resource."
        },
        "contactEmail": {
          "description": "Contact email for manual approval.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resource template.",
          "type": "string"
        },
        "planVersion": {
          "description": "Plan version",
          "type": "string"
        },
        "region": {
          "description": "Region name",
          "type": "string"
        },
        "serviceTreeId": {
          "description": "Service tree id.",
          "type": "string"
        },
        "stage": {
          "description": "Stage name.",
          "type": "string"
        },
        "subscriptionNameInPlan": {
          "description": "Subscription Name in plan.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription id",
          "type": "string"
        },
        "fulfilledplan": {
          "type": "array",
          "description": "fulfilledplan",
          "items": {
            "type": "object",
            "properties": {
              "IsAzEnabled": {
                "type": "boolean",
                "description": "IsAzEnabled"
              },
              "IsHobo": {
                "type": "boolean",
                "description": "Target cluster name"
              },
              "Arm": {
                "type": "object",
                "description": "Arm",
                "properties": {
                  "EnableAzIfAvailable": {
                    "type": "boolean",
                    "description": "IsAzEnabled"
                  },
                  "Vm": {
                    "type": "object",
                    "description": "Vm",
                    "properties": {
                      "Cores": {
                        "type": "object",
                        "description": "Cores",
                        "properties": {
                          "*": {
                            "type": "integer",
                            "description": "*"
                          },
                          "Av2F": {
                            "type": "integer",
                            "description": "Av2F"
                          },
                          "DV3F": {
                            "type": "integer",
                            "description": "DV3F"
                          },
                          "XDV3F": {
                            "type": "integer",
                            "description": "XDV3F"
                          }
                        }
                      }
                    }
                  },
                  "Storage": {
                    "type": "object",
                    "description": "Storage",
                    "properties": {
                      "Accounts": {
                        "type": "integer",
                        "description": "Accounts"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "alternatives": {
          "type": "array",
          "description": "fulfilledplan",
          "items": {
            "type": "object",
            "properties": {}
          }
        },
        "propertyBindings": {
          "type": "array",
          "description": "A list of PropertyBinding payload.",
          "items": {
            "$ref": "#/definitions/PropertyBinding"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "PropertyBinding": {
      "type": "object",
      "description": "Property binding information for the content.",
      "properties": {
        "placeHolder": {
          "description": "Property binding placeholder.",
          "type": "string"
        },
        "resourceName": {
          "description": "Resource name of the property.",
          "type": "string"
        }
      }
    },
    "ProvisioningState": {
      "description": "Provisioning status of the resource.",
      "readOnly": true,
      "enum": [
        "Failed",
        "Succeeded",
        "Canceled",
        "Accepted"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "OperationListResult": {
      "type": "object",
      "description": "Available operations of the service.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations supported by the Resource Provider.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Operation": {
      "description": "Operation detail payload",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the operation",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action",
          "type": "boolean"
        },
        "actionType": {
          "description": "Indicates the action type.",
          "type": "string"
        },
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "Display of the operation"
        },
        "origin": {
          "description": "Origin of the operation",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationProperties",
          "description": "Properties of the operation",
          "x-ms-client-flatten": true
        }
      }
    },
    "OperationDisplay": {
      "description": "Operation display payload",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Resource provider of the operation",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the operation",
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation",
          "type": "string"
        },
        "description": {
          "description": "Localized friendly description for the operation",
          "type": "string"
        }
      }
    },
    "OperationProperties": {
      "description": "Additional details about an operation.",
      "type": "object",
      "x-ms-client-flatten": true,
      "properties": {
        "serviceSpecification": {
          "description": "Details about a service operation.",
          "$ref": "#/definitions/OperationServiceSpecification"
        }
      }
    },
    "OperationServiceSpecification": {
      "description": "Details about a service operation.",
      "type": "object",
      "properties": {
        "logSpecifications": {
          "description": "Details about operations related to logs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationLogSpecification"
          },
          "x-ms-identifiers": []
        },
        "metricSpecifications": {
          "description": "Details about operations related to metrics.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricSpecification"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationLogSpecification": {
      "description": "Details about an operation related to logs.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the log category.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blobs created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    },
    "OperationMetricSpecification": {
      "description": "Details about an operation related to metrics.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the metric.",
          "type": "string"
        },
        "displayName": {
          "description": "Localized display name of the metric.",
          "type": "string"
        },
        "displayDescription": {
          "description": "The description of the metric.",
          "type": "string"
        },
        "unit": {
          "description": "The unit that the metric is measured in.",
          "type": "string"
        },
        "aggregationType": {
          "description": "The type of metric aggregation.",
          "type": "string"
        },
        "enableRegionalMdmAccount": {
          "description": "Whether or not the service is using regional MDM accounts.",
          "type": "string"
        },
        "sourceMdmAccount": {
          "description": "The name of the MDM account.",
          "type": "string"
        },
        "sourceMdmNamespace": {
          "description": "The name of the MDM namespace.",
          "type": "string"
        },
        "availabilities": {
          "description": "Defines how often data for metrics becomes available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationMetricAvailability"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "OperationMetricAvailability": {
      "description": "Defines how often data for a metric becomes available.",
      "type": "object",
      "properties": {
        "timeGrain": {
          "description": "The granularity for the metric.",
          "type": "string"
        },
        "blobDuration": {
          "description": "Blob created in the customer storage account, per hour.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of resource.",
      "x-ms-parameter-location": "method"
    }
  }
}
