{
  "swagger": "2.0",
  "info": {
    "title": "Foundational ARM Client",
    "version": "2023-08-22-preview",
    "description": "storageAccount Provider.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "StorageAccountDsms"
    }
  ],
  "paths": {
    "/providers/Microsoft.AzureCIS/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List Operations StorageAccountDsms": {
            "$ref": "./examples/StorageAccountDsms_Operations.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/storageAccountDsmss": {
      "get": {
        "operationId": "StorageAccountDsms_ListBySubscription",
        "tags": [
          "StorageAccountDsms"
        ],
        "description": "List StorageAccountDsmsResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListBySubscription StorageAccountDsms": {
            "$ref": "./examples/StorageAccountDsms_ListBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/storageAccountDsmss": {
      "get": {
        "operationId": "StorageAccountDsms_ListByResourceGroup",
        "tags": [
          "StorageAccountDsms"
        ],
        "description": "List StorageAccountDsmsResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ListByResourceGroup StorageAccountDsms": {
            "$ref": "./examples/StorageAccountDsms_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/storageAccountDsmss/{resourceName}": {
      "get": {
        "operationId": "StorageAccountDsms_Get",
        "tags": [
          "StorageAccountDsms"
        ],
        "description": "Get a StorageAccountDsmsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get StorageAccountDsms": {
            "$ref": "./examples/StorageAccountDsms_Get.json"
          }
        }
      },
      "put": {
        "operationId": "StorageAccountDsms_CreateOrUpdate",
        "tags": [
          "StorageAccountDsms"
        ],
        "description": "Create a StorageAccountDsmsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'StorageAccountDsmsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResource"
            }
          },
          "201": {
            "description": "Resource 'StorageAccountDsmsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/StorageAccountDsmsResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create StorageAccountDsms": {
            "$ref": "./examples/StorageAccountDsms_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AccountSasInfo": {
      "type": "object",
      "description": "Sas Key Information.",
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "dSMS root folder."
        },
        "name": {
          "type": "string",
          "description": "Name of the storage account."
        },
        "dsmsLocation": {
          "type": "string",
          "description": "Path in Dsms endpoint. If this specified, then RootPath and Name should be ignored."
        },
        "signedPermissions": {
          "type": "string",
          "description": "The signed permissions for the account SAS. Possible values include: Read (r), Write (w), Delete (d), List (l), Add (a), Create (c), Update (u) and Process (p)."
        },
        "signedServices": {
          "type": "string",
          "description": "Services like blob(b), queue(q) and table(t)."
        },
        "signedResourceTypes": {
          "type": "string",
          "description": "The signed resource types that are accessible with the account SAS. Service (s)/Container (c)/Object (o)."
        }
      }
    },
    "Replicate": {
      "type": "object",
      "description": "Defines where the secret should be replicated to.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Local: This secret is not replicated to other dSMS instance. AllDsmsRegions: This secret can be replicated to all dSMS instances. SpecifiedDsmsRegions: This secret can only be replicated to the specified dSMS instances."
        },
        "values": {
          "type": "string",
          "description": "Gets or sets the regions the secret will be replicated to (Applicable when the type of replication is SpecifiedDsmsRegions). Regions are separated by semicolon."
        }
      }
    },
    "StorageAccountDsmsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "StorageAccountDsmsProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "StorageAccountDsmsResource": {
      "type": "object",
      "description": "storageAccounts Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageAccountDsmsResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "StorageAccountDsmsResourceListResult": {
      "type": "object",
      "description": "The response of a StorageAccountDsmsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The StorageAccountDsmsResource items on this page",
          "items": {
            "$ref": "#/definitions/StorageAccountDsmsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "StorageAccountDsmsResourceProperties": {
      "type": "object",
      "description": "storageAccountDsms properties.",
      "properties": {
        "rootPath": {
          "type": "string",
          "description": "Gets or sets the root path of the certificate."
        },
        "dsmsDns": {
          "type": "string",
          "description": "Define in which region of dSMS to provision the storage account such as global-dsms.dsms.%(HostNameSuffix), uswest-dsms.dsms.%(HostNameSuffix). This is used only when provision storage account in non-home-dsms endpoint."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Subscription ID to use this xstore account."
        },
        "accountReplicationType": {
          "type": "string",
          "description": "Account type on data replicateion."
        },
        "owner": {
          "type": "string",
          "description": "Owner of this storage account."
        },
        "subscriptionAlias": {
          "type": "string",
          "description": "Alias to find existing subscription."
        },
        "description": {
          "type": "string",
          "description": "Description to this xstore account."
        },
        "location": {
          "type": "string",
          "description": "Location of this storage account."
        },
        "label": {
          "type": "string",
          "description": "Label of this xstore account."
        },
        "enable2tb": {
          "type": "boolean",
          "description": "Gets or sets whether to enable 2TB for this xstore account."
        },
        "xstoreBootstrapping": {
          "type": "boolean",
          "description": "If false, create storage account and dSMS object in Deferred Provisioning. If true, create dSMS object in Provisioning, then create storage account in Deferred Provisioning and refresh keys in dSMS. Optional, true by default."
        },
        "eventEmittedUponProvisioning": {
          "type": "string",
          "description": "Gets or sets the name of the event to emit once the XStore account is created."
        },
        "whitelists": {
          "$ref": "#/definitions/Whitelists",
          "description": "Storage account whitelist in dSMS."
        },
        "replicate": {
          "$ref": "#/definitions/Replicate",
          "description": "Storage account Replication in dSMS."
        },
        "blockAutoRollover": {
          "type": "boolean",
          "description": "Block auto key roll over."
        },
        "keyRenewalPeriodInDays": {
          "type": "integer",
          "format": "int32",
          "description": "Override default key renewal period."
        },
        "releaseKeyToAgent": {
          "type": "boolean",
          "description": "Make the key available to agents."
        },
        "forceSyncGlobalDsmsSecret": {
          "type": "boolean",
          "description": "If false, skip global sync of dSMS secret. If true, global sync of dSMS secret. Optional, false by default."
        },
        "resourceGroupName": {
          "type": "string",
          "description": "Storage account resource group name."
        },
        "resourceProvider": {
          "type": "string",
          "description": "Storage account resource provider. Valid values are \"Classic\", \"ARM\"."
        },
        "pilotXstoreResourceProvider": {
          "type": "string",
          "description": "Whether to pilot Xstore resource provider. In new region or new cloud scenario, it can create storage account at earlier stage before ARM ready. This is mainly as a replacement for Classic resource provider which will be deprecated with RDFE."
        },
        "accountSasInfos": {
          "type": "array",
          "description": "Storage account shared access signature.",
          "items": {
            "$ref": "#/definitions/AccountSasInfo"
          },
          "x-ms-identifiers": []
        },
        "residencyBoundary": {
          "type": "string",
          "description": "Residency boundary, e.g Worldwide, National."
        },
        "resiliencyMinimum": {
          "type": "string",
          "description": "The minimum account replication type, e.g. Standard_LRS. If it's set, then will enable VRS feature for the storage account, and the 'AccountReplicationType' property will not be used."
        },
        "resiliencyMaximum": {
          "type": "string",
          "description": "The maximum account replication type, e.g. Standard_ZRS."
        },
        "resilienciesProgressionId": {
          "type": "string",
          "description": "Resiliencies progression id, e.g. Default."
        },
        "additionalLocations": {
          "type": "string",
          "description": "Additional locations to support resiliency, e.g. primary."
        },
        "provisioningState": {
          "$ref": "#/definitions/StorageAccountDsmsProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      }
    },
    "Whitelist": {
      "type": "object",
      "description": "Defines the whitelist element for a secret.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Gets or sets the type of the whitelist."
        },
        "values": {
          "type": "string",
          "description": "Gets or sets the values of the whitelist. A list of values are separated by semicolon."
        }
      }
    },
    "Whitelists": {
      "type": "object",
      "description": "Defines the array of whitelists for a secret.",
      "properties": {
        "elements": {
          "type": "array",
          "description": "Gets or sets the whitelist elements.",
          "items": {
            "$ref": "#/definitions/Whitelist"
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {}
}
