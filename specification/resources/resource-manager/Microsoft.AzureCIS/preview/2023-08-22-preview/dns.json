{
  "swagger": "2.0",
  "info": {
    "title": "Foundational ARM Client",
    "version": "2023-08-22-preview",
    "description": "ServiceRecord Provider",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "AddressRecords"
    },
    {
      "name": "ApSlbVips"
    },
    {
      "name": "CanonicalNameRecords"
    },
    {
      "name": "DomainNameRecordss"
    },
    {
      "name": "PtrRecords"
    },
    {
      "name": "ServiceRecords"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/AddressRecord": {
      "get": {
        "operationId": "AddressRecords_ListBySubscription",
        "tags": [
          "AddressRecords"
        ],
        "description": "List AddressRecordResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddressRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/ApSlbVip": {
      "get": {
        "operationId": "ApSlbVips_ListBySubscription",
        "tags": [
          "ApSlbVips"
        ],
        "description": "List ApSlbVipResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApSlbVipResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/CanonicalNameRecord": {
      "get": {
        "operationId": "CanonicalNameRecords_ListBySubscription",
        "tags": [
          "CanonicalNameRecords"
        ],
        "description": "List CanonicalNameRecordResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/DomainNameRecords": {
      "get": {
        "operationId": "DomainNameRecordss_ListBySubscription",
        "tags": [
          "DomainNameRecordss"
        ],
        "description": "List DomainNameRecordsResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/PtrRecord": {
      "get": {
        "operationId": "PtrRecords_ListBySubscription",
        "tags": [
          "PtrRecords"
        ],
        "description": "List PtrRecordResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PtrRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/ServiceRecord": {
      "get": {
        "operationId": "ServiceRecords_ListBySubscription",
        "tags": [
          "ServiceRecords"
        ],
        "description": "List ServiceRecordResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/AddressRecord": {
      "get": {
        "operationId": "AddressRecords_ListByResourceGroup",
        "tags": [
          "AddressRecords"
        ],
        "description": "List AddressRecordResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddressRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/AddressRecord/{resourceName}": {
      "get": {
        "operationId": "AddressRecords_Get",
        "tags": [
          "AddressRecords"
        ],
        "description": "Get a AddressRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/AddressRecordResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "AddressRecords_CreateOrUpdate",
        "tags": [
          "AddressRecords"
        ],
        "description": "Create a AddressRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddressRecordResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'AddressRecordResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/AddressRecordResource"
            }
          },
          "201": {
            "description": "Resource 'AddressRecordResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/AddressRecordResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/ApSlbVip": {
      "get": {
        "operationId": "ApSlbVips_ListByResourceGroup",
        "tags": [
          "ApSlbVips"
        ],
        "description": "List ApSlbVipResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApSlbVipResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/ApSlbVip/{resourceName}": {
      "get": {
        "operationId": "ApSlbVips_Get",
        "tags": [
          "ApSlbVips"
        ],
        "description": "Get a ApSlbVipResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ApSlbVipResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ApSlbVips_CreateOrUpdate",
        "tags": [
          "ApSlbVips"
        ],
        "description": "Create a ApSlbVipResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApSlbVipResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ApSlbVipResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApSlbVipResource"
            }
          },
          "201": {
            "description": "Resource 'ApSlbVipResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ApSlbVipResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/CanonicalNameRecord": {
      "get": {
        "operationId": "CanonicalNameRecords_ListByResourceGroup",
        "tags": [
          "CanonicalNameRecords"
        ],
        "description": "List CanonicalNameRecordResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/CanonicalNameRecord/{resourceName}": {
      "get": {
        "operationId": "CanonicalNameRecords_Get",
        "tags": [
          "CanonicalNameRecords"
        ],
        "description": "Get a CanonicalNameRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "CanonicalNameRecords_CreateOrUpdate",
        "tags": [
          "CanonicalNameRecords"
        ],
        "description": "Create a CanonicalNameRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CanonicalNameRecordResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResource"
            }
          },
          "201": {
            "description": "Resource 'CanonicalNameRecordResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CanonicalNameRecordResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/DomainNameRecords": {
      "get": {
        "operationId": "DomainNameRecordss_ListByResourceGroup",
        "tags": [
          "DomainNameRecordss"
        ],
        "description": "List DomainNameRecordsResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/DomainNameRecords/{resourceName}": {
      "get": {
        "operationId": "DomainNameRecordss_Get",
        "tags": [
          "DomainNameRecordss"
        ],
        "description": "Get a DomainNameRecordsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DomainNameRecordss_CreateOrUpdate",
        "tags": [
          "DomainNameRecordss"
        ],
        "description": "Create a DomainNameRecordsResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DomainNameRecordsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResource"
            }
          },
          "201": {
            "description": "Resource 'DomainNameRecordsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DomainNameRecordsResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/PtrRecord": {
      "get": {
        "operationId": "PtrRecords_ListByResourceGroup",
        "tags": [
          "PtrRecords"
        ],
        "description": "List PtrRecordResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PtrRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/PtrRecord/{resourceName}": {
      "get": {
        "operationId": "PtrRecords_Get",
        "tags": [
          "PtrRecords"
        ],
        "description": "Get a PtrRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PtrRecordResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "PtrRecords_CreateOrUpdate",
        "tags": [
          "PtrRecords"
        ],
        "description": "Create a PtrRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PtrRecordResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'PtrRecordResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/PtrRecordResource"
            }
          },
          "201": {
            "description": "Resource 'PtrRecordResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/PtrRecordResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/ServiceRecord": {
      "get": {
        "operationId": "ServiceRecords_ListByResourceGroup",
        "tags": [
          "ServiceRecords"
        ],
        "description": "List ServiceRecordResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceRecordResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/ServiceRecord/{resourceName}": {
      "get": {
        "operationId": "ServiceRecords_Get",
        "tags": [
          "ServiceRecords"
        ],
        "description": "Get a ServiceRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceRecordResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ServiceRecords_CreateOrUpdate",
        "tags": [
          "ServiceRecords"
        ],
        "description": "Create a ServiceRecordResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRecordResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ServiceRecordResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceRecordResource"
            }
          },
          "201": {
            "description": "Resource 'ServiceRecordResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ServiceRecordResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AddressRecordProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "AddressRecordProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "AddressRecordResource": {
      "type": "object",
      "description": "AddressRecord Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddressRecordResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "AddressRecordResourceListResult": {
      "type": "object",
      "description": "The response of a AddressRecordResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The AddressRecordResource items on this page",
          "items": {
            "$ref": "#/definitions/AddressRecordResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "AddressRecordResourceProperties": {
      "type": "object",
      "description": "AddressRecord properties",
      "properties": {
        "valueString": {
          "type": "string",
          "description": "Gets or sets the IP Address in String format"
        },
        "provisioningState": {
          "$ref": "#/definitions/AddressRecordProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "valueString"
      ]
    },
    "ApSlbVipProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ApSlbVipProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "ApSlbVipResource": {
      "type": "object",
      "description": "ApSlbVip Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApSlbVipResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApSlbVipResourceListResult": {
      "type": "object",
      "description": "The response of a ApSlbVipResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ApSlbVipResource items on this page",
          "items": {
            "$ref": "#/definitions/ApSlbVipResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ApSlbVipResourceProperties": {
      "type": "object",
      "description": "ApSlbVip properties",
      "properties": {
        "apDnsName": {
          "type": "string",
          "description": "Gets or sets the Ap Dns name. This is case-insensitive"
        },
        "provisioningState": {
          "$ref": "#/definitions/ApSlbVipProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "apDnsName"
      ]
    },
    "CanonicalNameRecordProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "CanonicalNameRecordProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "CanonicalNameRecordResource": {
      "type": "object",
      "description": "CanonicalNameRecord Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CanonicalNameRecordResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "CanonicalNameRecordResourceListResult": {
      "type": "object",
      "description": "The response of a CanonicalNameRecordResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CanonicalNameRecordResource items on this page",
          "items": {
            "$ref": "#/definitions/CanonicalNameRecordResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CanonicalNameRecordResourceProperties": {
      "type": "object",
      "description": "CanonicalNameRecord properties",
      "properties": {
        "cName": {
          "type": "string",
          "description": "Gets the CNAME"
        },
        "provisioningState": {
          "$ref": "#/definitions/CanonicalNameRecordProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "cName"
      ]
    },
    "DomainNameRecord": {
      "type": "object",
      "description": "DomainNameRecord type model",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the domain name"
        },
        "ttl": {
          "type": "string",
          "description": "Gets or sets the DNS TTL"
        },
        "serviceTreeId": {
          "type": "string",
          "description": "Gets or sets the owning team's ServiceTree Id"
        }
      },
      "required": [
        "name",
        "ttl",
        "serviceTreeId"
      ]
    },
    "DomainNameRecordsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "DomainNameRecordsProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "DomainNameRecordsResource": {
      "type": "object",
      "description": "DomainNameRecords Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DomainNameRecordsResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DomainNameRecordsResourceListResult": {
      "type": "object",
      "description": "The response of a DomainNameRecordsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DomainNameRecordsResource items on this page",
          "items": {
            "$ref": "#/definitions/DomainNameRecordsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DomainNameRecordsResourceProperties": {
      "type": "object",
      "description": "DomainNameRecords properties",
      "properties": {
        "dnsRecords": {
          "type": "array",
          "description": "List of all DNS records",
          "items": {
            "$ref": "#/definitions/DomainNameRecord"
          },
          "x-ms-identifiers": []
        },
        "provisioningState": {
          "$ref": "#/definitions/DomainNameRecordsProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "dnsRecords"
      ]
    },
    "PtrRecordProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "PtrRecordProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "PtrRecordResource": {
      "type": "object",
      "description": "PtrRecord Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PtrRecordResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PtrRecordResourceListResult": {
      "type": "object",
      "description": "The response of a PtrRecordResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The PtrRecordResource items on this page",
          "items": {
            "$ref": "#/definitions/PtrRecordResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PtrRecordResourceProperties": {
      "type": "object",
      "description": "PtrRecord properties",
      "properties": {
        "pointsTo": {
          "type": "string",
          "description": "Gets or sets the IP Address in String format"
        },
        "provisioningState": {
          "$ref": "#/definitions/PtrRecordProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "pointsTo"
      ]
    },
    "ServiceRecordProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ServiceRecordProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "ServiceRecordResource": {
      "type": "object",
      "description": "ServiceRecord Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceRecordResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ServiceRecordResourceListResult": {
      "type": "object",
      "description": "The response of a ServiceRecordResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ServiceRecordResource items on this page",
          "items": {
            "$ref": "#/definitions/ServiceRecordResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceRecordResourceProperties": {
      "type": "object",
      "description": "ServiceRecord properties",
      "properties": {
        "priority": {
          "type": "string",
          "description": "Gets or sets the priority field of a service record"
        },
        "weight": {
          "type": "string",
          "description": "Gets or sets the weight field of a service record"
        },
        "port": {
          "type": "string",
          "description": "Gets or sets the port field of a service record"
        },
        "cName": {
          "type": "string",
          "description": "Gets or sets the canonical hostname of the target machine providing the service"
        },
        "provisioningState": {
          "$ref": "#/definitions/ServiceRecordProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "priority",
        "weight",
        "port",
        "cName"
      ]
    }
  },
  "parameters": {}
}
