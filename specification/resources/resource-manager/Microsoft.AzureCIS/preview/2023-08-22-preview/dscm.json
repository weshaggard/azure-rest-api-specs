{
  "swagger": "2.0",
  "info": {
    "title": "Foundational ARM Client",
    "version": "2023-08-22-preview",
    "description": "dscm Service",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "DsmsAllowlists"
    },
    {
      "name": "DstsServiceAccount"
    },
    {
      "name": "DstsApplications"
    },
    {
      "name": "DsmsRootFolder"
    }
  ],
  "paths": {
    "/providers/Microsoft.AzureCIS/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/dsmsAllowlists": {
      "get": {
        "operationId": "DsmsAllowlists_ListBySubscription",
        "tags": [
          "DsmsAllowlists"
        ],
        "description": "List DsmsAllowlistsResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DsmsAllowlistsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/dsmsRootFolders": {
      "get": {
        "operationId": "DsmsRootFolder_ListBySubscription",
        "tags": [
          "DsmsRootFolder"
        ],
        "description": "List DsmsRootFolderResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DsmsRootFolderResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/dstsApplications": {
      "get": {
        "operationId": "DstsApplications_ListBySubscription",
        "tags": [
          "DstsApplications"
        ],
        "description": "List DstsApplicationsResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DstsApplicationsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureCIS/dstsServiceAccount": {
      "get": {
        "operationId": "DstsServiceAccount_ListBySubscription",
        "tags": [
          "DstsServiceAccount"
        ],
        "description": "List DstsServiceAccountResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DstsServiceAccountResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dsmsAllowlists": {
      "get": {
        "operationId": "DsmsAllowlists_ListByResourceGroup",
        "tags": [
          "DsmsAllowlists"
        ],
        "description": "List DsmsAllowlistsResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DsmsAllowlistsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dsmsAllowlists/{resourceName}": {
      "put": {
        "operationId": "DsmsAllowlists_CreateOrUpdate",
        "tags": [
          "DsmsAllowlists"
        ],
        "description": " dsmsAllowlists creation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DsmsAllowlistsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DsmsAllowlistsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DsmsAllowlistsResource"
            }
          },
          "201": {
            "description": "Resource 'DsmsAllowlistsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DsmsAllowlistsResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create dsmsAllowlists": {
            "$ref": "./examples/CreateDsmsAllowlist.json"
          },
          "CreateDsmsAllowlist": {
            "$ref": "./examples/CreateDsmsAllowlist.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dsmsRootFolders": {
      "get": {
        "operationId": "DsmsRootFolder_ListByResourceGroup",
        "tags": [
          "DsmsRootFolder"
        ],
        "description": "List DsmsRootFolderResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DsmsRootFolderResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dsmsRootFolders/{resourceName}": {
      "put": {
        "operationId": "DsmsRootFolder_CreateOrUpdate",
        "tags": [
          "DsmsRootFolder"
        ],
        "description": " dsmsRootFolder creation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DsmsRootFolderResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DsmsRootFolderResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DsmsRootFolderResource"
            }
          },
          "201": {
            "description": "Resource 'DsmsRootFolderResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DsmsRootFolderResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create dsmsRootFolder": {
            "$ref": "./examples/CreateDsmsRootFolder.json"
          },
          "CreateDsmsRootFolder": {
            "$ref": "./examples/CreateDsmsRootFolder.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dstsApplications": {
      "get": {
        "operationId": "DstsApplications_ListByResourceGroup",
        "tags": [
          "DstsApplications"
        ],
        "description": "List DstsApplicationsResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DstsApplicationsResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dstsApplications/{resourceName}": {
      "put": {
        "operationId": "DstsApplications_CreateOrUpdate",
        "tags": [
          "DstsApplications"
        ],
        "description": "dstsApplications creation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DstsApplicationsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DstsApplicationsResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DstsApplicationsResource"
            }
          },
          "201": {
            "description": "Resource 'DstsApplicationsResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DstsApplicationsResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create dstsApplications": {
            "$ref": "./examples/CreateDstsApplications.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dstsServiceAccount": {
      "get": {
        "operationId": "DstsServiceAccount_ListByResourceGroup",
        "tags": [
          "DstsServiceAccount"
        ],
        "description": "List DstsServiceAccountResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DstsServiceAccountResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureCIS/dstsServiceAccount/{resourceName}": {
      "put": {
        "operationId": "DstsServiceAccount_CreateOrUpdate",
        "tags": [
          "DstsServiceAccount"
        ],
        "description": " dstsServiceAccount creation",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "The name of resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DstsServiceAccountResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DstsServiceAccountResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DstsServiceAccountResource"
            }
          },
          "201": {
            "description": "Resource 'DstsServiceAccountResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DstsServiceAccountResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create dstsServiceAccount": {
            "$ref": "./examples/CreateDstsServiceAccount.json"
          },
          "CreateDstsServiceAccount": {
            "$ref": "./examples/CreateDstsServiceAccount.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ApplicationAccount": {
      "type": "object",
      "description": "Application.",
      "properties": {
        "dstsInstance": {
          "type": "string",
          "description": "The dSTS instance where the Application resides."
        },
        "name": {
          "type": "string",
          "description": "The name of the Application."
        },
        "serviceTreeId": {
          "type": "string",
          "description": "Service Tree GUID of the service who owns the Application."
        },
        "realms": {
          "type": "array",
          "description": "The realms of the application. Optional.",
          "items": {
            "type": "string"
          }
        },
        "servicePrincipalNames": {
          "type": "array",
          "description": "The Service Principal Names of the application. Optional.",
          "items": {
            "type": "string"
          }
        },
        "replyToAddresses": {
          "type": "array",
          "description": "The Reply Addresses of application. Optional.",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "string",
          "description": "GUID of the dSCM Application group to which the Application belongs. Optional."
        },
        "groupName": {
          "type": "string",
          "description": "Group name of the dSCM Application group to which the Application belongs. Optional."
        },
        "isMfaEnabled": {
          "type": "boolean",
          "description": "If set to true, authenticating to the application requires MFA. Optional.",
          "default": true
        },
        "sawDeviceEnforcement": {
          "type": "string",
          "description": "If it is null, full SAW enforcement will apply to the application. Optional."
        },
        "isElevatedAccess": {
          "type": "boolean",
          "description": "If you application (service) is exclusively limited to System Metadata, Read-Only access levels, set it to false. Optional."
        },
        "isProduction": {
          "type": "boolean",
          "description": "If your application (service) is exclusively NonProduction, set it to false. Optional.",
          "default": true
        }
      },
      "required": [
        "dstsInstance",
        "name",
        "serviceTreeId"
      ]
    },
    "ApplicationGroup": {
      "type": "object",
      "description": "The application group. Optional.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Group id."
        },
        "serviceTreeId": {
          "type": "string",
          "description": "Group service tree id."
        },
        "name": {
          "type": "string",
          "description": "Group name."
        },
        "applicationName": {
          "type": "string",
          "description": "Group application name."
        },
        "servicePrincipalNames": {
          "type": "array",
          "description": "The Service Principal Names of the application. Optional.",
          "items": {
            "type": "string"
          }
        },
        "realms": {
          "type": "array",
          "description": "Actor realm.",
          "items": {
            "type": "string"
          }
        },
        "replyToAddresses": {
          "type": "array",
          "description": "The Reply Addresses of application. Optional.",
          "items": {
            "type": "string"
          }
        },
        "isMfaEnabled": {
          "type": "boolean",
          "description": "If set to true, authenticating to the application requires MFA. Optional.",
          "default": true
        },
        "isGlobalService": {
          "type": "boolean",
          "description": "If not set, default is regional service. Optional."
        },
        "sawDeviceEnforcement": {
          "type": "string",
          "description": "If it is null, full SAW enforcement will apply to the application. Optional."
        },
        "clientTokenIpRangeRestrictions": {
          "type": "array",
          "description": "Change.Remove client token ip range.",
          "items": {
            "$ref": "#/definitions/IpRange"
          },
          "x-ms-identifiers": []
        },
        "cloudId": {
          "type": "string",
          "description": "Optional. If it is null, full SAW enforcement will apply to the application.",
          "default": "PROD"
        },
        "clientSubscriptions": {
          "type": "array",
          "description": "Optional.client subscriptions.",
          "items": {
            "type": "string"
          }
        },
        "regions": {
          "type": "array",
          "description": "Specific dSTS instances to create applications on.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "serviceTreeId",
        "name",
        "cloudId"
      ]
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      }
    },
    "DsmsAllowlistsResource": {
      "type": "object",
      "description": "dsmsAllowlists Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DsmsAllowlistsResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DsmsAllowlistsResourceListResult": {
      "type": "object",
      "description": "The response of a DsmsAllowlistsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DsmsAllowlistsResource items on this page",
          "items": {
            "$ref": "#/definitions/DsmsAllowlistsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DsmsAllowlistsResourceProperties": {
      "type": "object",
      "description": "dsmsAllowlists properties",
      "properties": {
        "folderName": {
          "type": "string",
          "description": "The name of the folder to apply allowlist changes to. This should be the full folder path starting with a '$', with '$' replacing all '/' characters. Example: '/my-folder/root-folder' should be passed as '$my-folder$root-folder"
        },
        "targetDsmsEndpoints": {
          "type": "array",
          "description": "The dSMS endpoints to apply allowlist changes to. The folder specified in FolderName will be updated on each of the TargetDsmsEndpoints. If this is left null, this will default to all the dSMS endpoints used for the root folder.",
          "items": {
            "type": "string"
          }
        },
        "dnsPatterns": {
          "type": "array",
          "description": "Dns domain patterns in the allowlist. Patterns with '*' are accepted values here.",
          "items": {
            "type": "string"
          }
        },
        "deploymentSubscriptions": {
          "type": "array",
          "description": "Guids of Azure deployment subscriptions in allowlist.",
          "items": {
            "type": "string"
          }
        },
        "storageSubscriptions": {
          "type": "array",
          "description": "Guids of Azure storage subscriptions in allowlist.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/dsmsAllowlistsProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "folderName"
      ]
    },
    "DsmsRootFolderResource": {
      "type": "object",
      "description": "dsmsRootFolder Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DsmsRootFolderResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DsmsRootFolderResourceListResult": {
      "type": "object",
      "description": "The response of a DsmsRootFolderResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DsmsRootFolderResource items on this page",
          "items": {
            "$ref": "#/definitions/DsmsRootFolderResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DsmsRootFolderResourceProperties": {
      "type": "object",
      "description": "dsmsRootFolder properties",
      "properties": {
        "serviceTreeId": {
          "type": "string",
          "description": "The ServiceTreeId that owns the new root folder"
        },
        "name": {
          "type": "string",
          "description": "The name of the root folder to add. This should be the full folder path starting with a \"$\", with \"$\" replacing all \"/\" characters"
        },
        "cloudId": {
          "type": "string",
          "description": "The cloud ID where the root folder should be added. Acceptable values: Public, Fairfax, Mooncake, USSec, USNat"
        },
        "provisioningState": {
          "$ref": "#/definitions/dsmsRootFolderProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "name"
      ]
    },
    "DstsApplicationsResource": {
      "type": "object",
      "description": "dstsApplication Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DstsApplicationsResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DstsApplicationsResourceListResult": {
      "type": "object",
      "description": "The response of a DstsApplicationsResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DstsApplicationsResource items on this page",
          "items": {
            "$ref": "#/definitions/DstsApplicationsResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DstsApplicationsResourceProperties": {
      "type": "object",
      "description": "dstsApplications properties",
      "properties": {
        "applicationAccount": {
          "$ref": "#/definitions/ApplicationAccount",
          "description": "Application."
        },
        "applicationGroup": {
          "$ref": "#/definitions/ApplicationGroup",
          "description": "The application group. Optional."
        },
        "provisioningState": {
          "$ref": "#/definitions/dstsApplicationsProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "applicationAccount"
      ]
    },
    "DstsAuthenticationRequirement": {
      "type": "object",
      "description": "Authenticaiton requirement of the account.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Authentication requirement value. E.g. \"PTH\"."
        }
      },
      "required": [
        "value"
      ]
    },
    "DstsClaimMapping": {
      "type": "object",
      "description": "Claim mapping for authorization of the account.",
      "properties": {
        "inputType": {
          "type": "string",
          "description": "Type of input identity. This is case-insensitive. E.g. \"http://sts.msft.net/user/Group\"."
        },
        "inputValue": {
          "type": "string",
          "description": "Name or ID of input identity. E.g. \"%($CS.CplatViewerGroup)\"."
        },
        "outputType": {
          "type": "string",
          "description": "Type of output identity, which is mapped from input identity. This is case-insensitive. E.g. \"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"."
        },
        "outputValue": {
          "type": "string",
          "description": "Name or ID of output identity, which is mapped from input identity. E.g. \"PlatformServiceViewer\" or \"PlatformServiceOperator\"."
        },
        "federation": {
          "type": "string",
          "description": "Federation context for the mapping. E.g. \"MSIT-ADFS-Federation\" or \"BF-ADFS-Federation\"."
        }
      },
      "required": [
        "inputType",
        "outputType"
      ]
    },
    "DstsRealm": {
      "type": "object",
      "description": "Realm information of the account.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Realm's name. This is case-insensitive. E.g. \"svc://crpadmin@%(ArmRegionName).acs.%($CS.ComputeDnsSuffix)/\"."
        },
        "redirectionUrl": {
          "type": "string",
          "description": "Realm's redirection URL. This is case-insensitive. E.g. \"https://%(ArmRegionName).acs.%($CS.ComputeDnsSuffix)/\"."
        }
      },
      "required": [
        "name"
      ]
    },
    "DstsServiceAccountResource": {
      "type": "object",
      "description": "dstsServiceAccount Resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DstsServiceAccountResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DstsServiceAccountResourceListResult": {
      "type": "object",
      "description": "The response of a DstsServiceAccountResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DstsServiceAccountResource items on this page",
          "items": {
            "$ref": "#/definitions/DstsServiceAccountResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DstsServiceAccountResourceProperties": {
      "type": "object",
      "description": "dstsServiceAccount properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique ID of the service account. Its value can be a GUID for a new account, or for an existing account created by CIS resource template or by other method. Or its value can be null or empty string for a new account, or for an existing account created by CIS resource template (but not by other method). In the latter case, CIS generates a GUID to be the new account's ID, and remembers the ID for future provisioning of the same service account. This is case-insensitive."
        },
        "serviceTreeId": {
          "type": "string",
          "description": "ServiceTree ID, which indicates the owner of the account. This is case-insensitive."
        },
        "accountName": {
          "type": "string",
          "description": "Service Account name, which must be unique for a given dsts endpoint. This is case-insensitive. E.g. \"%(ArmRegionName).acs.%($CS.ComputeDnsSuffix)\"."
        },
        "dstsInstance": {
          "type": "string",
          "description": "DSTS instance in which the account is created. This is case-insensitive. E.g. \"co2agg04-dsts.dsts.core.azure-test.net\" for dogfood."
        },
        "displayName": {
          "type": "string",
          "description": "Display Name of the account."
        },
        "groupId": {
          "type": "string",
          "description": "GroupId of the account. This is case-insensitive. This is optional, and the account is placed into default group when this is not specified. This can be the GroupId of an existing group, which can be found at dSCM web portal."
        },
        "groupName": {
          "type": "string",
          "description": "GroupName of the account. This is case-insensitive. This is optional, and the account is placed into default group when this is not specified. This can be the GroupName of an existing group, which can be found at dSCM web portal."
        },
        "authenticationRequirements": {
          "type": "array",
          "description": "list of authentication requirements.",
          "items": {
            "$ref": "#/definitions/DstsAuthenticationRequirement"
          },
          "x-ms-identifiers": []
        },
        "realms": {
          "type": "array",
          "description": "list of realms.",
          "items": {
            "$ref": "#/definitions/DstsRealm"
          },
          "x-ms-identifiers": []
        },
        "claimMappings": {
          "type": "array",
          "description": "list of claim mappings.",
          "items": {
            "$ref": "#/definitions/DstsClaimMapping"
          },
          "x-ms-identifiers": []
        },
        "accountTags": {
          "type": "array",
          "description": "Tags to add to the account.",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "Provisioning state",
          "readOnly": true
        }
      },
      "required": [
        "accountName",
        "dstsInstance"
      ]
    },
    "IpRange": {
      "type": "object",
      "description": "Class for a contiguous range of IP Adresses.",
      "properties": {
        "toIpAddress": {
          "type": "string",
          "description": "To IP address."
        }
      },
      "required": [
        "toIpAddress"
      ]
    },
    "dsmsAllowlistsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "dsmsAllowlistsProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "dsmsRootFolderProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "dsmsRootFolderProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    },
    "dstsApplicationsProvisioningState": {
      "type": "string",
      "description": "Provisioning status of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "dstsApplicationsProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Accepted State"
          }
        ]
      }
    }
  },
  "parameters": {}
}
