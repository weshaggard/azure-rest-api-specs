{
  "swagger": "2.0",
  "info": {
    "title": "DiagnosticsRP",
    "description": "Diagnostics RP provider",
    "version": "2020-07-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/{scope}/providers/Microsoft.Diagnostics/solutions/metadata/search": {
      "post": {
        "tags": [
          "Solutions"
        ],
        "description": "Discover list solution metadata for execution",
        "operationId": "Scope_Solutions_Search",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "DiscoverRequest",
            "description": "Discover Request body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DiscoverRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Solution Metadata Responses.",
            "schema": {
              "$ref": "#/definitions/SolutionMetaDataListResult"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Diagnostics/insightDiagnostics/{insightResourceName}": {
      "put": {
        "tags": [
          "Insights"
        ],
        "description": "Insight Diagnosic Resource Creation Request",
        "operationId": "Create_InsightDiagnostics",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/InsightResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "properties",
            "description": "The required parameters for this solution invocation.",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "$ref": "#/definitions/InsightExecutionBody"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Insight Diagnostic Invocation (may contain errors)",
            "schema": {
              "$ref": "#/definitions/InsightArmResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Insights"
        ],
        "description": "Insight Diagnosic Resource Creation Request",
        "operationId": "Get_InsightDiagnostics",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/InsightResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Insight Diagnostic Invocation (may contain errors)",
            "schema": {
              "$ref": "#/definitions/InsightArmResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Diagnostics/insightDiagnostics/{solutionId}/invoke": {
      "post": {
        "tags": [
          "Insights"
        ],
        "description": "Insight Diagnosic Invocation Request",
        "operationId": "First_Level_Extension_Insight_Invoke",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/SolutionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "parameters",
            "description": "The required parameters for this solution invocation.",
            "schema": {
              "type": "object",
              "properties": {
                "parameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Insight Diagnostic Invocation (may contain errors)",
            "schema": {
              "$ref": "#/definitions/InsightResult"
            }
          },
          "202": {
            "description": "Accepted, diagnostic will be invoked and results patched back asyncrhonously."
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Diagnostics/AzureKB/AzureKBSearch/invoke": {
      "post": {
        "tags": [
          "AzureKB"
        ],
        "description": "This API will fetch azurekb search results",
        "operationId": "Post_Tenant_level_AzureKB_requests",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "AzureKBSearchRequest",
            "description": "AzureKB Search Request body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/AzureKBSearchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of AzureKB Search Responses.",
            "schema": {
              "$ref": "#/definitions/SolutionExecutionResultResponse"
            }
          }
        }
      }
    },
    "/{scope}/providers/Microsoft.Diagnostics/Feedback/GeneralFeedback/provide": {
      "post": {
        "tags": [
          "Feedback"
        ],
        "description": "Feedback request",
        "operationId": "Scope_Feedback_Provide",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "DiagnosticFeedbackRequest",
            "description": "Feedback Request body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/DiagnosticFeedbackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Feedback Submit Invocation (may contain errors)",
            "schema": {
              "$ref": "#/definitions/FeedbackSubmitResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Diagnostics/operations": {
      "get": {
        "description": "Returns list of operations.",
        "operationId": "Operation_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{scope}/providers/Microsoft.Diagnostics/apollo/{resourceName}": {
      "put": {
        "tags": [
          "Apollo"
        ],
        "description": "Apollo Invoke Solution API",
        "operationId": "Apollo_Invoke",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "ApolloInvokeRequest",
            "description": "Apollo Invoke Request body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ApolloInvokeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Apollo Diagnostic Invocation (may contain errors)",
            "schema": {
              "$ref": "#/definitions/ApolloArmResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Apollo"
        ],
        "description": "Get Apollo Solution execution result API",
        "operationId": "Apollo_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Apollo Diagnostic Invocation",
            "schema": {
              "$ref": "#/definitions/ApolloArmResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Apollo"
        ],
        "description": "Update Apollo Solution API",
        "operationId": "Apollo_Update",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "#/parameters/ScopeParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "ApolloInvokeRequest",
            "description": "Apollo Invoke Request body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ApolloInvokeRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Apollo Diagnostic Invocation (may contain errors)"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ArmResource": {
      "type": "object",
      "description": "Arm default resource properties",
      "properties": {
        "id": {
          "description": "Full resource uri of the resource",
          "type": "string"
        },
        "type": {
          "description": "Type of resource",
          "type": "string"
        },
        "name": {
          "description": "Resource name",
          "type": "string"
        }
      }
    },
    "DiscoveryFeedbackRequest": {
      "type": "object",
      "description": "Search Request body",
      "properties": {
        "sessionId": {
          "description": "Search text string to search.",
          "type": "string"
        },
        "feedbackTitle": {
          "description": "Search text string to search.",
          "type": "string"
        }
      },
      "required": [
        "feedbackTitle",
        "sessionId"
      ]
    },
    "ExecutionFeedbackRequest": {
      "type": "object",
      "description": "Search Request body",
      "properties": {
        "sessionId": {
          "description": "Search text string to search.",
          "type": "string"
        },
        "feedbackTitle": {
          "description": "Search text string to search.",
          "type": "string"
        },
        "solutionId": {
          "description": "Search text string to search.",
          "type": "string"
        },
        "feedbackDescription": {
          "description": "Search text string to search.",
          "type": "string"
        }
      },
      "required": [
        "feedbackTitle",
        "solutionId",
        "sessionId"
      ]
    },
    "AzureKBSearchRequest": {
      "type": "object",
      "description": "Search Request body",
      "properties": {
        "searchText": {
          "description": "Search text string to search.",
          "type": "string"
        },
        "maxResults": {
          "description": "Number of search results desired. Default is 1",
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        },
        "knowledgeSources": {
          "description": "Sources from which articles are to be fetched. Default is community & documentation.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Community",
              "Documentation"
            ]
          }
        }
      },
      "required": [
        "searchText"
      ]
    },
    "DiscoverRequest": {
      "type": "object",
      "description": "Discover Request body",
      "properties": {
        "customerVerbatim": {
          "description": "Customer verbatim for ranking purpose",
          "type": "string"
        },
        "sapIds": {
          "description": "Array of SapIds, which are the GuidIds corresponding to target support topic",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetKeywords": {
          "description": "Array of target keywords for demo searching purpose",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "solutionIds": {
          "description": "Array of SolutionIds, which are identifier of solution metadatas",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SolutionExecutionResultResponse": {
      "description": "Solution Execution Result Response",
      "properties": {
        "value": {
          "description": "AzureKB Solution Execution Result",
          "type": "object",
          "items": {
            "$ref": "#/definitions/AzureKBSolutionExecutionResult"
          }
        }
      }
    },
    "AzureKBSolutionExecutionResult": {
      "description": "AzureKB Solution Execution Results",
      "properties": {
        "searchResults": {
          "description": "Array of AzureKB Search Results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureKBSearchResultProperties"
          }
        }
      }
    },
    "AzureKBSearchResultProperties": {
      "description": "Details about an AzureKB Search Result",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Unique id of the result",
          "type": "string"
        },
        "content": {
          "description": "Content of the search result",
          "type": "string"
        },
        "title": {
          "description": "Title of the search result",
          "type": "string"
        },
        "confidence": {
          "description": "Confidence of the search result",
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ]
        },
        "unifiedRank": {
          "description": "unified rank of the search result",
          "type": "integer"
        },
        "unifiedConfidence": {
          "description": "Unified Confidence of the search result",
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ]
        },
        "overAllRank": {
          "description": "Overall rank of the search result",
          "type": "integer"
        },
        "link": {
          "description": "Link to the document",
          "type": "string"
        },
        "knowledgeSource": {
          "description": "Source of the results",
          "type": "string",
          "enum": [
            "Community",
            "Documentation"
          ]
        },
        "sectionMatchDetails": {
          "description": "Source of the search result",
          "type": "object",
          "items": {
            "$ref": "#/definitions/SectionMatchDetails"
          }
        }
      }
    },
    "SectionMatchDetails": {
      "description": "AzureKB Search Result SectionMatch details",
      "properties": {
        "content": {
          "type": "string",
          "description": "Content"
        },
        "title": {
          "type": "string",
          "description": "title"
        },
        "link": {
          "type": "string",
          "description": "link"
        }
      }
    },
    "operation": {
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "SolutionMetaDataListResult": {
      "description": "Object that represents the hardcode list of solutions metadata.",
      "properties": {
        "value": {
          "description": "The list of hardcode solutions metadata.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionMetaData"
          }
        }
      }
    },
    "SolutionMetaData": {
      "description": "Object that represents a Diagnostic Solution Metadata",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Id of the solution",
          "type": "string"
        },
        "solutionType": {
          "description": "Type of the solution",
          "type": "string"
        },
        "description": {
          "description": "A detail description of solution",
          "type": "string"
        },
        "targetKeywords": {
          "description": "target keywords for demo",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredParameterSets": {
          "description": "Required parameters for invoking this particular solution.",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "InsightResultProperties": {
      "description": "Insight Result properties",
      "properties": {
        "id": {
          "description": "A unique ID for this Insight.",
          "type": "string"
        },
        "createdTime": {
          "description": "Insight generated time.",
          "type": "string"
        },
        "status": {
          "description": "Status of insight.",
          "type": "string"
        },
        "insights": {
          "description": "The problems (if any) detected by this insight.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        }
      }
    },
    "InsightResult": {
      "description": "The insight invocation result.",
      "properties": {
        "Id": {
          "description": "A unique ID for this Insight.",
          "type": "string"
        },
        "Insights": {
          "description": "The problems (if any) detected by this insight.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        },
        "Error": {
          "description": "Any errors that potentially occurred during diagnostic invocation.",
          "type": "object",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Insight": {
      "description": "Detailed insights(s) obtained via the invocation of an insight diagnostic troubleshooter.",
      "properties": {
        "title": {
          "description": "This insight's title.",
          "type": "string"
        },
        "description": {
          "description": "A user friendly description of what this insight has detected.",
          "type": "string"
        },
        "issueCategory": {
          "description": "The category for the issue that this insight detected",
          "type": "string"
        },
        "issueSubcategory": {
          "description": "The subcategory for the issue that this insight detected.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "The recommended action to resolve the detected issue.",
          "type": "object",
          "$ref": "#/definitions/RecommendedAction"
        },
        "additionalDetails": {
          "description": "Additional supporting information for additional context about this problem.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "curatedContent": {
          "description": "Curated HTML Markup intended to be consumed by customer's or their designated third parties.",
          "type": "string"
        },
        "relatedLinks": {
          "description": "Any other related and relevant links to additional information about the problems detected by this insight.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "RecommendedAction": {
      "description": "Detailed recommended action(s) to potentially resolve a detected problem.",
      "properties": {
        "action": {
          "description": "The action to take.",
          "type": "string"
        },
        "contentType": {
          "description": "A enumerative value indicating how the client can/should display the textual action given above.",
          "type": "string",
          "enum": [
            "MARKDOWN",
            "PLAIN_TEXT"
          ]
        }
      }
    },
    "ErrorResponse": {
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "Link": {
      "description": "Object representation of a URI/URL",
      "properties": {
        "type": {
          "description": "The type of URI/URL this represents.",
          "type": "string",
          "enum": [
            "URL",
            "APP_LENS",
            "RESOURCE"
          ]
        },
        "value": {
          "description": "The value of this link.",
          "type": "string"
        }
      }
    },
    "Error": {
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Service specific error type which serves as additonal context for the error herein.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DiagnosticExecutionResponse": {
      "description": "The response from a Diagnostic Execution."
    },
    "DiagnosticFeedbackRequest": {
      "type": "object",
      "description": "Diagnostics Feedback Request Body",
      "properties": {
        "feedbackType": {
          "description": "Feedback Type",
          "type": "string",
          "enum": [
            "Execution",
            "Discovery"
          ]
        },
        "feedbackCategory": {
          "description": "Feedback Category",
          "type": "string",
          "enum": [
            "InsightDiagnostics",
            "AzureKB",
            "Discovery"
          ]
        },
        "feedbackSubCategory": {
          "description": "Solution Id/Result ID",
          "type": "string"
        },
        "sentiment": {
          "description": "Feedback sentiment (Positive/Negative)",
          "type": "string",
          "enum": [
            "Positive",
            "Neutral",
            "Negative"
          ]
        },
        "title": {
          "description": "Feedback title",
          "type": "string"
        },
        "comments": {
          "description": "Feedback description",
          "type": "string"
        },
        "correlationRequestId": {
          "description": "Request id of execution",
          "type": "string"
        },
        "additionalInformation": {
          "description": "Additional property bag to store information",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "FeedbackSubmitResponse": {
      "description": "Feedback Submit Result Response",
      "properties": {
        "feedbackId": {
          "description": "Unique Feedback id",
          "type": "string"
        },
        "feedbackType": {
          "description": "Feedback Type",
          "type": "string",
          "enum": [
            "Execution",
            "Discovery"
          ]
        },
        "feedbackCategory": {
          "description": "Feedback Category",
          "type": "string",
          "enum": [
            "InsightDiagnostics",
            "AzureKB",
            "Discovery"
          ]
        },
        "feedbackSubCategory": {
          "description": "Feedback Subcategory",
          "type": "string"
        },
        "repairItemId": {
          "description": "Unique Repair Item id",
          "type": "string"
        }
      }
    },
    "InsightArmResource": {
      "description": "Insight Arm response",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Insight Result properties",
          "type": "object",
          "$ref": "#/definitions/InsightResultProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArmResource"
        }
      ]
    },
    "InsightExecutionBody": {
      "description": "Execution body for batch insight requests.",
      "properties": {
        "executionParameters": {
          "description": "Solution Execution properties",
          "type": "object",
          "$ref": "#/definitions/SolutionExecutionParameters"
        },
        "solutionInvocations": {
          "description": "Solutions to invoke",
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/SolutionInvocation"
          }
        }
      }
    },
    "SolutionInvocation": {
      "description": "Solution Invocation with additional params needed for invocation.",
      "properties": {
        "solutionId": {
          "description": "Solution Id to invoke.",
          "type": "string"
        },
        "additionalParameters": {
          "description": "Additional paramters required to invoke the solutionId.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SolutionExecutionParameters": {
      "description": "Global Solution Execution parameters passed to all invocations",
      "properties": {
        "startTime": {
          "description": "Start time of the problem",
          "type": "string"
        },
        "endTime": {
          "description": "End time of the problem",
          "type": "string"
        }
      }
    },
    "ApolloInvokeRequest": {
      "description": "Apollo Invoke Request body",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of Apollo InvokeRequest",
          "type": "object",
          "$ref": "#/definitions/ApolloInvokeProperties"
        }
      }
    },
     "ApolloInvokeProperties": {
      "description": "Apollo Invoke properties.",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single Apollo Solution",
          "type": "string"
        },
        "parameters": {
          "description": "Client input parameters to run Apollo Solution",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ApolloArmResource": {
      "description": "Insight result modeled as arm resource.",
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "description": "Properties of the Arm resource",
          "type": "object",
          "$ref": "#/definitions/ApolloResult"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ApolloResult": {
      "description": "Apollo Result",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single Apollo Solution",
          "type": "string"
        },
        "solutionType": {
          "description": "Solution Type",
          "type": "string"
        },
        "solutionInstanceId": {
          "description": "Unique solution instance Id to identify solution execution result",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning status of the resource"
        },
        "title": {
          "description": "The title",
          "type": "string"
        },
        "htmlContent": {
          "description": "The HTML content that needs to be rendered and shown to customer",
          "type": "string"
        },
        "htmlContentBindings": {
          "description": "HTML Content Bindings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HtmlBinding"
          }
        },
        "parameters": {
          "description": "Client input parameters to run Apollo Solution",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bindings": {
          "description": "List of rich components (Insights, Videos, Charts, etc.) that need to be replaced in the htmlContent",
          "type": "object",
          "$ref": "#/definitions/BindingExecutionResult"
        },
        "sections": {
          "description": "Part of the solution and are dividers in the solution rendering.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SectionExecutionResult"
          }
        }
      }
    },
    "SectionExecutionResult": {
      "description": "Each section is placed in an accordion control and contains htmlContent and bindings that help replace rich components in the htmlContent",
      "type": "object",
      "properties": {
        "title": {
          "description": "The title",
          "type": "string"
        },
        "htmlContent": {
          "description": "The HTML content that needs to be rendered and shown to customer",
          "type": "string"
        },
        "bindings": {
          "description": "List of rich components (Insights, Videos, Charts, etc.) that need to be replaced in the htmlContent",
          "type": "object",
          "$ref": "#/definitions/BindingExecutionResult"
        }
      }
    },
    "BindingExecutionResult": {
      "description": "List of rich components (Insights, Videos, Charts, etc.) that need to be replaced in the htmlContent",
      "type": "object",
      "properties": {
        "azureKb": {
          "description": "Content ingested from many places, such as Azure public docs, Stack, MSDN, Q&A",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApolloAzureKBExecutionResult"
          }
        },
        "insights": {
          "description": "diagnosis and data collected on the customer's deployed application",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApolloInsightExecutionResult"
          }
        },
        "videos": {
          "description": "Video solutions, which have the power to engage the customer by stimulating their senses",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          }
        },
        "videoGroups": {
          "description": "Group of Videos",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VideoGroup"
          }
        },
        "commonSolutions": {
          "description": "SelfHelp Articles written in markdown language, which will be shown inside HTMLContent",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSolution"
          }
        }
      }
    },
    "ApolloAzureKBExecutionResult": {
      "description": "insight execution result detail",
      "type": "object",
      "properties": {
        "showSummary": {
          "description": "Whether to show AzureKB summary to Customers",
          "type": "boolean"
        },
        "showSource": {
          "description": "Whether to show AzureKB source to Customers",
          "type": "boolean"
        },
        "solutionType": {
          "description": "Solution Type",
          "type": "string"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        },
        "searchResults": {
          "description": "Array of AzureKB Search Results",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureKBSearchResultProperties"
          }
        }
      }
    },
    "ApolloInsightExecutionResult": {
      "description": "insight execution result detail",
      "type": "object",
      "properties": {
        "solutionId": {
          "description": "Solution Id to identify single Apollo Solution",
          "type": "string"
        },
        "solutionType": {
          "description": "Solution Type",
          "type": "string"
        },
        "solutionInstanceId": {
          "description": "Unique solution instance Id to identify solution execution result",
          "type": "string"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The provisioning status of the resource"
        },
        "executionText": {
          "description": "Text to be presented to the user while the diagnostic is running",
          "type": "string"
        },
        "timeoutText": {
          "description": "Failure text when diagnostic is timeout",
          "type": "string"
        },
        "noResultText": {
          "description": "Text to be presented to the user if the diagnostic successfully completes but no insight is returned",
          "type": "string"
        },
        "maxInsightCount": {
          "description": "Defines the maximum number of insights to be presented if more than one insight is returned by the diagnostic",
          "type": "string"
        },
        "additionalInputsReq": {
          "description": "Defines if this should be showcased as a DSQ card to the user",
          "type": "boolean"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        },
        "insights": {
          "description": "The problems (if any) detected by this insight",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Insight"
          }
        }
      }
    },
    "Video": {
      "description": "Video detail",
      "type": "object",
      "properties": {
        "src": {
          "description": "Link to the video",
          "type": "string"
        },
        "width": {
          "description": "Width of video, which will be shown to customers",
          "type": "string"
        },
        "title": {
          "description": "Title of the video",
          "type": "string"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        }
      }
    },
    "VideoGroup": {
      "description": "Video group detail",
      "type": "object",
      "properties": {
        "videos": {
          "description": "List of videos will be shown to customers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Video"
          }
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        }
      }
    },
    "CommonSolution": {
      "description": "Common Solution detail",
      "type": "object",
      "properties": {
        "title": {
          "description": "Common article title",
          "type": "string"
        },
        "gitHubPath": {
          "description": "Path of the article in GitHub",
          "type": "string"
        },
        "htmlContent": {
          "description": "The HTML content that needs to be rendered and shown to customer",
          "type": "string"
        },
        "htmlContentBindings": {
          "description": "HTML Content Bindings",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HtmlBinding"
          }
        },
        "type": {
          "description": "Article type",
          "type": "string"
        },
        "replacementKey": {
          "description": "Place holder used in HTML Content replace control with the insight content",
          "type": "string"
        }
      }
    },
    "HtmlBinding": {
      "description": "Represents parameters needed to creation client-side bindings",
      "type": "object",
      "properties": {
        "bindingName": {
          "description": "Binding name",
          "type": "string"
        },
        "bindingType": {
          "description": "Binding type",
          "type": "string"
        },
        "bladeName": {
          "description": "Blade name",
          "type": "string"
        },
        "extensionName": {
          "description": "Extension name",
          "type": "string"
        },
        "bladeInputs": {
          "description": "Input used for opening the blade",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "url": {
          "description": "Url",
          "type": "string"
        },
        "linkText": {
          "description": "Link Text",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Resource Name",
      "x-ms-parameter-location": "client"
    },
    "ApolloNameParameter": {
      "name": "apolloResultName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the insight result"
    },
    "InsightNameParameter": {
      "name": "insightResultName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the insight result"
    },
    "ScopeParameter": {
      "name": "scope",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Request scope"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "InsightResourceNameParameter": {
      "name": "insightResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Unique resource name for insight resources"
    },
    "SolutionIdParameter": {
      "name": "solutionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier for the diagnostic solution has been invoked. (e.g. 00000000-0000-0000-0000-000000000000)"
    }
  }
}
