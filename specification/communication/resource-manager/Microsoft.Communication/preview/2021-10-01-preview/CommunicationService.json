{
  "swagger": "2.0",
  "info": {
    "title": "Azure Communication Services Management API",
    "version": "2021-10-01-preview",
    "description": "REST API for Azure Communication Services"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.Communication/operations": {
      "get": {
        "description": "Lists all of the available REST API operations of the Microsoft.Communication provider.",
        "operationId": "Operations_List",
        "summary": "List Operations",
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/checkNameAvailability": {
      "post": {
        "description": "Checks that the CommunicationService name is valid and is not already in use.",
        "operationId": "CommunicationService_CheckNameAvailability",
        "summary": "Check Name Availability",
        "tags": [
          "Microsoft.Communication"
        ],
        "parameters": [
          {
            "name": "nameAvailabilityParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the name availability.",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Check name availability available": {
            "$ref": "./examples/common/checkNameAvailabilityAvailable.json"
          },
          "Check name availability unavailable": {
            "$ref": "./examples/common/checkNameAvailabilityUnavailable.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/linkNotificationHub": {
      "post": {
        "description": "Links an Azure Notification Hub to this communication service.",
        "operationId": "CommunicationService_LinkNotificationHub",
        "summary": "Link Notification Hub",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "name": "linkNotificationHubParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LinkNotificationHubParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The notification hub has been linked.",
            "schema": {
              "$ref": "#/definitions/LinkedNotificationHub"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Link notification hub": {
            "$ref": "./examples/communicationServices/linkNotificationHub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/communicationServices": {
      "get": {
        "description": "Handles requests to list all resources in a subscription.",
        "operationId": "CommunicationService_ListBySubscription",
        "summary": "List By Subscription",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of CommunicationServices in the subscription.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List CommunicationService resources by subscription": {
            "$ref": "./examples/communicationServices/listBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices": {
      "get": {
        "description": "Handles requests to list all resources in a resource group.",
        "operationId": "CommunicationService_ListByResourceGroup",
        "summary": "List By Resource Group",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of CommunicationServices in a resourceGroup.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List CommunicationService resources by resource group": {
            "$ref": "./examples/communicationServices/listByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}": {
      "patch": {
        "description": "Operation to update an existing CommunicationService.",
        "operationId": "CommunicationService_Update",
        "summary": "Update",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update CommunicationService resource": {
            "$ref": "./examples/communicationServices/update.json"
          }
        }
      },
      "get": {
        "description": "Get the CommunicationService and its properties.",
        "operationId": "CommunicationService_Get",
        "summary": "Get",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding CommunicationService service.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get CommunicationService resource": {
            "$ref": "./examples/communicationServices/get.json"
          }
        }
      },
      "put": {
        "description": "Create a new CommunicationService or update an existing CommunicationService.",
        "operationId": "CommunicationService_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CommunicationServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update CommunicationService resource": {
            "$ref": "./examples/communicationServices/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a CommunicationService.",
        "operationId": "CommunicationService_Delete",
        "summary": "Delete",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete CommunicationService resource": {
            "$ref": "./examples/communicationServices/delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/listKeys": {
      "post": {
        "description": "Get the access keys of the CommunicationService resource.",
        "operationId": "CommunicationService_ListKeys",
        "summary": "List Keys",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes CommunicationService access keys.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List keys": {
            "$ref": "./examples/communicationServices/listKeys.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/communicationServices/{communicationServiceName}/regenerateKey": {
      "post": {
        "description": "Regenerate CommunicationService access key. PrimaryKey and SecondaryKey cannot be regenerated at the same time.",
        "operationId": "CommunicationService_RegenerateKey",
        "summary": "Regenerate Key",
        "tags": [
          "CommunicationService"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameter that describes the Regenerate Key Operation.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegenerateKeyParameters"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CommunicationServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Created. The response contains the new key.",
            "schema": {
              "$ref": "#/definitions/CommunicationServiceKeys"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Regenerate key": {
            "$ref": "./examples/communicationServices/regenerateKey.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}": {
      "get": {
        "description": "Get the EmailService and its properties.",
        "operationId": "EmailService_Get",
        "summary": "Get",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding EmailService resource.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get EmailService resource": {
            "$ref": "./examples/emailServices/get.json"
          }
        }
      },
      "put": {
        "description": "Create a new EmailService or update an existing EmailService.",
        "operationId": "EmailService_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update EmailService resource": {
            "$ref": "./examples/emailServices/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a EmailService.",
        "operationId": "EmailService_Delete",
        "summary": "Delete",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete EmailService resource": {
            "$ref": "./examples/emailServices/delete.json"
          }
        }
      },
      "patch": {
        "description": "Operation to update an existing EmailService.",
        "operationId": "EmailService_Update",
        "summary": "Update",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/EmailServiceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update EmailService resource": {
            "$ref": "./examples/emailServices/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/verifiedExchangeOnlineDomains": {
      "get": {
        "description": "Get a list of domains that are fully verified in Exchange Online.",
        "operationId": "EmailService_ListVerifiedDomainsFromExchangeOnline",
        "summary": "List Verified Domains From Exchange Online",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe a list of verified domains from Exchange Online.",
            "schema": {
              "$ref": "#/definitions/VerifiedExchangeOnlineDomainList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get verified Exchange Online domains": {
            "$ref": "./examples/emailServices/getVerifiedExchangeOnlineDomains.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Communication/emailServices": {
      "get": {
        "description": "Handles requests to list all resources in a subscription.",
        "operationId": "EmailService_ListBySubscription",
        "summary": "List By Subscription",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of EmailServices in the subscription.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List EmailService resources by subscription": {
            "$ref": "./examples/emailServices/listBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices": {
      "get": {
        "description": "Handles requests to list all resources in a resource group.",
        "operationId": "EmailService_ListByResourceGroup",
        "summary": "List By Resource Group",
        "tags": [
          "EmailService"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of EmailServices in a resourceGroup.",
            "schema": {
              "$ref": "#/definitions/EmailServiceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List EmailService resources by resource group": {
            "$ref": "./examples/emailServices/listByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}": {
      "get": {
        "description": "Get the email Domain and its properties.",
        "operationId": "Domain_Get",
        "summary": "Get",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding Domain resource.",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Domain resource": {
            "$ref": "./examples/domains/get.json"
          }
        }
      },
      "put": {
        "description": "Add a new Domain under the parent EmailService resource or update an existing Domain resource.",
        "operationId": "Domain_CreateOrUpdate",
        "summary": "Create Or Update",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the create or update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The create or update request was completed successfully",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "201": {
            "description": "The create or update request was accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "Create or update Domain resource": {
            "$ref": "./examples/domains/createOrUpdate.json"
          }
        }
      },
      "delete": {
        "description": "Operation to delete a Domain resource.",
        "operationId": "Domain_Delete",
        "summary": "Delete",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The delete operation was successful."
          },
          "202": {
            "description": "The delete operation is being performed in the background.",
            "headers": {
              "location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "The resource did not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-examples": {
          "Delete Domain resource": {
            "$ref": "./examples/domains/delete.json"
          }
        }
      },
      "patch": {
        "description": "Operation to update an existing Domain resource.",
        "operationId": "Domain_Update",
        "summary": "Update",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "parameters",
            "in": "body",
            "description": "Parameters for the update operation",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateDomainProperties"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The update request was successful",
            "schema": {
              "$ref": "#/definitions/DomainResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Update Domain resource": {
            "$ref": "./examples/domains/update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains": {
      "get": {
        "description": "Handles requests to list all Domain resources under the parent EmailService resource.",
        "operationId": "Domain_ListByEmailServiceResource",
        "summary": "List by EmailService",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the list of Domain resources under the parent EmailService resource.",
            "schema": {
              "$ref": "#/definitions/DomainResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List Domain resources by EmailService": {
            "$ref": "./examples/domains/listByEmailService.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/verificationStatus": {
      "get": {
        "description": "Get status of verification operation(s).",
        "operationId": "Domain_GetVerificationStatus",
        "summary": "Get Verification Status",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "verificationTypes",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationTypeList"
            },
            "description": "List of verification types.",
            "required": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describe the corresponding verification status.",
            "schema": {
              "$ref": "#/definitions/VerificationStatusRecordList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get verification status": {
            "$ref": "./examples/domains/getVerificationStatus.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/:initiateVerification": {
      "post": {
        "description": "Initiate verification of Dns record.",
        "operationId": "Domain_InitiateVerification",
        "summary": "Initiate Verification",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "verificationType",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationType"
            },
            "description": "Type of verification to be initiated.",
            "required": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "202": {
            "description": "The verification operation has been initiated.",
            "headers": {
              "Location": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "Clients should wait for the Retry-After interval before polling again"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Initiate verification": {
            "$ref": "./examples/domains/initiateVerification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/:cancelVerification": {
      "post": {
        "description": "Cancel verification of Dns record.",
        "operationId": "Domain_CancelVerification",
        "summary": "Cancel Verification",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "verificationType",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationType"
            },
            "description": "Type of verification to be canceled.",
            "required": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The verification operation has been canceled."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Cancel verification": {
            "$ref": "./examples/domains/cancelVerification.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Communication/emailServices/{emailServiceName}/domains/{domainName}/:revokeVerification": {
      "post": {
        "description": "Revoke existing verified status of a Dns record.",
        "operationId": "Domain_RevokeVerification",
        "summary": "Revoke Verification",
        "tags": [
          "EmailDomain"
        ],
        "parameters": [
          {
            "name": "verificationType",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VerificationType"
            },
            "description": "Type of verification to be revoked.",
            "required": true
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v1/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/EmailServiceName"
          },
          {
            "$ref": "#/parameters/DomainName"
          }
        ],
        "responses": {
          "200": {
            "description": "The verified status has been revoked."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Revoke verification": {
            "$ref": "./examples/domains/revokeVerification.json"
          }
        }
      }
    }
  },
  "definitions": {
    "NameAvailabilityParameters": {
      "description": "Data POST-ed to the nameAvailability action",
      "required": [
        "type",
        "name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The resource type.",
          "type": "string"
        },
        "name": {
          "description": "The resource name to validate. e.g.\"my-resource-name-here\"",
          "type": "string"
        }
      }
    },
    "NameAvailability": {
      "description": "Result of the request to check name availability. It contains a flag and possible reason of failure.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Indicates whether the name is available or not.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason of the availability. Required if name is not available.",
          "type": "string"
        },
        "message": {
          "description": "The message of the operation.",
          "type": "string"
        }
      }
    },
    "LinkNotificationHubParameters": {
      "description": "Description of an Azure Notification Hub to link to the communication service",
      "required": [
        "resourceId",
        "connectionString"
      ],
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the notification hub",
          "type": "string"
        },
        "connectionString": {
          "description": "Connection string for the notification hub",
          "type": "string"
        }
      }
    },
    "LinkedNotificationHub": {
      "description": "A notification hub that has been linked to the communication service",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the notification hub",
          "type": "string"
        }
      }
    },
    "CommunicationServiceResourceList": {
      "description": "Object that includes an array of CommunicationServices and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of CommunicationService",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommunicationServiceResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "CommunicationServiceResource": {
      "description": "A class representing a CommunicationService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/LocationResource"
        },
        {
          "$ref": "#/definitions/TaggedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/CommunicationServiceProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "LocationResource": {
      "description": "An ARM resource with its own location (not a global or an inherited location).",
      "type": "object",
      "properties": {
        "location": {
          "description": "The Azure location where the resource is running.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "TaggedResource": {
      "description": "An ARM resource with that can accept tags",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        }
      }
    },
    "CommunicationServiceProperties": {
      "description": "A class that describes the properties of the CommunicationService.",
      "required": [
        "dataLocation"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "hostName": {
          "description": "FQDN of the CommunicationService instance.",
          "type": "string",
          "readOnly": true
        },
        "dataLocation": {
          "description": "The location where the communication service stores its data at rest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "notificationHubId": {
          "description": "Resource ID of an Azure Notification Hub linked to this resource.",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Version of the CommunicationService resource. Probably you need the same or higher version of client SDKs.",
          "type": "string",
          "readOnly": true
        },
        "immutableResourceId": {
          "description": "The immutable resource Id of the communication service.",
          "type": "string",
          "readOnly": true
        },
        "emailDomainId": {
          "description": "List of email Domain resource Ids.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "Resource ID of an EmailService/Domain resource linked to this resource."
          }
        }
      }
    },
    "CommunicationServiceKeys": {
      "description": "A class representing the access keys of a CommunicationService.",
      "type": "object",
      "properties": {
        "primaryKey": {
          "description": "The primary access key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary access key.",
          "type": "string"
        },
        "primaryConnectionString": {
          "description": "CommunicationService connection string constructed via the primaryKey",
          "type": "string"
        },
        "secondaryConnectionString": {
          "description": "CommunicationService connection string constructed via the secondaryKey",
          "type": "string"
        }
      }
    },
    "RegenerateKeyParameters": {
      "description": "Parameters describes the request to regenerate access keys",
      "type": "object",
      "properties": {
        "keyType": {
          "description": "The keyType to regenerate. Must be either 'primary' or 'secondary'(case-insensitive).",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "KeyType",
            "modelAsString": false
          }
        }
      }
    },
    "EmailServiceProperties": {
      "description": "A class that describes the properties of the EmailService.",
      "required": [
        "dataLocation"
      ],
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "dataLocation": {
          "description": "The location where the email service stores its data at rest.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        }
      }
    },
    "EmailServiceResource": {
      "description": "A class representing an EmailService resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/LocationResource"
        },
        {
          "$ref": "#/definitions/TaggedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EmailServiceProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "EmailServiceResourceList": {
      "description": "Object that includes an array of EmailServices and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of EmailService",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailServiceResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "VerificationType": {
      "description": "Type of verification.",
      "enum": [
        "Domain",
        "SPF",
        "DKIM",
        "DMARC",
        "All"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "VerificationType",
        "modelAsString": true
      }
    },
    "VerificationTypeList": {
      "description": "List of VerificationType",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VerificationType"
      }
    },
    "VerificationStatusRecord": {
      "description": "A class that represents a VerificationStatus record.",
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/VerificationType"
        },
        "status": {
          "description": "Status of the verification operation.",
          "enum": [
            "NotStarted",
            "RequestReceived",
            "InProgress",
            "UnableToVerify",
            "Verified"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "VerificationStatus",
            "modelAsString": true
          }
        },
        "reason": {
          "description": "Reason for the verification status.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VerificationStatusRecordList": {
      "description": "List of VerificationStatusRecord",
      "type": "array",
      "items": {
        "$ref": "#/definitions/VerificationStatusRecord"
      }
    },
    "DnsRecord": {
      "description": "A class that represents a VerificationStatus record.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of the DNS record. Example: TXT",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the DNS record.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "Value of the DNS record.",
          "type": "string",
          "readOnly": true
        },
        "verificationType": {
          "$ref": "#/definitions/VerificationType"
        },
        "ttl": {
          "description": "Represents an expiry time in seconds to represent how long this entry can be cached by the resolver, default = 3600sec.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "DnsRecordList": {
      "description": "List of DnsRecord",
      "type": "array",
      "items": {
        "$ref": "#/definitions/DnsRecord"
      }
    },
    "DomainProperties": {
      "description": "A class that describes the properties of the email Domain.",
      "type": "object",
      "required": [
        "fromSenderDomain",
        "isCustomerManagedDomain",
        "isCustomerManagedDomainInExchangeOnline"
      ],
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the resource.",
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Running",
            "Creating",
            "Updating",
            "Deleting",
            "Moving"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "dataLocation": {
          "description": "The location where the domain data is stored at rest.",
          "type": "string",
          "readOnly": true
        },
        "fromSenderDomain": {
          "description": "P2 sender domain that is displayed to the email recipients [RFC 5322].",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "mailFromSenderDomain": {
          "description": "P1 sender domain that is present on the email envelope [RFC 5321].",
          "type": "string"
        },
        "isCustomerManagedDomain": {
          "description": "True if customer manages the domain, False if domain is managed by EmailServices.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isCustomerManagedDomainInExchangeOnline": {
          "description": "True if customer manages the domain in Exchange Online account, False otherwise.",
          "type": "boolean",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "isCustomerManagedSPF": {
          "description": "True if customer manages the SPF configuration, False if EmailServices manages SPF configuration.",
          "type": "boolean",
          "x-nullable": true
        },
        "verificationStates": {
          "description": "List of VerificationStatusRecord",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VerificationStatusRecord"
          },
          "readOnly": true
        },
        "verificationRecords": {
          "description": "List of DnsRecord",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsRecord"
          },
          "readOnly": true
        },
        "usabilityStatus": {
          "description": "Usability status of a domain.",
          "type": "object",
          "properties": {
            "isReadyToLinkWithCommunicationServices": {
              "description": "True if the domain is ready to be linked to a CommunicationServices resource. False otherwise.",
              "type": "boolean"
            },
            "reason": {
              "description": "The reason why domain is not ready to be linked. Required if isReadyToLinkWithCommunicationServices is false.",
              "type": "string"
            }
          },
          "readOnly": true
        }
      }
    },
    "DomainResource": {
      "description": "A class representing an email domain resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/DomainProperties",
          "description": "The properties of the email domain resource.",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        }
      }
    },
    "UpdateDomainProperties": {
      "description": "A class that describes the properties of the email Domain.",
      "type": "object",
      "properties": {
        "mailFromSenderDomain": {
          "description": "P1 sender domain that is present on the email envelope [RFC 5321].",
          "type": "string"
        },
        "isCustomerManagedSPF": {
          "description": "True if customer manages the SPF configuration, False if EmailServices manages SPF configuration.",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "DomainResourceList": {
      "description": "Object that includes an array of Domain resource and a possible link for next set.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Domain resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DomainResource"
          }
        },
        "nextLink": {
          "description": "The URL the client should use to fetch the next page (per server side paging).\r\nIt's null for now, added for future use.",
          "type": "string"
        }
      }
    },
    "VerifiedExchangeOnlineDomainList": {
      "description": "List of FQDNs of verified domains in Exchange Online.",
      "type": "array",
      "items": {
        "type": "string"
      }
    }
  },
  "parameters": {
    "CommunicationServiceName": {
      "name": "communicationServiceName",
      "in": "path",
      "description": "The name of the CommunicationService resource.",
      "pattern": "^[-\\w]+$",
      "minLength": 1,
      "maxLength": 63,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "EmailServiceName": {
      "name": "emailServiceName",
      "in": "path",
      "description": "The name of the EmailService resource.",
      "pattern": "^[-\\w]+$",
      "minLength": 1,
      "maxLength": 63,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "DomainName": {
      "name": "domainName",
      "in": "path",
      "description": "The name of the email Domain resource.",
      "minLength": 1,
      "maxLength": 253,
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
