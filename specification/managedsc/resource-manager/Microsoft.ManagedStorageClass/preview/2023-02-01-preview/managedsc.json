{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ManagedStorageClass",
    "version": "2023-02-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ManagedStorageClass"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.ManagedStorageClass/managedstorageclass": {
      "get": {
        "operationId": "ManagedStorageClass_List",
        "tags": [
          "ManagedStorageClass"
        ],
        "description": "List ManagedStorageClassResource resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ManagedStorageClass_List_0": {
            "$ref": "./examples/ManagedStorageClass_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ManagedStorageClass/managedstorageclass/{managedstorageclassName}": {
      "get": {
        "operationId": "ManagedStorageClass_Get",
        "tags": [
          "ManagedStorageClass"
        ],
        "description": "Get a ManagedStorageClassResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "managedstorageclassName",
            "in": "path",
            "description": "The name of the the managed storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ManagedStorageClass_Get_0": {
            "$ref": "./examples/ManagedStorageClass_Get.json"
          }
        }
      },
      "put": {
        "operationId": "ManagedStorageClass_CreateOrUpdate",
        "tags": [
          "ManagedStorageClass"
        ],
        "description": "Create a ManagedStorageClassResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "managedstorageclassName",
            "in": "path",
            "description": "The name of the the managed storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'ManagedStorageClassResource' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResource"
            }
          },
          "201": {
            "description": "Resource 'ManagedStorageClassResource' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ManagedStorageClass_CreateOrUpdate_0": {
            "$ref": "./examples/ManagedStorageClass_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ManagedStorageClass_Update",
        "tags": [
          "ManagedStorageClass"
        ],
        "description": "Update a ManagedStorageClassResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "managedstorageclassName",
            "in": "path",
            "description": "The name of the the managed storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ManagedStorageClassResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ManagedStorageClass_Update_0": {
            "$ref": "./examples/ManagedStorageClass_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "ManagedStorageClass_Delete",
        "tags": [
          "ManagedStorageClass"
        ],
        "description": "Delete a ManagedStorageClassResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "managedstorageclassName",
            "in": "path",
            "description": "The name of the the managed storage class",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "ManagedStorageClass_Delete_0": {
            "$ref": "./examples/ManagedStorageClass_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.ManagedStorageClass/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List_0": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AccessMode": {
      "type": "string",
      "description": "Storage Class Access Mode",
      "enum": [
        "ReadWriteOnce",
        "ReadWriteMany"
      ],
      "x-ms-enum": {
        "name": "AccessMode",
        "modelAsString": true,
        "values": [
          {
            "name": "ReadWriteOnce",
            "value": "ReadWriteOnce",
            "description": "Read Write Once (RWO) access mode"
          },
          {
            "name": "ReadWriteMany",
            "value": "ReadWriteMany",
            "description": "Read Write Many (RWX) access mode"
          }
        ]
      }
    },
    "BlobStorageClassProperties": {
      "type": "object",
      "description": "The properties of Blob ManagedStorageClass",
      "properties": {
        "azureStorageAccountName": {
          "type": "string",
          "description": "[Blob] Azure Storage Account Name"
        },
        "azureStorageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "[Blob] Azure Storage Account Key",
          "x-ms-secret": true
        }
      },
      "required": [
        "azureStorageAccountName",
        "azureStorageAccountKey"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/StorageClassProperties"
        }
      ],
      "x-ms-discriminator-value": "Blob"
    },
    "BlobStorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for updating a blob storage class properties",
      "properties": {
        "azureStorageAccountName": {
          "type": "string",
          "description": "[Blob] Azure Storage Account Name"
        },
        "azureStorageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "[Blob] Azure Storage Account Key",
          "x-ms-secret": true
        }
      }
    },
    "DataResilienceTier": {
      "type": "string",
      "description": "Data resilience tier of a storage class",
      "enum": [
        "NotDataResilient",
        "DataResilient"
      ],
      "x-ms-enum": {
        "name": "DataResilienceTier",
        "modelAsString": true,
        "values": [
          {
            "name": "NotDataResilient",
            "value": "NotDataResilient",
            "description": "Not data resilient"
          },
          {
            "name": "DataResilient",
            "value": "DataResilient",
            "description": "Data resilient"
          }
        ]
      }
    },
    "FailoverTier": {
      "type": "string",
      "description": "Failover tier of a storage class",
      "enum": [
        "NotAvailable",
        "Slow",
        "Fast",
        "Super"
      ],
      "x-ms-enum": {
        "name": "FailoverTier",
        "modelAsString": true,
        "values": [
          {
            "name": "NotAvailable",
            "value": "NotAvailable",
            "description": "Not available Failover Tier"
          },
          {
            "name": "Slow",
            "value": "Slow",
            "description": "Slow Failover Tier"
          },
          {
            "name": "Fast",
            "value": "Fast",
            "description": "Fast Failover Tier"
          },
          {
            "name": "Super",
            "value": "Super",
            "description": "Super Failover Tier"
          }
        ]
      }
    },
    "ManagedStorageClassProperties": {
      "type": "object",
      "description": "Details of the ManagedStorageClass ManagedStorageClass.",
      "properties": {
        "allowVolumeExpansion": {
          "$ref": "#/definitions/VolumeExpansion",
          "description": "[Native] Volume can be expanded or not"
        },
        "mountOptions": {
          "type": "array",
          "description": "[Native] Additional mount options",
          "items": {
            "type": "string"
          }
        },
        "provisioner": {
          "type": "string",
          "description": "[Native] Provisioner name",
          "readOnly": true
        },
        "volumeBindingMode": {
          "$ref": "#/definitions/VolumeBindingMode",
          "description": "[Native] Binding mode of volumes: Immediate, WaitForFirstConsumer"
        },
        "accessMode": {
          "type": "array",
          "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
          "items": {
            "$ref": "#/definitions/AccessMode"
          }
        },
        "dataResilience": {
          "$ref": "#/definitions/DataResilienceTier",
          "description": "Allow single data node failure"
        },
        "failoverSpeed": {
          "$ref": "#/definitions/FailoverTier",
          "description": "Failover speed: NA, Slow, Fast"
        },
        "limitations": {
          "type": "array",
          "description": "Limitations of the storage class",
          "items": {
            "type": "string"
          }
        },
        "performance": {
          "$ref": "#/definitions/PerformanceTier",
          "description": "Performance tier"
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
        },
        "storageClassProperties": {
          "$ref": "#/definitions/StorageClassProperties",
          "description": "Properties of the ManagedStorageClass",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state",
          "readOnly": true
        }
      },
      "required": [
        "storageClassProperties"
      ]
    },
    "ManagedStorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for updating managedStorageClass properties",
      "properties": {
        "storageClassProperties": {
          "$ref": "#/definitions/StorageClassPropertiesUpdate",
          "description": "New storage class properties of ManagedStorageClass"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedStorageClassResourceUpdateProperties"
        }
      ]
    },
    "ManagedStorageClassResource": {
      "type": "object",
      "description": "A ManagedStorageClassProviderHub resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedStorageClassProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ManagedStorageClassResourceListResult": {
      "type": "object",
      "description": "The response of a ManagedStorageClassResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ManagedStorageClassResource items on this page",
          "items": {
            "$ref": "#/definitions/ManagedStorageClassResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ManagedStorageClassResourceUpdate": {
      "type": "object",
      "description": "The model for updating a managedStorageClass",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ManagedStorageClassPropertiesUpdate",
          "description": "The properties of ManagedStorageClass"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ManagedStorageClassResourceUpdateBase"
        }
      ]
    },
    "ManagedStorageClassResourceUpdateBase": {
      "type": "object",
      "description": "The base model to create a ManagedStorageClassResourceUpdate"
    },
    "ManagedStorageClassResourceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ManagedStorageClassResource.",
      "properties": {
        "allowVolumeExpansion": {
          "$ref": "#/definitions/VolumeExpansion",
          "description": "[Native] Volume can be expanded or not"
        },
        "mountOptions": {
          "type": "array",
          "description": "[Native] Additional mount options",
          "items": {
            "type": "string"
          }
        },
        "volumeBindingMode": {
          "$ref": "#/definitions/VolumeBindingMode",
          "description": "[Native] Binding mode of volumes: Immediate, WaitForFirstConsumer"
        },
        "accessMode": {
          "type": "array",
          "description": "The access mode: [ReadWriteOnce, ReadWriteMany] or [ReadWriteOnce]",
          "items": {
            "$ref": "#/definitions/AccessMode"
          }
        },
        "dataResilience": {
          "$ref": "#/definitions/DataResilienceTier",
          "description": "Allow single data node failure"
        },
        "failoverSpeed": {
          "$ref": "#/definitions/FailoverTier",
          "description": "Failover speed: NA, Slow, Fast"
        },
        "limitations": {
          "type": "array",
          "description": "Limitations of the storage class",
          "items": {
            "type": "string"
          }
        },
        "performance": {
          "$ref": "#/definitions/PerformanceTier",
          "description": "Performance tier"
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "description": "Selection priority when multiple storage classes meet the criteria. 0: Highest, -1: Never use"
        }
      }
    },
    "NativeStorageClassProperties": {
      "type": "object",
      "description": "The properties of Native ManagedStorageClass",
      "allOf": [
        {
          "$ref": "#/definitions/StorageClassProperties"
        }
      ],
      "x-ms-discriminator-value": "Native"
    },
    "NativeStorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for updating a native storage class properties"
    },
    "PerformanceTier": {
      "type": "string",
      "description": "Performance tier of a storage class",
      "enum": [
        "Undefined",
        "Basic",
        "Standard",
        "Premium",
        "Ultra"
      ],
      "x-ms-enum": {
        "name": "PerformanceTier",
        "modelAsString": true,
        "values": [
          {
            "name": "Undefined",
            "value": "Undefined",
            "description": "Undefined Performance Tier"
          },
          {
            "name": "Basic",
            "value": "Basic",
            "description": "Basic Performance Tier"
          },
          {
            "name": "Standard",
            "value": "Standard",
            "description": "Standard Performance Tier"
          },
          {
            "name": "Premium",
            "value": "Premium",
            "description": "Premium Performance Tier"
          },
          {
            "name": "Ultra",
            "value": "Ultra",
            "description": "Ultra Performance Tier"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Initial provisioning in progress"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Update in progress"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Deletion in progress"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Change accepted for processing"
          }
        ]
      }
    },
    "RwxStorageClassProperties": {
      "type": "object",
      "description": "The properties of RWX ManagedStorageClass",
      "properties": {
        "backingStorageClassName": {
          "type": "string",
          "description": "The backing storageclass used to create new storageclass"
        }
      },
      "required": [
        "backingStorageClassName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/StorageClassProperties"
        }
      ],
      "x-ms-discriminator-value": "RWX"
    },
    "RwxStorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for updating a rwx storage class properties",
      "properties": {
        "backingStorageClassName": {
          "type": "string",
          "description": "The backing storageclass used to create new storageclass"
        }
      }
    },
    "SCType": {
      "type": "string",
      "description": "Type of a managed storage class",
      "enum": [
        "Native",
        "RWX",
        "Blob"
      ],
      "x-ms-enum": {
        "name": "SCType",
        "modelAsString": true,
        "values": [
          {
            "name": "Native",
            "value": "Native",
            "description": "Native storage class"
          },
          {
            "name": "RWX",
            "value": "RWX",
            "description": "RWX storage class"
          },
          {
            "name": "Blob",
            "value": "Blob",
            "description": "Blob storage class"
          }
        ]
      }
    },
    "StorageClassProperties": {
      "type": "object",
      "description": "The properties of storage class of the ManagedStorageClass",
      "properties": {
        "type": {
          "$ref": "#/definitions/SCType",
          "description": "Type of the storage class."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "StorageClassPropertiesUpdate": {
      "type": "object",
      "description": "The model for update a managedStorageClass",
      "properties": {
        "backingStorageClassName": {
          "type": "string",
          "description": "The backing storageclass used to create new storageclass"
        },
        "azureStorageAccountName": {
          "type": "string",
          "description": "[Blob] Azure Storage Account Name"
        },
        "azureStorageAccountKey": {
          "type": "string",
          "format": "password",
          "description": "[Blob] Azure Storage Account Key",
          "x-ms-secret": true
        }
      }
    },
    "VolumeBindingMode": {
      "type": "string",
      "description": "Storage class volume binding mode",
      "enum": [
        "Immediate",
        "WaitForFirstConsumer"
      ],
      "x-ms-enum": {
        "name": "VolumeBindingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Immediate",
            "value": "Immediate",
            "description": "Immediate binding mode"
          },
          {
            "name": "WaitForFirstConsumer",
            "value": "WaitForFirstConsumer",
            "description": "Wait for first consumer binding mode"
          }
        ]
      }
    },
    "VolumeExpansion": {
      "type": "string",
      "description": "Ability to expand volumes of a storage class",
      "enum": [
        "Allow",
        "Disallow"
      ],
      "x-ms-enum": {
        "name": "VolumeExpansion",
        "modelAsString": true,
        "values": [
          {
            "name": "Allow",
            "value": "Allow",
            "description": "Allow volume expansion"
          },
          {
            "name": "Disallow",
            "value": "Disallow",
            "description": "Disallow volume expansion"
          }
        ]
      }
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
