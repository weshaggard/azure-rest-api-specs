{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Sovereign",
    "version": "2023-09-28-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "LandingZoneConfigurations"
    },
    {
      "name": "LandingZones"
    }
  ],
  "paths": {
    "/providers/Microsoft.Sovereign/landingzoneconfigurations": {
      "get": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_ListByTenant",
        "description": "List LandingZoneConfiguration resources by tenant",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}": {
      "get": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_Get",
        "description": "Get a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_CreateOrUpdate",
        "description": "Create a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_Update",
        "description": "Update a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfigurationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_Delete",
        "description": "Delete a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/generateLandingZone": {
      "post": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_GenerateLandingZone",
        "description": "Generate the Sovereign Landing Zone",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/GenerateLandingZoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateLandingZoneResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/setPublishingStatus": {
      "post": {
        "tags": [
          "LandingZoneConfigurations"
        ],
        "operationId": "LandingZoneConfigurations_SetPublishingStatus",
        "description": "Provides a mechanism to update the Publish Status",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone configuration resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/SetPublishStatusRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzones": {
      "get": {
        "tags": [
          "LandingZones"
        ],
        "operationId": "LandingZones_ListByTenant",
        "description": "List LandingZone resources by tenant",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzones/{landingzonename}": {
      "get": {
        "tags": [
          "LandingZones"
        ],
        "operationId": "LandingZones_Get",
        "description": "Get a LandingZone",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzonename",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "LandingZones"
        ],
        "operationId": "LandingZones_CreateOrUpdate",
        "description": "Create a LandingZone",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzonename",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/LandingZone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZone"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/LandingZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "LandingZones"
        ],
        "operationId": "LandingZones_Update",
        "description": "Update a LandingZone",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzonename",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/LandingZoneUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZone"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LandingZones"
        ],
        "operationId": "LandingZones_Delete",
        "description": "Delete a LandingZone",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzonename",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "DecommissionedMgProperties": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "Decommissioned managemenrt group properties",
      "required": [
        "policySets",
        "create"
      ]
    },
    "DecommissionedMgPropertiesUpdate": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "Decommissioned managemenrt group properties"
    },
    "Environment": {
      "type": "string",
      "enum": [
        "Dev",
        "Stage",
        "GA",
        "Prod",
        "Test",
        "Demo"
      ],
      "x-ms-enum": {
        "name": "Environment",
        "modelAsString": true,
        "values": [
          {
            "name": "dev",
            "value": "Dev"
          },
          {
            "name": "stage",
            "value": "Stage"
          },
          {
            "name": "ga",
            "value": "GA"
          },
          {
            "name": "prod",
            "value": "Prod"
          },
          {
            "name": "test",
            "value": "Test"
          },
          {
            "name": "demo",
            "value": "Demo"
          }
        ]
      }
    },
    "Firewall": {
      "type": "string",
      "enum": [
        "None",
        "Standard",
        "Premium",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "Firewall",
        "modelAsString": true,
        "values": [
          {
            "name": "none",
            "value": "None"
          },
          {
            "name": "standard",
            "value": "Standard"
          },
          {
            "name": "premium",
            "value": "Premium"
          },
          {
            "name": "existing",
            "value": "Existing"
          }
        ]
      }
    },
    "GenerateLandingZoneRequest": {
      "type": "object",
      "properties": {
        "outputFormat": {
          "$ref": "#/definitions/OutputFormat",
          "description": "The options that code can be generated in"
        },
        "billingScopeAccountId": {
          "type": "string",
          "description": "Billing scope account ID"
        },
        "enrollmentAccountId": {
          "type": "string",
          "description": "Enrollment iD"
        }
      },
      "description": "The request body to generate a Landing Zone.",
      "required": [
        "outputFormat"
      ]
    },
    "GenerateLandingZoneResponse": {
      "type": "object",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "The blob url where generated Landing Zone is stored",
          "readOnly": true
        }
      },
      "description": "response URL for storage"
    },
    "LandingZone": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A landing zone resource",
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LandingZoneConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneConfigurationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A landing zone Configuration resource",
      "allOf": [
        {
          "$ref": "../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LandingZoneConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LandingZoneConfiguration"
          },
          "x-typespec-name": "LandingZoneConfiguration[]",
          "description": "The LandingZoneConfiguration items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a LandingZoneConfiguration list operation.",
      "required": [
        "value"
      ]
    },
    "LandingZoneConfigurationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of a user-initiated, control-plane operation on the Landing Zone Configuration.",
          "readOnly": true
        },
        "publishStatus": {
          "$ref": "#/definitions/PublishStatus",
          "description": "The state of Landing Zone Configuration.",
          "readOnly": true
        },
        "deploymentPrefix": {
          "type": "string",
          "description": "The prefix that will be added to all resources created by this deployment.",
          "minLength": 2,
          "maxLength": 5
        },
        "deploymentSuffix": {
          "type": "string",
          "description": "The suffix that will be added to management group name.",
          "minLength": 2,
          "maxLength": 5
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "the top level management group name."
        },
        "organization": {
          "type": "string",
          "description": "The name of the country/region or agency SLZ is being deployed for."
        },
        "ddosProtection": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "yes to deploy DDoS, otherwise no. To provide an existing DDoS protection plan select existing."
        },
        "ddosProtectionId": {
          "type": "string",
          "description": "Existing ddos protection plan id."
        },
        "logAnalyticsWorkspace": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "yes to deploy log Analytics workspace, otherwise no. To provide an existing log Analytics workspace select existing."
        },
        "logAnalyticsWorkspaceId": {
          "type": "string",
          "description": "The ID for the Log Analytics workspace that was created to centralize log ingest."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tags"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Tags[]",
          "description": "Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}"
        },
        "firewall": {
          "$ref": "#/definitions/Firewall",
          "description": "To deploy firewall choose the standard/premium based on the desired SKU. None for no firewall and existing to choose a pre existing one."
        },
        "firewallId": {
          "type": "string",
          "description": "Existing Firewall Id"
        },
        "firewallSubnet": {
          "type": "string",
          "description": "Azure Firewall subnet. IPv4 CIDR block."
        },
        "managementSubscriptionId": {
          "type": "string",
          "description": "Management Subscription Id."
        },
        "identitySubscriptionId": {
          "type": "string",
          "description": "Identity Subscription Id."
        },
        "connectivitySubscriptionId": {
          "type": "string",
          "description": "Connectivity Subscription Id."
        },
        "environment": {
          "$ref": "#/definitions/Environment",
          "description": "The type of environment being deployed."
        },
        "logRetentionInDays": {
          "description": "Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730",
          "minimum": 30,
          "maximum": 730
        },
        "deploymentLocation": {
          "type": "string",
          "description": "Location to run deployment(s) from the list of Azure Regions"
        },
        "allowedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where resources are allowed to be deployed"
        },
        "allowedConfidentialComputingLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where confidential computing resources are allowed to be deployed"
        },
        "hubNetworkSubnet": {
          "type": "string",
          "description": "Hub network subnet. IPv4 CIDR"
        },
        "azureBastion": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "To deploy the Bastion service choose the yes, no otherwise. For existing bastion service existing."
        },
        "azureBastionId": {
          "type": "string",
          "description": "Existing azure bastion Id."
        },
        "azureBastionSubnet": {
          "type": "string",
          "description": "Azure Bastion subnet. IP v4 CIDR block"
        },
        "landingZonesManagementGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LandingZoneManagementGroupProperties"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "LandingZoneManagementGroupProperties[]",
          "description": "landing zone management group properties"
        },
        "rootMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the deployment root of the landing zone"
        },
        "landingZonesMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Landing Zones management group"
        },
        "platformMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Platform management group"
        },
        "platformManagementMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Management management group under Platform"
        },
        "platformConnectivityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Connectivity management group under Platform"
        },
        "platformIdentityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Identity management group under Platform"
        },
        "decommissionedMg": {
          "$ref": "#/definitions/DecommissionedMgProperties",
          "description": "This will be applied to the decommissioned management group."
        },
        "sandboxMg": {
          "$ref": "#/definitions/SandboxMgProperties",
          "description": "This will be applied to the sandbox management group."
        }
      },
      "description": "The properties of Landing Zone Configuration resource type.",
      "required": [
        "deploymentPrefix",
        "topLevelManagementGroupName",
        "organization",
        "ddosProtection",
        "logAnalyticsWorkspace",
        "firewall",
        "environment",
        "logRetentionInDays",
        "deploymentLocation",
        "allowedLocations",
        "allowedConfidentialComputingLocations",
        "hubNetworkSubnet",
        "azureBastion"
      ]
    },
    "LandingZoneConfigurationUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneConfigurationUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the LandingZoneConfiguration."
    },
    "LandingZoneConfigurationUpdateProperties": {
      "type": "object",
      "properties": {
        "deploymentPrefix": {
          "type": "string",
          "description": "The prefix that will be added to all resources created by this deployment.",
          "minLength": 2,
          "maxLength": 5
        },
        "deploymentSuffix": {
          "type": "string",
          "description": "The suffix that will be added to management group name.",
          "minLength": 2,
          "maxLength": 5
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "the top level management group name."
        },
        "organization": {
          "type": "string",
          "description": "The name of the country/region or agency SLZ is being deployed for."
        },
        "ddosProtection": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "yes to deploy DDoS, otherwise no. To provide an existing DDoS protection plan select existing."
        },
        "ddosProtectionId": {
          "type": "string",
          "description": "Existing ddos protection plan id."
        },
        "logAnalyticsWorkspace": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "yes to deploy log Analytics workspace, otherwise no. To provide an existing log Analytics workspace select existing."
        },
        "logAnalyticsWorkspaceId": {
          "type": "string",
          "description": "The ID for the Log Analytics workspace that was created to centralize log ingest."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tags"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Tags[]",
          "description": "Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}"
        },
        "firewall": {
          "$ref": "#/definitions/Firewall",
          "description": "To deploy firewall choose the standard/premium based on the desired SKU. None for no firewall and existing to choose a pre existing one."
        },
        "firewallId": {
          "type": "string",
          "description": "Existing Firewall Id"
        },
        "firewallSubnet": {
          "type": "string",
          "description": "Azure Firewall subnet. IPv4 CIDR block."
        },
        "managementSubscriptionId": {
          "type": "string",
          "description": "Management Subscription Id."
        },
        "identitySubscriptionId": {
          "type": "string",
          "description": "Identity Subscription Id."
        },
        "connectivitySubscriptionId": {
          "type": "string",
          "description": "Connectivity Subscription Id."
        },
        "environment": {
          "$ref": "#/definitions/Environment",
          "description": "The type of environment being deployed."
        },
        "logRetentionInDays": {
          "description": "Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730",
          "minimum": 30,
          "maximum": 730
        },
        "deploymentLocation": {
          "type": "string",
          "description": "Location to run deployment(s) from the list of Azure Regions"
        },
        "allowedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where resources are allowed to be deployed"
        },
        "allowedConfidentialComputingLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where confidential computing resources are allowed to be deployed"
        },
        "hubNetworkSubnet": {
          "type": "string",
          "description": "Hub network subnet. IPv4 CIDR"
        },
        "azureBastion": {
          "$ref": "#/definitions/ResourceCreationOptions",
          "description": "To deploy the Bastion service choose the yes, no otherwise. For existing bastion service existing."
        },
        "azureBastionId": {
          "type": "string",
          "description": "Existing azure bastion Id."
        },
        "azureBastionSubnet": {
          "type": "string",
          "description": "Azure Bastion subnet. IP v4 CIDR block"
        },
        "landingZonesManagementGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LandingZoneManagementGroupProperties"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "LandingZoneManagementGroupProperties[]",
          "description": "landing zone management group properties"
        },
        "rootMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the deployment root of the landing zone"
        },
        "landingZonesMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Landing Zones management group"
        },
        "platformMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Platform management group"
        },
        "platformManagementMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Management management group under Platform"
        },
        "platformConnectivityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Connectivity management group under Platform"
        },
        "platformIdentityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Identity management group under Platform"
        },
        "decommissionedMg": {
          "$ref": "#/definitions/DecommissionedMgPropertiesUpdate",
          "description": "This will be applied to the decommissioned management group."
        },
        "sandboxMg": {
          "$ref": "#/definitions/SandboxMgPropertiesUpdate",
          "description": "This will be applied to the sandbox management group."
        }
      },
      "description": "The updatable properties of the LandingZoneConfiguration."
    },
    "LandingZoneListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LandingZone"
          },
          "x-typespec-name": "LandingZone[]",
          "description": "The LandingZone items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a LandingZone list operation.",
      "required": [
        "value"
      ]
    },
    "LandingZoneManagementGroupProperties": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        }
      },
      "description": "Landing zone management group properties",
      "required": [
        "policySets",
        "name",
        "isConfidential",
        "isVisibleToInternet"
      ]
    },
    "LandingZoneProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of a user-initiated, control-plane operation on the Landing Zone Configuration.",
          "readOnly": true
        },
        "landingZoneConfigurationId": {
          "type": "string",
          "description": "The associated Landing Zone Configuration."
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "The top level management group name."
        }
      },
      "description": "The properties of Landing Zone resource type."
    },
    "LandingZoneUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the LandingZone."
    },
    "LandingZoneUpdateProperties": {
      "type": "object",
      "properties": {
        "landingZoneConfigurationId": {
          "type": "string",
          "description": "The associated Landing Zone Configuration."
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "The top level management group name."
        }
      },
      "description": "The updatable properties of the LandingZone."
    },
    "ManagementGroupPolicyDetails": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        }
      },
      "description": "Details of policy and initiatives associated with the management group.",
      "required": [
        "policySets"
      ]
    },
    "ManagementGroupPolicyDetailsUpdate": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        }
      },
      "description": "Details of policy and initiatives associated with the management group."
    },
    "OutputFormat": {
      "type": "string",
      "enum": [
        "Bicep",
        "ARM",
        "Terraform"
      ],
      "x-ms-enum": {
        "name": "OutputFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "bicep",
            "value": "Bicep"
          },
          {
            "name": "arm",
            "value": "ARM"
          },
          {
            "name": "terraform",
            "value": "Terraform"
          }
        ]
      }
    },
    "PolicyAssignmentDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the policy or initiatives."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": true,
          "x-typespec-name": "Record<unknown>",
          "description": "The parameters for the policy or initiatives."
        }
      },
      "description": "Details of policy assignments",
      "required": [
        "id",
        "parameters"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the policy monitor operations.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PublishStatus": {
      "type": "string",
      "enum": [
        "Editable",
        "Read-Only",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublishStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "editable",
            "value": "Editable"
          },
          {
            "name": "readOnly",
            "value": "Read-Only"
          },
          {
            "name": "disabled",
            "value": "Disabled"
          }
        ]
      }
    },
    "ResourceCreationOptions": {
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "ResourceCreationOptions",
        "modelAsString": true,
        "values": [
          {
            "name": "yes",
            "value": "Yes"
          },
          {
            "name": "no",
            "value": "No"
          },
          {
            "name": "existing",
            "value": "Existing"
          }
        ]
      }
    },
    "SandboxMgProperties": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "sandbox management group properties",
      "required": [
        "policySets",
        "create"
      ]
    },
    "SandboxMgPropertiesUpdate": {
      "type": "object",
      "properties": {
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "sandbox management group properties"
    },
    "SetPublishStatusRequest": {
      "type": "object",
      "properties": {
        "publishStatus": {
          "$ref": "#/definitions/PublishStatus",
          "description": "The value of the publish status to be update"
        }
      },
      "description": "The request body to update the publish status.",
      "required": [
        "publishStatus"
      ]
    },
    "Tags": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "a tag name"
        },
        "value": {
          "type": "string",
          "description": "a tag value"
        }
      },
      "description": "The detail of each tags",
      "required": [
        "name",
        "value"
      ]
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-09-28-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_09_28_preview",
            "value": "2023-09-28-preview"
          }
        ]
      }
    }
  },
  "parameters": {}
}
