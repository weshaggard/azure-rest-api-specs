{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Sovereign",
    "version": "2023-09-28-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "LandingZonesConfigurations"
    },
    {
      "name": "PolicyMonitors"
    }
  ],
  "paths": {
    "/providers/Microsoft.Sovereign/landingzoneconfigurations": {
      "get": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_ListByTenant",
        "description": "List LandingZoneConfiguration resources by tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfigurationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}": {
      "get": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_Get",
        "description": "Get a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_Get_0": {
            "$ref": "./examples/LandingZoneConfiguration_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_CreateOrUpdate",
        "description": "Create a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_CreateOrUpdate_0": {
            "$ref": "./examples/LandingZoneConfiguration_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_Update",
        "description": "Update a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfigurationUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LandingZoneConfiguration"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_Delete",
        "description": "Delete a LandingZoneConfiguration",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_Delete_0": {
            "$ref": "./examples/LandingZoneConfiguration_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/activateConfiguration": {
      "post": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_ActivateConfiguration",
        "description": "Updates the Publish status to active",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_ActivateConfiguration_0": {
            "$ref": "./examples/LandingZoneConfiguration_ActivateConfiguration.json"
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/deactivateConfiguration": {
      "post": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_DeactivateConfiguration",
        "description": "Update the publish status to inactive",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_DeactivateConfiguration_0": {
            "$ref": "./examples/LandingZoneConfiguration_DeactivateConfiguration.json"
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/generateLandingZone ": {
      "post": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_GenerateLandingZone",
        "description": "Generate the Sovereign Landing Zone",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/GenerateLandingZoneRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GenerateLandingZoneResponse"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_GenerateLandingZone_0": {
            "$ref": "./examples/LandingZoneConfiguration_GenerateLandingZone.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/landingzoneconfigurations/{landingzoneconfigurationname}/resetConfiguration": {
      "post": {
        "tags": [
          "LandingZonesConfigurations"
        ],
        "operationId": "LandingZonesConfigurations_ResetConfiguration",
        "description": "Update the publish status to Configuring.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "landingzoneconfigurationname",
            "in": "path",
            "required": true,
            "description": "The name of the Landing Zone resource type",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "LandingZonesConfigurations_ResetConfiguration_0": {
            "$ref": "./examples/LandingZoneConfiguration_ResetConfiguration.json"
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ListByTenant",
        "description": "List PolicyMonitor resources by tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Get",
        "description": "Get a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_CreateOrUpdate",
        "description": "Create a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreatePolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Update",
        "description": "Update a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Delete",
        "description": "Delete a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/executePolicyMonitor": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ExecutePolicyMonitor",
        "description": "Provides a mechanism for customers to trigger the evaluation policy monitor against an SLZ.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/MonitorRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/executeValidateSlz": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ExecuteValidateSlz",
        "description": "Provides a mechanism for customers to trigger a validate of a particular SLZ instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The content of the action request",
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Action completed successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/getPolicyMonitorExecutionResults": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_GetPolicyMonitorExecutionResults",
        "description": "Returns the results of the policy monitor executions. By default the results of the last 50 executions will be returned.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorResultList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/getSlzValidationResults": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_GetSlzValidationResults",
        "description": "Returns the results of the SLZ Validation. By default the results of the last 50 executions will be returned.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResultList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "AllowedExclusion": {
      "type": "object",
      "properties": {
        "policySetDefinitionId": {
          "type": "string",
          "description": "the policy set for with the exclusion."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "the policy for with the exclusion."
        },
        "exclusionStatus": {
          "$ref": "#/definitions/ExclusionStatus",
          "description": "the status of the exclusion.",
          "readOnly": true
        }
      },
      "description": "The exclusions allowed by a customer.",
      "required": [
        "policySetDefinitionId",
        "policyDefinitionId",
        "exclusionStatus"
      ]
    },
    "AzureBastion": {
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "AzureBastion",
        "modelAsString": true,
        "values": [
          {
            "name": "yes",
            "value": "Yes"
          },
          {
            "name": "no",
            "value": "No"
          },
          {
            "name": "existing",
            "value": "Existing"
          }
        ]
      }
    },
    "DdosProtection": {
      "type": "string",
      "enum": [
        "Yes",
        "No",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "DdosProtection",
        "modelAsString": true,
        "values": [
          {
            "name": "yes",
            "value": "Yes"
          },
          {
            "name": "no",
            "value": "No"
          },
          {
            "name": "existing",
            "value": "Existing"
          }
        ]
      }
    },
    "DecommissionedMgProperties": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "Decommissioned managemenrt group properties",
      "required": [
        "policies",
        "policySets",
        "name",
        "isConfidential",
        "isVisibleToInternet",
        "create"
      ]
    },
    "DecommissionedMgPropertiesUpdate": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "Decommissioned managemenrt group properties"
    },
    "Environment": {
      "type": "string",
      "enum": [
        "Dev",
        "Stage",
        "GA",
        "Prod",
        "Test",
        "Demo"
      ],
      "x-ms-enum": {
        "name": "Environment",
        "modelAsString": true,
        "values": [
          {
            "name": "dev",
            "value": "Dev"
          },
          {
            "name": "stage",
            "value": "Stage"
          },
          {
            "name": "ga",
            "value": "GA"
          },
          {
            "name": "prod",
            "value": "Prod"
          },
          {
            "name": "test",
            "value": "Test"
          },
          {
            "name": "demo",
            "value": "Demo"
          }
        ]
      }
    },
    "ExclusionStatus": {
      "type": "string",
      "enum": [
        "Active",
        "InActive"
      ],
      "x-ms-enum": {
        "name": "ExclusionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "Active"
          },
          {
            "name": "inActive",
            "value": "InActive"
          }
        ]
      }
    },
    "Firewall": {
      "type": "string",
      "enum": [
        "None",
        "Standard",
        "Premium",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "Firewall",
        "modelAsString": true,
        "values": [
          {
            "name": "none",
            "value": "None"
          },
          {
            "name": "standard",
            "value": "Standard"
          },
          {
            "name": "premium",
            "value": "Premium"
          },
          {
            "name": "existing",
            "value": "Existing"
          }
        ]
      }
    },
    "GenerateLandingZoneRequest": {
      "type": "object",
      "properties": {
        "outputFormat": {
          "$ref": "#/definitions/OutputFormat",
          "description": "The options that code can be generated in"
        },
        "billingScopeAccountId": {
          "type": "string",
          "description": "Billing scope account ID"
        },
        "enrollmentAccountId": {
          "type": "string",
          "description": "Enrollment iD"
        }
      },
      "description": "URL for storage",
      "required": [
        "outputFormat"
      ]
    },
    "GenerateLandingZoneResponse": {
      "type": "object",
      "properties": {
        "blobUrl": {
          "type": "string",
          "description": "The blob url where generated Landing Zone is stored",
          "readOnly": true
        }
      },
      "description": "response URL for storage"
    },
    "LandingZoneConfiguration": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneConfigurationProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A landing zone resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "LandingZoneConfigurationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LandingZoneConfiguration"
          },
          "x-typespec-name": "LandingZoneConfiguration[]",
          "description": "The LandingZoneConfiguration items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a LandingZoneConfiguration list operation.",
      "required": [
        "value"
      ]
    },
    "LandingZoneConfigurationProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of a user-initiated, control-plane operation on the Landing Zone Configuration.",
          "readOnly": true
        },
        "publishStatus": {
          "$ref": "#/definitions/PublishStatus",
          "description": "The state of Landing Zone Configuration.",
          "readOnly": true
        },
        "deploymentPrefix": {
          "type": "string",
          "description": "The prefix that will be added to all resources created by this deployment.",
          "minLength": 2,
          "maxLength": 5
        },
        "deploymentSuffix": {
          "type": "string",
          "description": "The suffix that will be added to management group name.",
          "minLength": 2,
          "maxLength": 5
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "the top level management group name."
        },
        "organization": {
          "type": "string",
          "description": "The name of the country/region or agency SLZ is being deployed for."
        },
        "ddosProtection": {
          "$ref": "#/definitions/DdosProtection",
          "description": "yes to deploy DDoS, otherwise no. To provide an existing DDoS protection plan select existing."
        },
        "ddosProtectionId": {
          "type": "string",
          "description": "Existing ddos protection plan id."
        },
        "logAnalyticsWorkspaceId": {
          "type": "string",
          "description": "The ID for the Log Analytics workspace that was created to centralize log ingest."
        },
        "telemetryOutput": {
          "type": "boolean",
          "description": "Telemetry Output"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tags"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Tags[]",
          "description": "Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}"
        },
        "firewall": {
          "$ref": "#/definitions/Firewall",
          "description": "To deploy firewall choose the standard/premium based on the desired SKU. None for no firewall and existing to choose a pre existing one."
        },
        "firewallId": {
          "type": "string",
          "description": "Existing Firewall Id"
        },
        "firewallSubnet": {
          "type": "string",
          "description": "Azure Firewall subnet. IPv4 CIDR block."
        },
        "managementSubscriptionId": {
          "type": "string",
          "description": "Management Subscription Id."
        },
        "identitySubscriptionId": {
          "type": "string",
          "description": "Identity Subscription Id."
        },
        "connectivitySubscriptionId": {
          "type": "string",
          "description": "Connectivity Subscription Id."
        },
        "environment": {
          "$ref": "#/definitions/Environment",
          "description": "The type of environment being deployed."
        },
        "logRetentionInDays": {
          "type": "string",
          "description": "Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730"
        },
        "deploymentLocation": {
          "type": "string",
          "description": "Location to run deployment(s) from the list of Azure Regions"
        },
        "allowedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where resources are allowed to be deployed"
        },
        "allowedConfidentialComputingLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where confidential computing resources are allowed to be deployed"
        },
        "hubNetworkSubnet": {
          "type": "string",
          "description": "Hub network subnet. IPv4 CIDR"
        },
        "azureBastion": {
          "$ref": "#/definitions/AzureBastion",
          "description": "To deploy the Bastion service choose the yes, no otherwise. For existing bastion service existing."
        },
        "azureBastionId": {
          "type": "string",
          "description": "Existing azure bastion Id."
        },
        "azureBastionSubnet": {
          "type": "string",
          "description": "Azure Bastion subnet. IP v4 CIDR block"
        },
        "landingZonesManagementGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagementGroupProperties"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ManagementGroupProperties[]",
          "description": "landing zone management group properties"
        },
        "rootMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the deployment root of the landing zone"
        },
        "landingZonesMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Landing Zones management group"
        },
        "platformMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Platform management group"
        },
        "platformManagementMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Management management group under Platform"
        },
        "platformConnectivityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Connectivity management group under Platform"
        },
        "platformIdentityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetails",
          "description": "This will be applied to the Identity management group under Platform"
        },
        "decommissionedMg": {
          "$ref": "#/definitions/DecommissionedMgProperties",
          "description": "This will be applied to the decommissioned management group."
        },
        "sandboxMg": {
          "$ref": "#/definitions/SandboxMgProperties",
          "description": "This will be applied to the sandbox management group."
        }
      },
      "description": "The properties of Landing Zone Configuration resource type.",
      "required": [
        "deploymentPrefix",
        "topLevelManagementGroupName",
        "organization",
        "ddosProtection",
        "telemetryOutput",
        "firewall",
        "firewallSubnet",
        "environment",
        "logRetentionInDays",
        "deploymentLocation",
        "allowedLocations",
        "allowedConfidentialComputingLocations",
        "azureBastion",
        "azureBastionId",
        "rootMg",
        "landingZonesMg",
        "platformMg",
        "platformManagementMg",
        "platformConnectivityMg",
        "platformIdentityMg",
        "decommissionedMg",
        "sandboxMg"
      ]
    },
    "LandingZoneConfigurationUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LandingZoneConfigurationUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the LandingZoneConfiguration."
    },
    "LandingZoneConfigurationUpdateProperties": {
      "type": "object",
      "properties": {
        "deploymentPrefix": {
          "type": "string",
          "description": "The prefix that will be added to all resources created by this deployment.",
          "minLength": 2,
          "maxLength": 5
        },
        "deploymentSuffix": {
          "type": "string",
          "description": "The suffix that will be added to management group name.",
          "minLength": 2,
          "maxLength": 5
        },
        "topLevelManagementGroupName": {
          "type": "string",
          "description": "the top level management group name."
        },
        "organization": {
          "type": "string",
          "description": "The name of the country/region or agency SLZ is being deployed for."
        },
        "ddosProtection": {
          "$ref": "#/definitions/DdosProtection",
          "description": "yes to deploy DDoS, otherwise no. To provide an existing DDoS protection plan select existing."
        },
        "ddosProtectionId": {
          "type": "string",
          "description": "Existing ddos protection plan id."
        },
        "logAnalyticsWorkspaceId": {
          "type": "string",
          "description": "The ID for the Log Analytics workspace that was created to centralize log ingest."
        },
        "telemetryOutput": {
          "type": "boolean",
          "description": "Telemetry Output"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tags"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Tags[]",
          "description": "Array of tag objects in format of {'name':'a tag name', 'value':'a tag value'}"
        },
        "firewall": {
          "$ref": "#/definitions/Firewall",
          "description": "To deploy firewall choose the standard/premium based on the desired SKU. None for no firewall and existing to choose a pre existing one."
        },
        "firewallId": {
          "type": "string",
          "description": "Existing Firewall Id"
        },
        "firewallSubnet": {
          "type": "string",
          "description": "Azure Firewall subnet. IPv4 CIDR block."
        },
        "managementSubscriptionId": {
          "type": "string",
          "description": "Management Subscription Id."
        },
        "identitySubscriptionId": {
          "type": "string",
          "description": "Identity Subscription Id."
        },
        "connectivitySubscriptionId": {
          "type": "string",
          "description": "Connectivity Subscription Id."
        },
        "environment": {
          "$ref": "#/definitions/Environment",
          "description": "The type of environment being deployed."
        },
        "logRetentionInDays": {
          "type": "string",
          "description": "Set how long logs are retained for, in days. Minimum length is 30 and maximum is 730"
        },
        "deploymentLocation": {
          "type": "string",
          "description": "Location to run deployment(s) from the list of Azure Regions"
        },
        "allowedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where resources are allowed to be deployed"
        },
        "allowedConfidentialComputingLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The allowed Azure regions where confidential computing resources are allowed to be deployed"
        },
        "hubNetworkSubnet": {
          "type": "string",
          "description": "Hub network subnet. IPv4 CIDR"
        },
        "azureBastion": {
          "$ref": "#/definitions/AzureBastion",
          "description": "To deploy the Bastion service choose the yes, no otherwise. For existing bastion service existing."
        },
        "azureBastionId": {
          "type": "string",
          "description": "Existing azure bastion Id."
        },
        "azureBastionSubnet": {
          "type": "string",
          "description": "Azure Bastion subnet. IP v4 CIDR block"
        },
        "landingZonesManagementGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagementGroupProperties"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ManagementGroupProperties[]",
          "description": "landing zone management group properties"
        },
        "rootMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the deployment root of the landing zone"
        },
        "landingZonesMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Landing Zones management group"
        },
        "platformMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Platform management group"
        },
        "platformManagementMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Management management group under Platform"
        },
        "platformConnectivityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Connectivity management group under Platform"
        },
        "platformIdentityMg": {
          "$ref": "#/definitions/ManagementGroupPolicyDetailsUpdate",
          "description": "This will be applied to the Identity management group under Platform"
        },
        "decommissionedMg": {
          "$ref": "#/definitions/DecommissionedMgPropertiesUpdate",
          "description": "This will be applied to the decommissioned management group."
        },
        "sandboxMg": {
          "$ref": "#/definitions/SandboxMgPropertiesUpdate",
          "description": "This will be applied to the sandbox management group."
        }
      },
      "description": "The updatable properties of the LandingZoneConfiguration."
    },
    "ManagementGroupPolicyDetails": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        }
      },
      "description": "Details of policy and initiatives associated with the management group.",
      "required": [
        "policies",
        "policySets"
      ]
    },
    "ManagementGroupPolicyDetailsUpdate": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        }
      },
      "description": "Details of policy and initiatives associated with the management group."
    },
    "ManagementGroupProperties": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        }
      },
      "description": "Landing zone management group properties",
      "required": [
        "policies",
        "policySets",
        "name",
        "isConfidential",
        "isVisibleToInternet"
      ]
    },
    "MonitorCategory": {
      "type": "string",
      "description": "the category of the policy monitor.",
      "enum": [
        "locationPolicies",
        "confidentialPolicies",
        "generalPolicies"
      ],
      "x-ms-enum": {
        "name": "MonitorCategory",
        "modelAsString": true
      }
    },
    "MonitorRequest": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "monitorCategory": {
          "$ref": "#/definitions/MonitorCategory",
          "description": "The category of the SLZ policies to be monitored."
        }
      },
      "description": "The request object to invoke monitoring of the SLZ.",
      "required": [
        "topLevelManagementGroup",
        "monitorCategory"
      ]
    },
    "MonitorResult": {
      "type": "object",
      "properties": {
        "monitorResultOutcome": {
          "$ref": "#/definitions/MonitorResultOutcome",
          "description": "The outcome of the monitor execution."
        },
        "compliancePercentage": {
          "type": "number",
          "format": "double",
          "description": "The percentage of monitor rules that is compliant."
        },
        "monitorResultDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorResultDetail"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MonitorResultDetail[]",
          "description": "The result details for each monitor rule"
        }
      },
      "description": "The execution details",
      "allOf": [
        {
          "$ref": "#/definitions/Result"
        }
      ]
    },
    "MonitorResultDetail": {
      "type": "object",
      "properties": {
        "monitorResultDetailName": {
          "type": "string",
          "description": "The name of the monitor rule."
        },
        "monitorRetailDetailOutcome": {
          "$ref": "#/definitions/MonitorResultDetailOutcome",
          "description": "The outcome of each policy monitor rule."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details about the outcome."
        },
        "isPolicySet": {
          "type": "boolean",
          "description": "True if the outcome is for a policy set"
        },
        "policySetOrPolicyname": {
          "type": "string",
          "description": "The name of the policy/policy set"
        },
        "policyType": {
          "$ref": "#/definitions/PolicyType",
          "description": "The type of the policy - builtin/custom"
        }
      },
      "description": "The detail of an monitor execution",
      "required": [
        "monitorResultDetailName",
        "monitorRetailDetailOutcome",
        "isPolicySet",
        "policySetOrPolicyname"
      ]
    },
    "MonitorResultDetailOutcome": {
      "type": "string",
      "description": "the outcome of each monitor rule.",
      "enum": [
        "Pass",
        "Fail"
      ],
      "x-ms-enum": {
        "name": "MonitorResultDetailOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "pass",
            "value": "Pass"
          },
          {
            "name": "fail",
            "value": "Fail"
          }
        ]
      }
    },
    "MonitorResultList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorResult"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "MonitorResult[]",
          "description": "The MonitorResult items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of getPolicyMonitorExecutionResult operation.",
      "required": [
        "value"
      ]
    },
    "MonitorResultOutcome": {
      "type": "string",
      "description": "the outcome of monitor execution",
      "enum": [
        "Compliant",
        "PartiallyCompliant",
        "NonCompliant"
      ],
      "x-ms-enum": {
        "name": "MonitorResultOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "compliant",
            "value": "Compliant"
          },
          {
            "name": "partiallyCompliant",
            "value": "PartiallyCompliant"
          },
          {
            "name": "nonCompliant",
            "value": "NonCompliant"
          }
        ]
      }
    },
    "MonitorStatus": {
      "type": "string",
      "enum": [
        "Active",
        "InActive"
      ],
      "x-ms-enum": {
        "name": "MonitorStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "Active"
          },
          {
            "name": "inActive",
            "value": "InActive"
          }
        ]
      }
    },
    "OutputFormat": {
      "type": "string",
      "enum": [
        "Bicep",
        "ARM",
        "Terraform"
      ],
      "x-ms-enum": {
        "name": "OutputFormat",
        "modelAsString": true,
        "values": [
          {
            "name": "bicep",
            "value": "Bicep"
          },
          {
            "name": "arm",
            "value": "ARM"
          },
          {
            "name": "terraform",
            "value": "Terraform"
          }
        ]
      }
    },
    "PolicyAssignmentDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the policy or initiatives."
        },
        "parameters": {
          "type": "string",
          "description": "The parameters for the policy or initiatives."
        }
      },
      "description": "Details of policy assignments",
      "required": [
        "id",
        "parameters"
      ]
    },
    "PolicyMonitor": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A policy monitor resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyMonitorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyMonitor"
          },
          "x-typespec-name": "PolicyMonitor[]",
          "description": "The PolicyMonitor items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
        }
      },
      "description": "The response of a PolicyMonitor list operation.",
      "required": [
        "value"
      ]
    },
    "PolicyMonitorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the operation.",
          "readOnly": true
        },
        "monitorStatus": {
          "$ref": "#/definitions/MonitorStatus",
          "description": "The status of the policy monitor.",
          "readOnly": true
        },
        "slzValidationStatus": {
          "$ref": "#/definitions/SLZValidationStatus",
          "description": "The validation status of the SLZ based on the last run of validation for the associated SLZ.",
          "readOnly": true
        },
        "slzValidationDescription": {
          "type": "string",
          "description": "The details of the last run of validation for the associated SLZ.",
          "readOnly": true
        },
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "monitorCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorCategory"
          },
          "x-typespec-name": "MonitorCategory[]",
          "description": "The category of the SLZ policies to be monitored.",
          "x-ms-identifiers": []
        },
        "alertChannel": {
          "type": "string",
          "description": "The channel to alert for divergence identified with the SLZ.",
          "enum": [
            "Email",
            "Azure Portal",
            "Azure Monitor"
          ],
          "x-ms-enum": {
            "name": "string",
            "modelAsString": true,
            "values": [
              {
                "name": "Email",
                "value": "Email"
              },
              {
                "name": "AzurePortal",
                "value": "Azure Portal"
              },
              {
                "name": "AzureMonitor",
                "value": "Azure Monitor"
              }
            ]
          }
        },
        "alertingEmailAddress": {
          "type": "string",
          "description": "The email address for alerting when alert channel is email. Recommended to be a Distribution List",
          "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$"
        },
        "azureMonitorId": {
          "type": "string",
          "description": "The azure monitor Id when alert channel is azure monitor."
        },
        "customerAllowedExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedExclusion"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "AllowedExclusion[]",
          "description": "The azure monitor Id when alert channel is azure monitor."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant id of the resource.",
          "readOnly": true
        }
      },
      "description": "Details of the sovereign policy monitor resource type.",
      "required": [
        "topLevelManagementGroup",
        "monitorCategories",
        "alertChannel"
      ]
    },
    "PolicyMonitorUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the PolicyMonitor."
    },
    "PolicyMonitorUpdateProperties": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "monitorCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorCategory"
          },
          "x-typespec-name": "MonitorCategory[]",
          "description": "The category of the SLZ policies to be monitored.",
          "x-ms-identifiers": []
        },
        "alertChannel": {
          "type": "string",
          "description": "The channel to alert for divergence identified with the SLZ.",
          "enum": [
            "Email",
            "Azure Portal",
            "Azure Monitor"
          ],
          "x-ms-enum": {
            "name": "string",
            "modelAsString": true,
            "values": [
              {
                "name": "Email",
                "value": "Email"
              },
              {
                "name": "AzurePortal",
                "value": "Azure Portal"
              },
              {
                "name": "AzureMonitor",
                "value": "Azure Monitor"
              }
            ]
          }
        },
        "alertingEmailAddress": {
          "type": "string",
          "description": "The email address for alerting when alert channel is email. Recommended to be a Distribution List",
          "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$"
        },
        "azureMonitorId": {
          "type": "string",
          "description": "The azure monitor Id when alert channel is azure monitor."
        },
        "customerAllowedExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllowedExclusion"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "AllowedExclusion[]",
          "description": "The azure monitor Id when alert channel is azure monitor."
        }
      },
      "description": "The updatable properties of the PolicyMonitor."
    },
    "PolicyType": {
      "type": "string",
      "description": "The type of the policy.",
      "enum": [
        "Custom",
        "BuildIn"
      ],
      "x-ms-enum": {
        "name": "PolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "custom",
            "value": "Custom"
          },
          {
            "name": "builtIn",
            "value": "BuildIn"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the policy monitor operations.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "PublishStatus": {
      "type": "string",
      "enum": [
        "Configuring",
        "Active",
        "Inactive"
      ],
      "x-ms-enum": {
        "name": "PublishStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "configuring",
            "value": "Configuring"
          },
          {
            "name": "active",
            "value": "Active"
          },
          {
            "name": "inactive",
            "value": "Inactive"
          }
        ]
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "resultDescription": {
          "type": "string",
          "description": "The details of the validation run."
        }
      },
      "description": "The result associated with a monitor/validation execution.",
      "required": [
        "resultDescription"
      ]
    },
    "SLZValidationStatus": {
      "type": "string",
      "description": "the outcome of SLZ validation.",
      "enum": [
        "ValidSLZ",
        "InvalidSLZ",
        "ValidationNotStarted",
        "ValidationInProgress"
      ],
      "x-ms-enum": {
        "name": "SLZValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "validSLZ",
            "value": "ValidSLZ"
          },
          {
            "name": "invalidSLZ",
            "value": "InvalidSLZ"
          },
          {
            "name": "validationNotStarted",
            "value": "ValidationNotStarted"
          },
          {
            "name": "validationInProgress",
            "value": "ValidationInProgress"
          }
        ]
      }
    },
    "SandboxMgProperties": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "sandbox management group properties",
      "required": [
        "policies",
        "policySets",
        "name",
        "isConfidential",
        "isVisibleToInternet",
        "create"
      ]
    },
    "SandboxMgPropertiesUpdate": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of policy assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "policySets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyAssignmentDetails"
          },
          "x-typespec-name": "PolicyAssignmentDetails[]",
          "description": "Array of initiative assignments to be applied to the management group.",
          "x-ms-identifiers": []
        },
        "name": {
          "type": "string",
          "description": "Management group name."
        },
        "isConfidential": {
          "type": "boolean",
          "description": "Is the management group Confidential?"
        },
        "isVisibleToInternet": {
          "type": "boolean",
          "description": "is it open to internet?"
        },
        "create": {
          "type": "boolean",
          "description": "when set to false this MG is not created"
        }
      },
      "description": "sandbox management group properties"
    },
    "Tags": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "a tag name"
        },
        "value": {
          "type": "string",
          "description": "a tag value"
        }
      },
      "description": "The detail of each tags",
      "required": [
        "name",
        "value"
      ]
    },
    "ValidateRequest": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        }
      },
      "description": "The request object to invoke SLZ validation.",
      "required": [
        "topLevelManagementGroup"
      ]
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Name of the validation Result."
        },
        "validationResultOutcome": {
          "$ref": "#/definitions/ValidationResultOutcome",
          "description": "The outcome of the validation."
        },
        "validationResultDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationResultDetail"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ValidationResultDetail[]",
          "description": "The details for each validation rule"
        }
      },
      "description": "The validation record of a particular SLZ.",
      "required": [
        "name",
        "validationResultOutcome"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Result"
        }
      ]
    },
    "ValidationResultDetail": {
      "type": "object",
      "properties": {
        "validationResultDetailName": {
          "type": "string",
          "description": "The name of the validation result detail."
        },
        "validationResultDetailOutcome": {
          "$ref": "#/definitions/validationResultDetailOutcome",
          "description": "The outcome of each validation rule."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details about the outcome."
        }
      },
      "description": "The detail of each SLZ validation.",
      "required": [
        "validationResultDetailName",
        "validationResultDetailOutcome",
        "outcomeDescription"
      ]
    },
    "ValidationResultList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationResult"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "ValidationResult[]",
          "description": "The ValidationResult items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of getSLZValidationResult operation.",
      "required": [
        "value"
      ]
    },
    "ValidationResultOutcome": {
      "type": "string",
      "description": "the outcome of SLZ validation.",
      "enum": [
        "ValidSLZ",
        "InvalidSLZ"
      ],
      "x-ms-enum": {
        "name": "ValidationResultOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "validSLZ",
            "value": "ValidSLZ"
          },
          {
            "name": "invalidSLZ",
            "value": "InvalidSLZ"
          }
        ]
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-09-28-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_09_28_preview",
            "value": "2023-09-28-preview"
          }
        ]
      }
    },
    "validationResultDetailOutcome": {
      "type": "string",
      "description": "the outcome of each monitor rule.",
      "enum": [
        "Pass",
        "Fail"
      ],
      "x-ms-enum": {
        "name": "validationResultDetailOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "pass",
            "value": "Pass"
          },
          {
            "name": "fail",
            "value": "Fail"
          }
        ]
      }
    }
  },
  "parameters": {}
}
