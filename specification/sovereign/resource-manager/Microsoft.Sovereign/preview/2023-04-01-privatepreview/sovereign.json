{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Sovereign",
    "version": "2023-04-01-privatepreview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PolicyMonitors"
    },
    {
      "name": "PolicyManagements"
    }
  ],
  "paths": {
    "/providers/Microsoft.Sovereign/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymanagements": {
      "get": {
        "tags": [
          "PolicyManagements"
        ],
        "operationId": "PolicyManagements_ListByTenant",
        "description": "List PolicyManagement resources by tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyManagementListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymanagements/{policymanagementname}": {
      "get": {
        "tags": [
          "PolicyManagements"
        ],
        "operationId": "PolicyManagements_Get",
        "description": "Get a PolicyManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymanagementname",
            "in": "path",
            "required": true,
            "description": "The name of the policy management resource.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyManagement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "PolicyManagements"
        ],
        "operationId": "PolicyManagements_CreateOrUpdate",
        "description": "Create a PolicyManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymanagementname",
            "in": "path",
            "required": true,
            "description": "The name of the policy management resource.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PolicyManagement"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyManagement"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/PolicyManagement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PolicyManagements"
        ],
        "operationId": "PolicyManagements_Update",
        "description": "Update a PolicyManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymanagementname",
            "in": "path",
            "required": true,
            "description": "The name of the policy management resource.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PolicyManagementUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyManagement"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PolicyManagements"
        ],
        "operationId": "PolicyManagements_Delete",
        "description": "Delete a PolicyManagement",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymanagementname",
            "in": "path",
            "required": true,
            "description": "The name of the policy management resource.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ListByTenant",
        "description": "List PolicyMonitor resources by tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Get",
        "description": "Get a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_CreateOrUpdate",
        "description": "Create a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreatePolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Update",
        "description": "Update a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Delete",
        "description": "Delete a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Country": {
      "type": "string",
      "enum": [
        "Italy",
        "India"
      ],
      "x-ms-enum": {
        "name": "Country",
        "modelAsString": true
      }
    },
    "PolicyManagement": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyManagementProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "Concrete proxy resource types can be created by aliasing this type using a specific property type.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyManagementListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyManagement"
          },
          "x-cadl-name": "PolicyManagement[]",
          "description": "The PolicyManagement items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a PolicyManagement list operation.",
      "required": [
        "value"
      ]
    },
    "PolicyManagementProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the operation.",
          "readOnly": true
        },
        "countryName": {
          "$ref": "#/definitions/Country",
          "description": "The country of the policy management resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The properties of a policy management resource.",
      "required": [
        "countryName"
      ]
    },
    "PolicyManagementUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyManagementUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the PolicyManagement."
    },
    "PolicyManagementUpdateProperties": {
      "type": "object",
      "properties": {
        "countryName": {
          "$ref": "#/definitions/Country",
          "description": "The country of the policy management resource.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the PolicyManagement."
    },
    "PolicyMonitor": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A policy monitor resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyMonitorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyMonitor"
          },
          "x-cadl-name": "PolicyMonitor[]",
          "description": "The PolicyMonitor items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a PolicyMonitor list operation.",
      "required": [
        "value"
      ]
    },
    "PolicyMonitorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the operation.",
          "readOnly": true
        },
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "policyCategory": {
          "type": "string",
          "description": "The category of the SLZ policies to be monitored.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "Details of the sovereign policy monitor resource type.",
      "required": [
        "topLevelManagementGroup",
        "policyCategory"
      ]
    },
    "PolicyMonitorUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the PolicyMonitor."
    },
    "PolicyMonitorUpdateProperties": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "policyCategory": {
          "type": "string",
          "description": "The category of the SLZ policies to be monitored.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the PolicyMonitor."
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the policy monitor operations.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {}
}
