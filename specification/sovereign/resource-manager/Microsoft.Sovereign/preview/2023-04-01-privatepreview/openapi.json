{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft Sovereign Resource Provider.",
    "version": "2023-04-01-privatepreview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PolicyMonitors"
    }
  ],
  "paths": {
    "/providers/Microsoft.Sovereign/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ListByTenant",
        "description": "List PolicyMonitor resources by tenant",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}": {
      "get": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Get",
        "description": "Get a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetPolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_CreateOrUpdate",
        "description": "Create a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreatePolicyMonitor": {
            "$ref": "./examples/PolicyMonitors_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Update",
        "description": "Update a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitorUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_Delete",
        "description": "Delete a PolicyMonitor",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/executePolicyMonitor": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ExecutePolicyMonitor",
        "description": "Triggers the evaluation policy monitor against an SLZ.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyMonitor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/getPolicyMonitorExecutionResults": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_GetPolicyMonitorExecutionResults",
        "description": "Returns the results of the monitor executions. By default the results of the last 5 executions will be returned.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/MonitorHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.Sovereign/policymonitors/{policymonitorname}/validateSLZ": {
      "post": {
        "tags": [
          "PolicyMonitors"
        ],
        "operationId": "PolicyMonitors_ValidateSlz",
        "description": "Provides a mechanism for customers to trigger a validate of a particular SLZ instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "policymonitorname",
            "in": "path",
            "required": true,
            "description": "The name of the employee",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SlzValidationHistory"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AlertChannel": {
      "type": "string",
      "enum": [
        "Email",
        "Azure Portal",
        "Azure Monitor"
      ],
      "x-ms-enum": {
        "name": "AlertChannel",
        "modelAsString": true,
        "values": [
          {
            "name": "Email",
            "value": "Email"
          },
          {
            "name": "AzurePortal",
            "value": "Azure Portal"
          },
          {
            "name": "AzureMonitor",
            "value": "Azure Monitor"
          }
        ]
      }
    },
    "CustomerAllowedExclusion": {
      "type": "object",
      "properties": {
        "policySetDefinitionId": {
          "type": "string",
          "description": "the policy set for with the exclusion."
        },
        "policyDefinitionId": {
          "type": "string",
          "description": "the policy for with the exclusion."
        },
        "exclusionStatus": {
          "$ref": "#/definitions/ExclusionStatus",
          "description": "the status of the exclusion."
        }
      },
      "description": "The exclusions allowed by a customer.",
      "required": [
        "policySetDefinitionId",
        "policyDefinitionId",
        "exclusionStatus"
      ]
    },
    "ExclusionStatus": {
      "type": "string",
      "enum": [
        "Active",
        "InActive"
      ],
      "x-ms-enum": {
        "name": "ExclusionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "active",
            "value": "Active"
          },
          {
            "name": "inActive",
            "value": "InActive"
          }
        ]
      }
    },
    "MonitorCategory": {
      "type": "string",
      "description": "the category of the policy monitor.",
      "enum": [
        "Location policies for data sovereignity",
        "Confidential policies",
        "General policies"
      ],
      "x-ms-enum": {
        "name": "MonitorCategory",
        "modelAsString": true,
        "values": [
          {
            "name": "locationPolicies",
            "value": "Location policies for data sovereignity"
          },
          {
            "name": "confidentialPolicies",
            "value": "Confidential policies"
          },
          {
            "name": "generalPolicies",
            "value": "General policies"
          }
        ]
      }
    },
    "MonitorHistory": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ."
        },
        "monitorCategory": {
          "$ref": "#/definitions/MonitorCategory",
          "description": "The category of the SLZ policies to be monitored."
        },
        "monitorHistoryStatus": {
          "$ref": "#/definitions/validationOrMonitorHistoryStatus",
          "description": "The status of the monitor execution."
        },
        "monitorHistoryOutcome": {
          "$ref": "#/definitions/MonitorHistoryOutcome",
          "description": "The outcome of the monitor execution."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details of the monitor run."
        },
        "compliancePercentage": {
          "type": "number",
          "format": "double",
          "description": "The percentage of monitor rules that is compliant."
        },
        "completedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The completed time of the monitor execution"
        },
        "monitorHistoryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitorHistoryDetail"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "MonitorHistoryDetail[]",
          "description": "The details for each monitor rule"
        }
      },
      "description": "The execution details",
      "required": [
        "topLevelManagementGroup",
        "monitorCategory"
      ]
    },
    "MonitorHistoryDetail": {
      "type": "object",
      "properties": {
        "monitorHistoryDetailName": {
          "type": "string",
          "description": "The name of the monitor rule."
        },
        "monitorHistoryDetailOutcome": {
          "$ref": "#/definitions/MonitorHistoryDetailOutcome",
          "description": "The outcome of each policy monitor rule."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details about the outcome."
        },
        "isPolicySet": {
          "type": "boolean",
          "description": "True if the outcome is for a policy set"
        },
        "policySetOrPolicyname": {
          "type": "string",
          "description": "The name of the policy/policy set"
        },
        "policyType": {
          "$ref": "#/definitions/PolicyType",
          "description": "The type of the policy - builtin/custom"
        }
      },
      "description": "The detail of an monitor execution",
      "required": [
        "monitorHistoryDetailName",
        "monitorHistoryDetailOutcome",
        "isPolicySet",
        "policySetOrPolicyname"
      ]
    },
    "MonitorHistoryDetailOutcome": {
      "type": "string",
      "description": "the outcome of each monitor rule.",
      "enum": [
        "Pass",
        "Fail"
      ],
      "x-ms-enum": {
        "name": "MonitorHistoryDetailOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "pass",
            "value": "Pass"
          },
          {
            "name": "fail",
            "value": "Fail"
          }
        ]
      }
    },
    "MonitorHistoryOutcome": {
      "type": "string",
      "description": "the outcome of monitor execution",
      "enum": [
        "Compliant",
        "PartiallyCompliant",
        "NonCompliant"
      ],
      "x-ms-enum": {
        "name": "MonitorHistoryOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "compliant",
            "value": "Compliant"
          },
          {
            "name": "partiallyCompliant",
            "value": "PartiallyCompliant"
          },
          {
            "name": "nonCompliant",
            "value": "NonCompliant"
          }
        ]
      }
    },
    "PolicyMonitor": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A policy monitor resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PolicyMonitorListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyMonitor"
          },
          "x-cadl-name": "PolicyMonitor[]",
          "description": "The PolicyMonitor items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a PolicyMonitor list operation.",
      "required": [
        "value"
      ]
    },
    "PolicyMonitorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the operation.",
          "readOnly": true
        },
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "monitorCategory": {
          "$ref": "#/definitions/MonitorCategory",
          "description": "The category of the SLZ policies to be monitored."
        },
        "alertChannel": {
          "$ref": "#/definitions/AlertChannel",
          "description": "The channel to alert for divergence identified with the SLZ."
        },
        "emailAddress": {
          "type": "string",
          "description": "The email address for alerting when alert channel is email.",
          "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$"
        },
        "azureMonitorId": {
          "type": "string",
          "description": "The azure monitor Id when alert channel is azure monitor."
        },
        "customerAllowedExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedExclusion"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "CustomerAllowedExclusion[]",
          "description": "The azure monitor Id when alert channel is azure monitor."
        }
      },
      "description": "Details of the sovereign policy monitor resource type.",
      "required": [
        "topLevelManagementGroup",
        "monitorCategory",
        "alertChannel",
        "customerAllowedExclusions"
      ]
    },
    "PolicyMonitorUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyMonitorUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the PolicyMonitor."
    },
    "PolicyMonitorUpdateProperties": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "monitorCategory": {
          "$ref": "#/definitions/MonitorCategory",
          "description": "The category of the SLZ policies to be monitored."
        },
        "alertChannel": {
          "$ref": "#/definitions/AlertChannel",
          "description": "The channel to alert for divergence identified with the SLZ."
        },
        "emailAddress": {
          "type": "string",
          "description": "The email address for alerting when alert channel is email.",
          "pattern": "^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$"
        },
        "azureMonitorId": {
          "type": "string",
          "description": "The azure monitor Id when alert channel is azure monitor."
        },
        "customerAllowedExclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerAllowedExclusion"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "CustomerAllowedExclusion[]",
          "description": "The azure monitor Id when alert channel is azure monitor."
        }
      },
      "description": "The updatable properties of the PolicyMonitor."
    },
    "PolicyType": {
      "type": "string",
      "description": "The type of the policy.",
      "enum": [
        "Custom",
        "BuildIn"
      ],
      "x-ms-enum": {
        "name": "PolicyType",
        "modelAsString": true,
        "values": [
          {
            "name": "custom",
            "value": "Custom"
          },
          {
            "name": "builtIn",
            "value": "BuildIn"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the policy monitor operations.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "SlzValidationHistory": {
      "type": "object",
      "properties": {
        "topLevelManagementGroup": {
          "type": "string",
          "description": "The top level management group of the SLZ"
        },
        "validationStatus": {
          "$ref": "#/definitions/validationOrMonitorHistoryStatus",
          "description": "The status of the validation."
        },
        "validationOutcome": {
          "$ref": "#/definitions/ValidationHistoryOutcome",
          "description": "The outcome of the validation."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details of the monitor run."
        },
        "completedOn": {
          "type": "string",
          "format": "date-time",
          "description": "The completed time of the monitor execution"
        },
        "validationHistoryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SlzValidationHistoryDetail"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "SlzValidationHistoryDetail[]",
          "description": "The details for each validation rule"
        }
      },
      "description": "The details of the validation.",
      "required": [
        "topLevelManagementGroup",
        "validationStatus",
        "validationOutcome"
      ]
    },
    "SlzValidationHistoryDetail": {
      "type": "object",
      "properties": {
        "validationName": {
          "type": "string",
          "description": "The name of the validation."
        },
        "validationOutcome": {
          "$ref": "#/definitions/ValidationHistoryDetailOutcome",
          "description": "The outcome of each policy monitor rule."
        },
        "outcomeDescription": {
          "type": "string",
          "description": "The details about the outcome."
        }
      },
      "description": "The detail of each SLZ validation.",
      "required": [
        "validationName",
        "validationOutcome",
        "outcomeDescription"
      ]
    },
    "ValidationHistoryDetailOutcome": {
      "type": "string",
      "description": "the outcome of each monitor rule.",
      "enum": [
        "Pass",
        "Fail"
      ],
      "x-ms-enum": {
        "name": "ValidationHistoryDetailOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "pass",
            "value": "Pass"
          },
          {
            "name": "fail",
            "value": "Fail"
          }
        ]
      }
    },
    "ValidationHistoryOutcome": {
      "type": "string",
      "description": "the outcome of SLZ validation.",
      "enum": [
        "ValidSLZ",
        "InvalidSLZ"
      ],
      "x-ms-enum": {
        "name": "ValidationHistoryOutcome",
        "modelAsString": true,
        "values": [
          {
            "name": "validSLZ",
            "value": "ValidSLZ"
          },
          {
            "name": "invalidSLZ",
            "value": "InvalidSLZ"
          }
        ]
      }
    },
    "validationOrMonitorHistoryStatus": {
      "type": "string",
      "enum": [
        "draft",
        "inProgress",
        "completed",
        "failed"
      ],
      "x-ms-enum": {
        "name": "validationOrMonitorHistoryStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Draft",
            "value": "draft"
          },
          {
            "name": "InProgress",
            "value": "inProgress"
          },
          {
            "name": "Completed",
            "value": "completed"
          },
          {
            "name": "Failed",
            "value": "failed"
          }
        ]
      }
    }
  },
  "parameters": {}
}
