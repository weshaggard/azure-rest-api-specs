import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "./models.cadl";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using Azure.Core;

@armProviderNamespace
@service({
	title: "Microsoft Sovereign Resource Provider.",
	version: "2023-04-01-privatepreview",
})
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.Sovereign;

interface Operations extends Azure.ResourceManager.Operations {}

@tenantResource
@doc("A policy monitor resource")
model PolicyMonitor is ProxyResource<PolicyMonitorProperties> {
	@doc("The name of the employee")
	@pattern("^[a-zA-Z0-9-]{3,24}$")
	@key("policymonitorname")
	@segment("policymonitors")
	@path
	name: string;
}

@armResourceOperations(PolicyMonitor)
interface PolicyMonitors
	extends TenantResourceOperations<PolicyMonitor, PolicyMonitorProperties> {
	@post
	@action("validateSLZ")
	@doc("Provides a mechanism for customers to trigger a validate of a particular SLZ instance")
	@armResourceAction(PolicyMonitor)
	validateSLZ(
		...TenantInstanceParameters<PolicyMonitor>
	): ArmResponse<SlzValidationHistory> | ErrorResponse;

	@post
	@action("getPolicyMonitorExecutionResults")
	@doc("Returns the results of the monitor executions. By default the results of the last 5 executions will be returned.")
	@armResourceAction(PolicyMonitor)
	getPolicyMonitorExecutionResults(
		...TenantInstanceParameters<PolicyMonitor>
	): ArmResponse<MonitorHistory> | ErrorResponse;

	@post
	@action("executePolicyMonitor")
	@doc("Triggers the evaluation policy monitor against an SLZ.")
	@armResourceAction(PolicyMonitor)
	executePolicyMonitor(
		...TenantInstanceParameters<PolicyMonitor>
	): ArmResponse<PolicyMonitor> | ErrorResponse;
}
