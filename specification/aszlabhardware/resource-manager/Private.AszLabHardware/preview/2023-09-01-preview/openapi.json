{
  "swagger": "2.0",
  "info": {
    "title": "Private.AszLabHardware",
    "version": "2023-09-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Servers"
    }
  ],
  "paths": {
    "/providers/Private.AszLabHardware/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Private.AszLabHardware/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListBySubscription",
        "description": "List Server resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.AszLabHardware/servers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "description": "List Server resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServerListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.AszLabHardware/servers/{serverName}": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "description": "Get a Server",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "description": "The name of the server",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_CreateOrUpdate",
        "description": "Create a Server",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "description": "The name of the server",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ServerCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "description": "Update a Server",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "description": "The name of the server",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ServerUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Server"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "description": "Delete a Server",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "description": "The name of the server",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "Inventory": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string",
          "description": "The processor of the Server"
        },
        "memory": {
          "type": "string",
          "description": "The memory of the server"
        },
        "disk": {
          "type": "string",
          "description": "The hard drive of the server"
        }
      },
      "description": "Details of the physical properties of the AszLabHw Server",
      "required": [
        "cpu",
        "memory",
        "disk"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "Server": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A physical computer which can be reserved for use by a user",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServerCreateOrUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerPropertiesCreateOrUpdate",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A physical computer which can be reserved for use by a user",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServerListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "x-typespec-name": "Server[]",
          "description": "The Server items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a Server list operation.",
      "required": [
        "value"
      ]
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the server",
          "x-ms-mutability": [
            "read"
          ]
        },
        "goalStateStatus": {
          "type": "string",
          "description": "The current status of the GoalState",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "assetTag": {
          "type": "string",
          "description": "The OneAsset ID of the server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bmcIpAddress": {
          "type": "string",
          "description": "IP address of the server's BMC.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "inventory": {
          "$ref": "#/definitions/Inventory",
          "description": "Server Inventory Information",
          "x-ms-mutability": [
            "read"
          ]
        },
        "banner": {
          "type": "string",
          "description": "Server banner message",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "nickname": {
          "type": "string",
          "description": "Server nickname",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Details of the AszLabHw Server.",
      "required": [
        "status",
        "goalStateStatus",
        "assetTag",
        "bmcIpAddress"
      ]
    },
    "ServerPropertiesCreateOrUpdate": {
      "type": "object",
      "properties": {
        "assetTag": {
          "type": "string",
          "description": "The OneAsset ID of the server.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "bmcIpAddress": {
          "type": "string",
          "description": "IP address of the server's BMC.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "banner": {
          "type": "string",
          "description": "Server banner message",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "nickname": {
          "type": "string",
          "description": "Server nickname",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Details of the AszLabHw Server.",
      "required": [
        "assetTag",
        "bmcIpAddress"
      ]
    },
    "ServerUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-typespec-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ServerUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the Server."
    },
    "ServerUpdateProperties": {
      "type": "object",
      "properties": {
        "banner": {
          "type": "string",
          "description": "Server banner message",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        },
        "nickname": {
          "type": "string",
          "description": "Server nickname",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "The updatable properties of the Server."
    }
  },
  "parameters": {}
}
