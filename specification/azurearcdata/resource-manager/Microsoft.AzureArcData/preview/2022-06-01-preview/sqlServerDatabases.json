{
    "swagger": "2.0",
    "info": {
      "version": "2022-06-01-preview",
      "title": "AzureArcDataManagementClient",
      "description": "The AzureArcData management API provides a RESTful set of web APIs to manage Azure Data Services on Azure Arc Resources."
    },
    "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/databases/{sqlServerDatabaseName}": {
        "put": {
          "tags": [
            "SqlServerDatabases"
          ],
          "operationId": "SqlServerDatabases_Create",
          "description": "Creates or replaces an Arc Sql Server Database.",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionId"
            },
            {
              "$ref": "#/parameters/resourceGroupName"
            },
            {
              "name": "SqlServerDatabaseResource",
              "description": "The request body for database resource.",
              "required": true,
              "in": "body",
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/SqlServerDatabaseResource"
              }
            },
            {
              "$ref": "#/parameters/sqlServerInstanceName"
            },
            {
              "$ref": "#/parameters/sqlServerDatabaseName"
            },
            {
              "$ref": "#/parameters/apiVersion"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/SqlServerDatabaseResource"
              }
            },
            "default": {
              "description": "*** Error Responses: ***",
              "schema": {
                "$ref": "./common.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-examples": {
            "Create a Arc Sql Server database.": {
              "$ref": "./examples/CreateArcSqlServerDatabase.json"
            }
          }
        },
        "delete": {
          "tags": [
            "SqlServerDatabases"
          ],
          "operationId": "SqlServerDatabases_Delete",
          "description": "Deletes an Arc Sql Server database resource.",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionId"
            },
            {
              "$ref": "#/parameters/resourceGroupName"
            },
            {
              "$ref": "#/parameters/sqlServerInstanceName"
            },
            {
              "$ref": "#/parameters/sqlServerDatabaseName"
            },
            {
              "$ref": "#/parameters/apiVersion"
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully deleted the database."
            },
            "204": {
              "description": "The specified database does not exist."
            },
            "default": {
              "description": "*** Error Responses: ***",
              "schema": {
                "$ref": "./common.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-examples": {
            "Deletes a database resource": {
              "$ref": "./examples/DeleteArcSqlServerDatabase.json"
            }
          }
        },
        "get": {
          "tags": [
            "SqlServerDatabases"
          ],
          "operationId": "SqlServerDatabases_Get",
          "description": "Retrieves an Arc Sql Server database.",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionId"
            },
            {
              "$ref": "#/parameters/resourceGroupName"
            },
            {
              "$ref": "#/parameters/sqlServerInstanceName"
            },
            {
              "$ref": "#/parameters/sqlServerDatabaseName"
            },
            {
              "$ref": "#/parameters/apiVersion"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/SqlServerDatabaseResource"
              }
            },
            "default": {
              "description": "*** Error Responses: ***",
              "schema": {
                "$ref": "./common.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-examples": {
            "Retrieves an Arc Sql Server database resource.": {
              "$ref": "./examples/GetArcSqlServerDatabase.json"
            }
          }
        },
        "patch": {
          "tags": [
            "SqlServerDatabases"
          ],
          "description": "Updates an existing database.",
          "operationId": "SqlServerDatabases_Update",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionId"
            },
            {
              "$ref": "#/parameters/resourceGroupName"
            },
            {
              "$ref": "#/parameters/sqlServerInstanceName"
            },
            {
              "$ref": "#/parameters/sqlServerDatabaseName"
            },
            {
              "$ref": "#/parameters/apiVersion"
            },
            {
              "name": "sqlServerDatabaseUpdate",
              "in": "body",
              "description": "The requested database resource state.",
              "required": true,
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/SqlServerDatabaseUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully updated the database.",
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/SqlServerDatabaseResource"
              }
            },
            "default": {
              "description": "*** Error Responses: ***\n\n * 400 PitrPointInTimeInvalid - The point in time {0} is not valid. Valid point in time range from {1} days early to now and not before source server creation time.\n\n * 400 CannotUseTrailingWhitespacesInsqlServerDatabaseName - The database name validation failed.\n\n * 400 InvalidBackupRetentionPeriod - The retention days of {0} is not a valid configuration. Valid backup retention in days must be between {1} and {2}\n\n * 400 ManagedsqlServerDatabaseNameInUse - Database '{0}' already exists. Choose a different database name.\n\n * 400 NoMoreSpaceInManagedInstance - The managed instance has reached its storage limit. The storage usage for the managed instance cannot exceed (%d) MBs.\n\n * 400 ManagedInstanceUpdateSloInProgress - \"The operation could not be completed because a service tier change is in progress for managed instance '{0}.' Please wait for the operation in progress to complete and try again.\"\n\n * 400 SourceDatabaseNotFound - The source database does not exist.\n\n * 400 RegionDoesNotSupportVersion - A user attempted to create a server of a specified version in a location where that server version isn't supported.\n\n * 400 PasswordNotComplex - The provided password is not complex enough.\n\n * 400 CannotUseReservedsqlServerDatabaseName - Cannot use reserved database name in this operation.\n\n * 400 InvalidServerName - Invalid server name specified.\n\n * 400 SourceServerNotFound - The server part of a source database id provided in a CreateDatabaseAsCopy API call doesn't map to an existing server.\n\n * 400 TokenTooLong - The provided token is too long.\n\n * 400 CurrentDatabaseSizeExceedsMaxSize - User attempted to reduce the max size for a database to a size smaller than the current usage.\n\n * 400 InvalidCollation - Collation is not recognized by the server.\n\n * 400 ServerNotFound - The requested server was not found.\n\n * 400 UnsupportedServiceName - The specified name is an invalid name because it contains one or more unsupported unicode characters.\n\n * 400 CurrentDatabaseLogSizeExceedsMaxSize - User attempted to change the database to a sku with lower max log size than the current usage.\n\n * 400 DatabaseNumberLimitReached - Maximum number of databases for SQL Database Managed Instance reached.\n\n * 400 InvalidDatabaseCreateOrUpdateRequest - The request body for the create or update database operation is invalid.\n\n * 400 InvalidResourceId - Invalid resource identifier.\n\n * 400 InvalidSourceDatabaseId - Invalid source database identifier.\n\n * 400 InvalidRestorableDroppedDatabaseId - Invalid restorable dropped database identifier\n\n * 400 MismatchingResourceGroupNameWithUrl - The provided resource group name did not match the name in the Url.\n\n * 400 MismatchingServerNameWithUrl - The provided server name did not match the name in the Url.\n\n * 400 MismatchingSubscriptionWithUrl - The provided subscription did not match the subscription in the Url.\n\n * 400 MissingCollation - Collation is required.\n\n * 400 MissingSourceDatabaseId - Missing source database identifier.\n\n * 400 MissingRestorePointInTime - Missing restore point in time\n\n * 400 MissingStorageContainerSasToken - Missing storage container SAS token\n\n * 400 MissingStorageContainerUri - Missing storage container URI\n\n * 400 RestorableDroppedDatabaseIdGivenForRestoreWithSourceDatabaseId - Cannot specify restorableDroppedDatabaseId when sourceDatabaseId is already given in restore create mode\n\n * 400 CannotUseReservedsqlServerDatabaseName - Cannot use reserved database name in this operation.\n\n * 404 SubscriptionDoesNotHaveServer - The requested server was not found\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 404 ResourceNotFound - The requested resource was not found.\n\n * 404 CannotFindServerCertificateWithThumbprint - Cannot find server certificate with thumbprint '{0}'. Please use PowerShell Cmdlet 'Add-AzureRmSqlManagedInstanceTransparentDataEncryptionCertificate' to create the certificate.\n\n * 404 CannotFindObject - Cannot find the object because it does not exist or you do not have permissions\n\n * 404 SubscriptionNotFound - The requested subscription was not found.\n\n * 404 DatabaseDoesNotExist - User has specified a database name that does not exist on this server instance.\n\n * 404 ServerNotInSubscription - Specified server does not exist on the specified subscription.\n\n * 404 RestoreSourceDatabaseNotFound - Could not find database '{0}' at time '{1}' that can be restored.\n\n * 404 ServerNotInSubscriptionResourceGroup - Specified server does not exist in the specified resource group and subscription.\n\n * 409 RemoteDatabaseExists - The destination database name already exists on the destination server.\n\n * 409 ConflictingDatabaseOperation - There is already some operation on the database and the current operation should wait till it is done.\n\n * 409 SubscriptionDisabled - Subscription is disabled.\n\n * 409 ManagementServiceDatabaseBusy - Database '{0}' is busy with another operation. Please try your operation later.\n\n * 409 ConflictingSystemOperationInProgress - A system maintenance operation is in progress on the database and further operations need to wait until it is completed.\n\n * 429 SubscriptionTooManyCreateUpdateRequests - Requests beyond max requests that can be processed by available resources.\n\n * 429 SubscriptionTooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 500 ActivateOrDeactivateWorkflowThrottling - Activation or deactivation workflow failed because there are too many concurrent workflows\n\n * 503 DatabaseUnavailable - The operation failed because the database is unavailable.\n\n * 503 TooManyRequests - Requests beyond max requests that can be processed by available resources.\n\n * 504 RequestTimeout - Service request exceeded the allowed timeout."
            }
          },
          "x-ms-examples": {
            "Update a database.": {
              "$ref": "./examples/UpdateSqlServerDatabase.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureArcData/sqlServerInstances/{sqlServerInstanceName}/databases": {
        "get": {
          "tags": [
            "SqlServerDatabases"
          ],
          "operationId": "SqlServerDatabases_List",
          "summary": "List the databases associated with the given Arc Sql Server.",
          "parameters": [
            {
              "$ref": "#/parameters/subscriptionId"
            },
            {
              "$ref": "#/parameters/resourceGroupName"
            },
            {
              "$ref": "#/parameters/sqlServerInstanceName"
            },
            {
              "$ref": "#/parameters/apiVersion"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "./sqlServerDatabases.json#/definitions/ArcSqlServerDatabaseListResult"
              }
            },
            "default": {
              "description": "*** Error Responses: ***\n\n * 400 InvalidParameterValue - An invalid value was given to parameter.\n\n * 400 InvalidCrossSubscriptionVmMove - Invalid cross subscription move of resource.\n\n * 404 ResourceNotFound - The requested resource was not found.",
              "schema": {
                "$ref": "./common.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "Gets all databases associated with a SQL mananged instances.": {
              "$ref": "./examples/ListBySqlServerInstanceDatabase.json"
            }
          }
        }
      }
    },
    "definitions": {
      "ArcSqlServerDatabaseListResult": {
        "description": "A list of Arc Sql Server database.",
        "type": "object",
        "properties": {
          "value": {
            "description": "Array of  Arc Sql Server database.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/SqlServerDatabaseResource"
            },
            "readOnly": true
          },
          "nextLink": {
            "description": "Link to retrieve next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "SqlServerDatabaseResource": {
        "type": "object",
        "description": "Arc Sql Server database",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
          }
        ],
        "properties": {
          "properties": {
            "$ref": "#/definitions/SqlServerDatabaseResourceProperties",
            "description": "Properties of Arc Sql Server database",
            "x-ms-client-flatten": false
          }
        },
        "required": [
          "properties"
        ]
      },
      "SqlServerDatabaseResourceProperties": {
        "type": "object",
        "description": "The properties of Arc Sql Server database resource",
        "properties": {
          "collation": {
            "description": "Collation of the managed database.",
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "status": {
            "description": "Status of the database.",
            "enum": [
              "Online",
              "Offline",
              "Shutdown",
              "Creating",
              "Inaccessible",
              "Restoring",
              "Updating"
            ],
            "type": "string",
            "x-ms-enum": {
              "name": "DatabaseState",
              "modelAsString": true
            }
          },
          "lastUpdateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the custom resource was last updated."
          },
          "earliestRestoreTime": {
            "format": "date-time",
            "description": "Earliest restore point in time for point in time restore.",
            "type": "string"
          }
        }
      },
      "SqlServerDatabaseUpdate": {
        "description": "An update to database resource.",
        "type": "object",
        "properties": {
          "tags": {
            "description": "Resource tags.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "parameters": {
      "subscriptionId": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The ID of the Azure subscription",
        "x-ms-parameter-location": "client"
      },
      "resourceGroupName": {
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the Azure resource group",
        "x-ms-parameter-location": "method"
      },
      "apiVersion": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "The API version to use for the request",
        "x-ms-parameter-location": "client"
      },
      "sqlServerInstanceName": {
        "name": "sqlServerInstanceName",
        "description": "Name of SQL Managed Instance",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      },
      "sqlServerDatabaseName": {
        "name": "sqlServerDatabaseName",
        "description": "Name of the database",
        "in": "path",
        "required": true,
        "type": "string",
        "x-ms-parameter-location": "method"
      }
    },
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "description": "Azure Active Directory OAuth2 Flow",
        "flow": "implicit",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    }
  }