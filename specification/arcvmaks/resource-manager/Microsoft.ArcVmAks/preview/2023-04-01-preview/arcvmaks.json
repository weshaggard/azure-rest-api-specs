{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ArcVmAks",
    "version": "2023-04-01-preview",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ArcVm"
    },
    {
      "name": "ArcDisk"
    },
    {
      "name": "ArcNic"
    },
    {
      "name": "ArcVnet"
    },
    {
      "name": "ArcAks"
    }
  ],
  "paths": {
    "/providers/Microsoft.ArcVmAks/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcVmAks/aks": {
      "get": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_ListBySubscription",
        "description": "List ArcAksResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcAksResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcVmAks/disk": {
      "get": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_ListBySubscription",
        "description": "List ArcDiskResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcVmAks/nic": {
      "get": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_ListBySubscription",
        "description": "List ArcNicResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcNicResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcVmAks/vm": {
      "get": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_ListBySubscription",
        "description": "List ArcVmResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVmResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcVmAks/vnet": {
      "get": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_ListBySubscription",
        "description": "List ArcVnetResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/aks": {
      "get": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_ListByResourceGroup",
        "description": "List ArcAksResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcAksResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/aks/{aksName}": {
      "get": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_Get",
        "description": "Get a ArcAksResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "aksName",
            "in": "path",
            "required": true,
            "description": "Name of ArcAks",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcAksResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_CreateOrUpdate",
        "description": "Create a ArcAksResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "aksName",
            "in": "path",
            "required": true,
            "description": "Name of ArcAks",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ArcAksResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcAksResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ArcAksResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_Update",
        "description": "Update a ArcAksResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "aksName",
            "in": "path",
            "required": true,
            "description": "Name of ArcAks",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ArcAksResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcAksResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArcAks"
        ],
        "operationId": "ArcAks_Delete",
        "description": "Delete a ArcAksResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "aksName",
            "in": "path",
            "required": true,
            "description": "Name of ArcAks",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/disk": {
      "get": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_ListByResourceGroup",
        "description": "List ArcDiskResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/disk/{diskName}": {
      "get": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_Get",
        "description": "Get a ArcDiskResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diskName",
            "in": "path",
            "required": true,
            "description": "Name of ArcDisk",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_CreateOrUpdate",
        "description": "Create a ArcDiskResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diskName",
            "in": "path",
            "required": true,
            "description": "Name of ArcDisk",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ArcDiskResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_Update",
        "description": "Update a ArcDiskResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diskName",
            "in": "path",
            "required": true,
            "description": "Name of ArcDisk",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcDiskResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArcDisk"
        ],
        "operationId": "ArcDisk_Delete",
        "description": "Delete a ArcDiskResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "diskName",
            "in": "path",
            "required": true,
            "description": "Name of ArcDisk",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/nic": {
      "get": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_ListByResourceGroup",
        "description": "List ArcNicResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcNicResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/nic/{nicName}": {
      "get": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_Get",
        "description": "Get a ArcNicResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "nicName",
            "in": "path",
            "required": true,
            "description": "Name of ArcNic",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcNicResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_CreateOrUpdate",
        "description": "Create a ArcNicResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "nicName",
            "in": "path",
            "required": true,
            "description": "Name of ArcNic",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ArcNicResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcNicResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ArcNicResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_Update",
        "description": "Update a ArcNicResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "nicName",
            "in": "path",
            "required": true,
            "description": "Name of ArcNic",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ArcNicResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcNicResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArcNic"
        ],
        "operationId": "ArcNic_Delete",
        "description": "Delete a ArcNicResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "nicName",
            "in": "path",
            "required": true,
            "description": "Name of ArcNic",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/vm": {
      "get": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_ListByResourceGroup",
        "description": "List ArcVmResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVmResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/vm/{vmName}": {
      "get": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_Get",
        "description": "Get a ArcVmResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vmName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVm",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVmResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_CreateOrUpdate",
        "description": "Create a ArcVmResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vmName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVm",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ArcVmResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVmResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ArcVmResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_Update",
        "description": "Update a ArcVmResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vmName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVm",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ArcVmResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVmResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArcVm"
        ],
        "operationId": "ArcVm_Delete",
        "description": "Delete a ArcVmResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vmName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVm",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/vnet": {
      "get": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_ListByResourceGroup",
        "description": "List ArcVnetResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcVmAks/vnet/{vnetName}": {
      "get": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_Get",
        "description": "Get a ArcVnetResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vnetName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVnet",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_CreateOrUpdate",
        "description": "Create a ArcVnetResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vnetName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVnet",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ArcVnetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_Update",
        "description": "Update a ArcVnetResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vnetName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVnet",
            "maxLength": 64,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ArcVnetResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArcVnet"
        ],
        "operationId": "ArcVnet_Delete",
        "description": "Delete a ArcVnetResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "vnetName",
            "in": "path",
            "required": true,
            "description": "Name of ArcVnet",
            "maxLength": 64,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "ArcAksProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "workerNodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Worker node count"
        },
        "controlPlaneNodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane node count"
        },
        "nodeCpu": {
          "type": "integer",
          "format": "int64",
          "description": "Node CPU count"
        },
        "nodeMemory": {
          "type": "integer",
          "format": "int64",
          "description": "Node memory size in bytes"
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "K8s version"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The properties of ArcAks",
      "required": [
        "hciResourceId",
        "workerNodeCount",
        "controlPlaneNodeCount",
        "nodeCpu",
        "nodeMemory",
        "kubernetesVersion"
      ]
    },
    "ArcAksResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcAksProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcAks"
        }
      },
      "description": "An ArcAks",
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ArcAksResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcAksResource"
          },
          "x-cadl-name": "ArcAksResource[]",
          "description": "The ArcAksResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ArcAksResource list operation.",
      "required": [
        "value"
      ]
    },
    "ArcAksResourceUpdate": {
      "type": "object",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcAks"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ArcAksResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ArcAksResource."
    },
    "ArcAksResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "workerNodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Worker node count"
        },
        "controlPlaneNodeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Control plane node count"
        },
        "nodeCpu": {
          "type": "integer",
          "format": "int64",
          "description": "Node CPU count"
        },
        "nodeMemory": {
          "type": "integer",
          "format": "int64",
          "description": "Node memory size in bytes"
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "K8s version"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The updatable properties of the ArcAksResource."
    },
    "ArcDiskProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "disk size in bytes"
        },
        "os": {
          "type": "string",
          "description": "os of the disk"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The properties of ArcDisk",
      "required": [
        "hciResourceId",
        "size"
      ]
    },
    "ArcDiskResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcDiskProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        }
      },
      "description": "An ArcDisk",
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ArcDiskResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcDiskResource"
          },
          "x-cadl-name": "ArcDiskResource[]",
          "description": "The ArcDiskResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ArcDiskResource list operation.",
      "required": [
        "value"
      ]
    },
    "ArcDiskResourceUpdate": {
      "type": "object",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ArcDiskResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ArcDiskResource."
    },
    "ArcDiskResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "description": "disk size in bytes"
        },
        "os": {
          "type": "string",
          "description": "os of the disk"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The updatable properties of the ArcDiskResource."
    },
    "ArcNicProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "network": {
          "type": "string",
          "description": "Vnet resource id"
        },
        "ipv4Settings": {
          "type": "string",
          "description": "Ipv4 settings"
        },
        "ip": {
          "type": "string",
          "description": "ip address"
        },
        "subnetMask": {
          "type": "string",
          "description": "subnet mask"
        },
        "gatewayIp": {
          "type": "string",
          "description": "gateway ip"
        },
        "dnsIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "dns ips"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The properties of ArcNic",
      "required": [
        "hciResourceId",
        "network",
        "ipv4Settings"
      ]
    },
    "ArcNicResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcNicProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        }
      },
      "description": "An ArcNic",
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ArcNicResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcNicResource"
          },
          "x-cadl-name": "ArcNicResource[]",
          "description": "The ArcNicResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ArcNicResource list operation.",
      "required": [
        "value"
      ]
    },
    "ArcNicResourceUpdate": {
      "type": "object",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ArcNicResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ArcNicResource."
    },
    "ArcNicResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "network": {
          "type": "string",
          "description": "Vnet resource id"
        },
        "ipv4Settings": {
          "type": "string",
          "description": "Ipv4 settings"
        },
        "ip": {
          "type": "string",
          "description": "ip address"
        },
        "subnetMask": {
          "type": "string",
          "description": "subnet mask"
        },
        "gatewayIp": {
          "type": "string",
          "description": "gateway ip"
        },
        "dnsIps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "dns ips"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The updatable properties of the ArcNicResource."
    },
    "ArcVmCreateData": {
      "type": "object",
      "properties": {
        "credential": {
          "$ref": "#/definitions/ArcVmCredential",
          "description": "admin credential"
        },
        "customData": {
          "type": "string",
          "description": "Vm init custom data"
        }
      },
      "description": "Vm creation properties"
    },
    "ArcVmCredential": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "description": "user name"
        },
        "password": {
          "type": "string",
          "description": "password"
        }
      },
      "description": "Arc Vm admin credential",
      "required": [
        "user",
        "password"
      ]
    },
    "ArcVmProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "cpu": {
          "type": "integer",
          "format": "int64",
          "description": "Cpu number"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "description": "memory size in bytes"
        },
        "image": {
          "type": "string",
          "description": "vm image"
        },
        "osDisk": {
          "type": "string",
          "description": "os disk resource id"
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "data disk resource ids"
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "network interface resource ids"
        },
        "createVmData": {
          "$ref": "#/definitions/ArcVmCreateData",
          "description": "vm creation data"
        },
        "state": {
          "type": "string",
          "description": "vm state"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The properties of ArcVm",
      "required": [
        "hciResourceId",
        "cpu",
        "memory",
        "image",
        "osDisk",
        "state"
      ]
    },
    "ArcVmResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcVmProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        }
      },
      "description": "An ArcVm",
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ArcVmResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcVmResource"
          },
          "x-cadl-name": "ArcVmResource[]",
          "description": "The ArcVmResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ArcVmResource list operation.",
      "required": [
        "value"
      ]
    },
    "ArcVmResourceUpdate": {
      "type": "object",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ArcVmResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ArcVmResource."
    },
    "ArcVmResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "cpu": {
          "type": "integer",
          "format": "int64",
          "description": "Cpu number"
        },
        "memory": {
          "type": "integer",
          "format": "int64",
          "description": "memory size in bytes"
        },
        "image": {
          "type": "string",
          "description": "vm image"
        },
        "osDisk": {
          "type": "string",
          "description": "os disk resource id"
        },
        "dataDisks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "data disk resource ids"
        },
        "networkInterfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "network interface resource ids"
        },
        "createVmData": {
          "$ref": "#/definitions/ArcVmCreateData",
          "description": "vm creation data"
        },
        "state": {
          "type": "string",
          "description": "vm state"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The updatable properties of the ArcVmResource."
    },
    "ArcVnetProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "networkType": {
          "type": "string",
          "description": "Network type"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The properties of ArcVnet",
      "required": [
        "hciResourceId",
        "networkType"
      ]
    },
    "ArcVnetResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArcVnetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        }
      },
      "description": "An ArcVnet",
      "required": [
        "extendedLocation"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ArcVnetResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArcVnetResource"
          },
          "x-cadl-name": "ArcVnetResource[]",
          "description": "The ArcVnetResource items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ArcVnetResource list operation.",
      "required": [
        "value"
      ]
    },
    "ArcVnetResourceUpdate": {
      "type": "object",
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation",
          "description": "Custom location of ArcVm"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ArcVnetResourceUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ArcVnetResource."
    },
    "ArcVnetResourceUpdateProperties": {
      "type": "object",
      "properties": {
        "hciResourceId": {
          "type": "string",
          "description": "Hci Resource Id"
        },
        "networkType": {
          "type": "string",
          "description": "Network type"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Resource provision state"
        }
      },
      "description": "The updatable properties of the ArcVnetResource."
    },
    "ExtendedLocation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "extended location type: CustomLocation"
        },
        "name": {
          "type": "string",
          "description": "extended location resource id"
        }
      },
      "description": "extended location",
      "required": [
        "type",
        "name"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {}
}
