{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ConlvPOC",
    "version": "2023-05-01-preview"
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ProvisioningPolicys"
    },
    {
      "name": "ProvisioningTemplates"
    },
    {
      "name": "DiscoveryPolicies"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Microsoft.ConlvPOC/discoveryPolicies": {
      "get": {
        "tags": [
          "DiscoveryPolicies"
        ],
        "operationId": "DiscoveryPolicies_List",
        "description": "List DiscoveryPolicy resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ConlvPOC/discoveryPolicies/{discoveryPolicyName}": {
      "get": {
        "tags": [
          "DiscoveryPolicies"
        ],
        "operationId": "DiscoveryPolicies_Get",
        "description": "Get a DiscoveryPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "discoveryPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DiscoveryPolicies"
        ],
        "operationId": "DiscoveryPolicies_CreateOrUpdate",
        "description": "Create a DiscoveryPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "discoveryPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicy"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "DiscoveryPolicies"
        ],
        "operationId": "DiscoveryPolicies_Update",
        "description": "Update a DiscoveryPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "discoveryPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DiscoveryPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DiscoveryPolicies"
        ],
        "operationId": "DiscoveryPolicies_Delete",
        "description": "Delete a DiscoveryPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "discoveryPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy.",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/providers/Microsoft.ConlvPOC/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ConlvPOC/ProvisioningPolicys": {
      "get": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_ListBySubscription",
        "description": "List ProvisioningPolicy resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConlvPOC/ProvisioningPolicys": {
      "get": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_ListByResourceGroup",
        "description": "List ProvisioningPolicy resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConlvPOC/ProvisioningPolicys/{ProvisioningPolicyName}": {
      "get": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_Get",
        "description": "Get a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GetProvisioningPolicy": {
            "$ref": "./examples/ProvisioningPolicys_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_CreateOrUpdate",
        "description": "Create a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "CreateProvisioningPolicy": {
            "$ref": "./examples/ProvisioningPolicys_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_Update",
        "description": "Update a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ProvisioningPolicys"
        ],
        "operationId": "ProvisioningPolicys_Delete",
        "description": "Delete a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConlvPOC/ProvisioningPolicys/{ProvisioningPolicyName}/provisioningTemplates": {
      "get": {
        "tags": [
          "ProvisioningTemplates"
        ],
        "operationId": "ProvisioningTemplates_ListByProvisioningPolicy",
        "description": "List ProvisioningTemplate resources by ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConlvPOC/ProvisioningPolicys/{ProvisioningPolicyName}/provisioningTemplates/{provisioningTemplateName}": {
      "get": {
        "tags": [
          "ProvisioningTemplates"
        ],
        "operationId": "ProvisioningTemplates_Get",
        "description": "Get a ProvisioningTemplate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "provisioningTemplateName",
            "in": "path",
            "required": true,
            "description": "The name of the template",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ProvisioningTemplates"
        ],
        "operationId": "ProvisioningTemplates_CreateOrUpdate",
        "description": "Create a ProvisioningTemplate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "provisioningTemplateName",
            "in": "path",
            "required": true,
            "description": "The name of the template",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplate"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "tags": [
          "ProvisioningTemplates"
        ],
        "operationId": "ProvisioningTemplates_Delete",
        "description": "Delete a ProvisioningTemplate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "provisioningTemplateName",
            "in": "path",
            "required": true,
            "description": "The name of the template",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              },
              "Location": {
                "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ProvisioningTemplates"
        ],
        "operationId": "ProvisioningTemplates_Update",
        "description": "Update a ProvisioningTemplate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "ProvisioningPolicyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "provisioningTemplateName",
            "in": "path",
            "required": true,
            "description": "The name of the template",
            "pattern": "^[a-zA-Z0-9-]{3,24}$",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllocationEndpoint": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Discriminator property for AllocationEndpoint."
        },
        "name": {
          "type": "string",
          "description": "Name of the endpoint"
        },
        "resourceId": {
          "type": "string",
          "description": "Resource id of the endpoint"
        }
      },
      "description": "Endpoint",
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "AllocationRule": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/AllocationType",
          "description": "Type of the allocation rule"
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "Type of endpoint"
        },
        "endpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllocationEndpoint"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "AllocationEndpoint[]",
          "description": "List of endpoints"
        }
      },
      "required": [
        "type",
        "endpointType",
        "endpoints"
      ]
    },
    "AllocationType": {
      "type": "string",
      "description": "Type of allocation rule",
      "enum": [
        "GeoBased",
        "Weighted",
        "Default"
      ],
      "x-ms-enum": {
        "name": "AllocationType",
        "modelAsString": true
      }
    },
    "AttestationRule": {
      "type": "string",
      "description": "The attestation rule.",
      "enum": [
        "SymmetricKey",
        "X509",
        "ManagedPKI"
      ],
      "x-ms-enum": {
        "name": "AttestationRule",
        "modelAsString": false
      }
    },
    "DiscoveryPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoveryPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "The discovery policy.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DiscoveryPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DiscoveryPolicy"
          },
          "x-typespec-name": "DiscoveryPolicy[]",
          "description": "The DiscoveryPolicy items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a DiscoveryPolicy list operation.",
      "required": [
        "value"
      ]
    },
    "DiscoveryPolicyProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "enableDiscovery": {
          "type": "boolean",
          "description": "Wether discovery should be enabled.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "credentialIssuancePolicy": {
          "type": "string",
          "description": "Describes a credential issuance policy which can create a bootstrap credential to be used post discovery."
        }
      },
      "description": "Details of the ConlvPOC DiscoveryPolicy."
    },
    "DiscoveryPolicyUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoveryPolicyUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the DiscoveryPolicy."
    },
    "DiscoveryPolicyUpdateProperties": {
      "type": "object",
      "properties": {
        "enableDiscovery": {
          "type": "boolean",
          "description": "Wether discovery should be enabled.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "credentialIssuancePolicy": {
          "type": "string",
          "description": "Describes a credential issuance policy which can create a bootstrap credential to be used post discovery."
        }
      },
      "description": "The updatable properties of the DiscoveryPolicy."
    },
    "EndpointType": {
      "type": "string",
      "description": "Type of the endpoint",
      "enum": [
        "AzureEventGridBroker",
        "AzureStorage",
        "None"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureEventGridBroker",
            "value": "AzureEventGridBroker",
            "description": "Azure event grid broker"
          },
          {
            "name": "AzureStorage",
            "value": "AzureStorage",
            "description": "Azure storage"
          },
          {
            "name": "None",
            "value": "None",
            "description": "No endpoint"
          }
        ]
      }
    },
    "GeoBasedEndpoint": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "Region of the endpoint"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AllocationEndpoint"
        }
      ],
      "x-ms-discriminator-value": "GeoBased"
    },
    "ProvisioningPolicy": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProvisioningPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A ConlvPOCProviderHub resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningPolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningPolicy"
          },
          "x-typespec-name": "ProvisioningPolicy[]",
          "description": "The ProvisioningPolicy items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ProvisioningPolicy list operation.",
      "required": [
        "value"
      ]
    },
    "ProvisioningPolicyProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "attestationPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttestationRule"
          },
          "x-typespec-name": "AttestationRule[]",
          "description": "The attestation policy which contains a list of attestation rules."
        }
      },
      "description": "Details of the ConlvPOC ProvisioningPolicy."
    },
    "ProvisioningPolicyUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-typespec-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningPolicyUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ProvisioningPolicy."
    },
    "ProvisioningPolicyUpdateProperties": {
      "type": "object",
      "properties": {
        "attestationPolicy": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttestationRule"
          },
          "x-typespec-name": "AttestationRule[]",
          "description": "The attestation policy which contains a list of attestation rules."
        }
      },
      "description": "The updatable properties of the ProvisioningPolicy."
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ProvisioningTemplate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProvisioningTemplateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "location": {
          "type": "string",
          "description": "The location of the resource",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "allocations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AllocationRule"
          },
          "x-typespec-name": "Record<AllocationRule>",
          "description": "Allocation rules"
        }
      },
      "description": "The provisioning template.",
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "ProvisioningTemplateListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningTemplate"
          },
          "x-typespec-name": "ProvisioningTemplate[]",
          "description": "The ProvisioningTemplate items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a ProvisioningTemplate list operation.",
      "required": [
        "value"
      ]
    },
    "ProvisioningTemplateProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "templateType": {
          "type": "string",
          "description": "The type of the template",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The provisioning steps."
        }
      },
      "description": "Details of the ConlvPOC ProvisioningTemplate."
    },
    "ProvisioningTemplateUpdate": {
      "type": "object",
      "properties": {
        "allocations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/AllocationRule"
          },
          "x-typespec-name": "Record<AllocationRule>",
          "description": "Allocation rules"
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningTemplateUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the ProvisioningTemplate."
    },
    "ProvisioningTemplateUpdateProperties": {
      "type": "object",
      "properties": {
        "templateType": {
          "type": "string",
          "description": "The type of the template",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-typespec-name": "string[]",
          "description": "The provisioning steps."
        }
      },
      "description": "The updatable properties of the ProvisioningTemplate."
    },
    "WeightedEndpoint": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "number",
          "format": "double",
          "description": "Weight of the endpoint"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/AllocationEndpoint"
        }
      ],
      "x-ms-discriminator-value": "Weighted"
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "x-ms-skip-url-encoding": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
