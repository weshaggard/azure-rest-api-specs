{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.SecurityDevOps",
    "description": "REST APIs for Defender for DevOps",
    "version": "2023-06-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs": {
      "get": {
        "tags": [
          "default"
        ],
        "operationId": "AzureDevOpsOrg_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrgListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsOrg_List": {
            "$ref": "./examples/AzureDevOpsOrgList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs/{azureDevOpsOrgName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored AzureDevOps Org resource for a given ID.",
        "operationId": "AzureDevOpsOrg_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsOrg_Get": {
            "$ref": "./examples/AzureDevOpsOrgGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update monitored AzureDevOps Org details.",
        "operationId": "AzureDevOpsOrg_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsOrg",
            "description": "Azure DevOps Org resource payload.",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsOrg"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsOrg_Update": {
            "$ref": "./examples/AzureDevOpsOrgUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs/{azureDevOpsOrgName}/projects/{azureDevOpsProjectName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored AzureDevOps Project resource for a given ID.",
        "operationId": "AzureDevOpsProject_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsProject_Get": {
            "$ref": "./examples/AzureDevOpsProjectGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update monitored AzureDevOps Project details.",
        "operationId": "AzureDevOpsProject_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsProject",
            "description": "Azure DevOps Project resource payload.",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProject"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsProject_Update": {
            "$ref": "./examples/AzureDevOpsProjectUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs/{azureDevOpsOrgName}/projects": {
      "get": {
        "tags": [
          "default"
        ],
        "operationId": "AzureDevOpsProject_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsProjectListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsProject_List": {
            "$ref": "./examples/AzureDevOpsProjectList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs/{azureDevOpsOrgName}/projects/{azureDevOpsProjectName}/repos": {
      "get": {
        "tags": [
          "default"
        ],
        "operationId": "AzureDevOpsRepo_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsProjectName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepoListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "AzureDevOpsRepo_List": {
            "$ref": "./examples/AzureDevOpsRepoList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/azureDevOpsConnectors/{azureDevOpsConnectorName}/orgs/{azureDevOpsOrgName}/projects/{azureDevOpsProjectName}/repos/{azureDevOpsRepoName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored AzureDevOps Repo resource for a given ID.",
        "operationId": "AzureDevOpsRepo_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsProjectName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "AzureDevOpsRepo_Get": {
            "$ref": "./examples/AzureDevOpsRepoGet.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update monitored AzureDevOps Repo details.",
        "operationId": "AzureDevOpsRepo_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/AzureDevOpsConnectorName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsOrgName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsProjectName"
          },
          {
            "$ref": "#/parameters/AzureDevOpsRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "azureDevOpsRepo",
            "description": "Azure DevOps Repo resource payload.",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureDevOpsRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "AzureDevOpsRepo_Update": {
            "$ref": "./examples/AzureDevOpsRepoUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors": {
      "get": {
        "tags": [
          "default"
        ],
        "operationId": "GitHubConnector_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnectorListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubConnector_ListByResourceGroup": {
            "$ref": "./examples/GitHubConnectorListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub Connector resource for a given ID.",
        "operationId": "GitHubConnector_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubConnector_Get": {
            "$ref": "./examples/GitHubConnectorGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Create or update a monitored GitHub Connector resource.",
        "operationId": "GitHubConnector_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubConnector",
            "description": "Connector resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubConnector_CreateOrUpdate": {
            "$ref": "./examples/GitHubConnectorCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update monitored GitHub Connector details.",
        "operationId": "GitHubConnector_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubConnector",
            "description": "Connector resource payload.",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubConnector_Update": {
            "$ref": "./examples/GitHubConnectorUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Delete monitored GitHub Connector details.",
        "operationId": "GitHubConnector_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubConnector_Delete": {
            "$ref": "./examples/GitHubConnectorDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/repos": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of monitored GitHub repositories.",
        "operationId": "GitHubRepo_ListByConnector",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepoListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubRepo_ListByConnector": {
            "$ref": "./examples/GitHubRepoListByConnector.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/stats": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns the summary of the GitHub Connector Stats.",
        "operationId": "GitHubConnectorStats_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnectorStatsListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubConnectorStats_Get": {
            "$ref": "./examples/GitHubConnectorStatsGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/owners": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of monitored GitHub owners.",
        "operationId": "GitHubOwner_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubOwnerListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubOwner_List": {
            "$ref": "./examples/GitHubOwnerList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/owners/{gitHubOwnerName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub repository.",
        "operationId": "GitHubOwner_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubOwner_Get": {
            "$ref": "./examples/GitHubOwnerGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Create or update a monitored GitHub owner.",
        "operationId": "GitHubOwner_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubOwner",
            "description": "Github owner.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubOwner_CreateOrUpdate": {
            "$ref": "./examples/GitHubOwnerCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update a monitored GitHub repository.",
        "operationId": "GitHubOwner_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubOwner",
            "description": "Github owner.",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubOwner"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubOwner_Update": {
            "$ref": "./examples/GitHubOwnerUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/owners/{gitHubOwnerName}/repos": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of monitored GitHub repositories.",
        "operationId": "GitHubRepo_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepoListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubRepo_List": {
            "$ref": "./examples/GitHubRepoList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/owners/{gitHubOwnerName}/repos/{gitHubRepoName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub repository.",
        "operationId": "GitHubRepo_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "#/parameters/GitHubRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubRepo_Get": {
            "$ref": "./examples/GitHubRepoGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Create or update a monitored GitHub repository.",
        "operationId": "GitHubRepo_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "#/parameters/GitHubRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubRepo",
            "description": "Github repo.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubRepo_CreateOrUpdate": {
            "$ref": "./examples/GitHubRepoCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update a monitored GitHub repository.",
        "operationId": "GitHubRepo_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubOwnerName"
          },
          {
            "$ref": "#/parameters/GitHubRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubRepo",
            "description": "Github repo.",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepo"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubRepo_Update": {
            "$ref": "./examples/GitHubRepoUpdate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/generateOAuthToken": {
      "post": {
        "tags": [
          "default"
        ],
        "summary": "Exchanges one-time token for an OAuth token.\r\nPersists the same in KeyVault.",
        "operationId": "GitHubOAuthToken_Create",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubOAuthToken_Create": {
            "$ref": "./examples/GitHubOAuthTokenCreate.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/listInstallations": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of GitHub installations.",
        "operationId": "GitHubInstallation_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubInstallationListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubInstallation_List": {
            "$ref": "./examples/GitHubInstallationList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/installations/{installationId}/repositories": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of GitHub Repositories for an installation.",
        "operationId": "GitHubRepository_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/InstallationId"
          },
          {
            "$ref": "#/parameters/Token"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepositoryListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubRepository_List": {
            "$ref": "./examples/GitHubRepositoryList.json"
          }
        }
      }
    },
    "/providers/Microsoft.SecurityDevOps/operations": {
      "get": {
        "description": "Returns list of operations supported by the Microsoft.SecurityDevOps provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/OperationsList.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActionableRemediation": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ActionableRemediationState"
        },
        "categoryConfigurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryConfiguration"
          },
          "x-ms-identifiers": []
        },
        "branchConfiguration": {
          "$ref": "#/definitions/TargetBranchConfiguration"
        },
        "shouldInheritFromParent": {
          "description": "Gets or sets whether Actionable Remediation settings can be updated from a parent.\r\n\r\nIf true or null, updates on a parent also update this resource.\r\nIf false, only force updates will update this reource.",
          "type": "boolean"
        }
      }
    },
    "ActionableRemediationState": {
      "description": "ActionableRemediation Setting.\r\nNone - the setting was never set.\r\nEnabled - ActionableRemediation is enabled.\r\nDisabled - ActionableRemediation is disabled.",
      "enum": [
        "None",
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ActionableRemediationState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AutoDiscovery": {
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoDiscovery",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AzureDevOpsOrg": {
      "description": "Azure DevOps Org Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsOrgProperties"
        }
      }
    },
    "AzureDevOpsOrgListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsOrg"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsOrgProperties": {
      "description": "AzureDevOps Org properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "AzureDevOpsProject": {
      "description": "Azure DevOps Project Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsProjectProperties"
        }
      }
    },
    "AzureDevOpsProjectListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsProject"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsProjectProperties": {
      "description": "AzureDevOps Project properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string"
        },
        "projectId": {
          "description": "Gets or sets AzureDevOps Project Id.",
          "type": "string"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "AzureDevOpsRepo": {
      "description": "Azure DevOps Repo Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsRepoProperties"
        }
      }
    },
    "AzureDevOpsRepoListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsRepo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "AzureDevOpsRepoProperties": {
      "description": "AzureDevOps Repo properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string",
          "readOnly": true
        },
        "projectName": {
          "description": "Gets or sets AzureDevOps project Name.",
          "type": "string",
          "readOnly": true
        },
        "repoId": {
          "description": "Gets or sets Azure DevOps repo id.",
          "type": "string",
          "readOnly": true
        },
        "repoUrl": {
          "description": "Gets or sets AzureDevOps repo url.",
          "type": "string",
          "readOnly": true
        },
        "visibility": {
          "description": "Gets or sets AzureDevOps repo visibility, whether it is public or private etc.",
          "type": "string",
          "readOnly": true
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "CategoryConfiguration": {
      "type": "object",
      "properties": {
        "minimumSeverityLevel": {
          "type": "string"
        },
        "category": {
          "$ref": "#/definitions/RuleCategory"
        }
      }
    },
    "GitHubConnector": {
      "description": "Represents an ARM resource for /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.SecurityDevOps/gitHubConnectors.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubConnectorProperties"
        }
      }
    },
    "GitHubConnectorListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubConnector"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubConnectorProperties": {
      "description": "Properties of the ARM resource for /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.SecurityDevOps/gitHubConnectors.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "code": {
          "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.\r\n\r\nOnly used during PUT operations. The secret is cleared during GET.\r\nIn general, RPaaS does not return any property marked as a secret.",
          "type": "string",
          "example": "00000000000000000000.",
          "x-ms-secret": true
        },
        "installations": {
          "description": "Gets or sets org installation information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubInstallationMetadata"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "GitHubConnectorStats": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubConnectorStatsProperties"
        }
      }
    },
    "GitHubConnectorStatsListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubConnectorStats"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubConnectorStatsProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "ownersCount": {
          "format": "int64",
          "description": "Gets or sets owners count.",
          "type": "integer"
        },
        "reposCount": {
          "format": "int64",
          "description": "Gets or sets repos count.",
          "type": "integer"
        }
      }
    },
    "GitHubInstallation": {
      "description": "GitHub Installation Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubInstallationProperties"
        }
      }
    },
    "GitHubInstallationListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubInstallation"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubInstallationMetadata": {
      "description": "Org onboarding info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets name of the AzureDevOps Org.",
          "type": "string"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepositoryMetadata"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "GitHubInstallationProperties": {
      "description": "GitHub Repo Owner properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "installationName": {
          "description": "Gets or sets gitHub owner url.",
          "type": "string"
        },
        "installationId": {
          "description": "Gets or sets gitHub installation id.",
          "type": "string"
        }
      }
    },
    "GitHubOwner": {
      "description": "GitHub repo owner Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubOwnerProperties"
        }
      }
    },
    "GitHubOwnerListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubOwner"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubOwnerProperties": {
      "description": "GitHub Repo Owner properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "ownerUrl": {
          "description": "Gets or sets gitHub owner url.",
          "type": "string"
        }
      }
    },
    "GitHubRepo": {
      "description": "GitHub repo Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubRepoProperties"
        }
      }
    },
    "GitHubRepoListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepo"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubRepoProperties": {
      "description": "GitHub Repo properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "accountId": {
          "format": "int64",
          "description": "Gets or sets gitHub repo account id.",
          "type": "integer"
        },
        "repoUrl": {
          "description": "Gets or sets gitHub repo url.",
          "type": "string"
        },
        "ownerName": {
          "description": "Gets or sets GitHub Owner Name.",
          "type": "string"
        }
      }
    },
    "GitHubRepository": {
      "description": "GitHub repositories Proxy Resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubRepositoryProperties"
        }
      }
    },
    "GitHubRepositoryListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepository"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubRepositoryMetadata": {
      "description": "Project onboarding info.",
      "type": "object",
      "properties": {
        "repos": {
          "description": "Gets or sets repositories.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "GitHubRepositoryProperties": {
      "description": "GitHub Repository properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "repoId": {
          "description": "Gets or sets GitHub Repo Id.",
          "type": "string"
        },
        "repoName": {
          "description": "Gets or sets GitHub Repo Name.",
          "type": "string"
        },
        "repoFullName": {
          "description": "Gets or sets GitHub Full Name.",
          "type": "string"
        }
      }
    },
    "ProvisioningState": {
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "modelAsExtensible": true
      },
      "readOnly": true
    },
    "RuleCategory": {
      "enum": [
        "Code",
        "Artifacts",
        "Dependencies",
        "Secrets",
        "IaC",
        "Containers"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "TargetBranchConfiguration": {
      "type": "object",
      "properties": {
        "branchNames": {
          "description": "Gets or sets branches that should have annotations.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "annotateDefaultBranch": {
          "description": "Gets or sets whether default branch of Repo should be annotated.",
          "type": "boolean"
        }
      }
    }
  },
  "parameters": {
    "AzureDevOpsConnectorName": {
      "in": "path",
      "name": "azureDevOpsConnectorName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureDevOpsOrgName": {
      "in": "path",
      "name": "azureDevOpsOrgName",
      "description": "Name of the AzureDevOps Org.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureDevOpsProjectName": {
      "in": "path",
      "name": "azureDevOpsProjectName",
      "description": "Name of the AzureDevOps Project.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AzureDevOpsRepoName": {
      "in": "path",
      "name": "azureDevOpsRepoName",
      "description": "Name of the AzureDevOps Repo.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GitHubConnectorName": {
      "in": "path",
      "name": "gitHubConnectorName",
      "description": "Name of the GitHub Connector.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GitHubOwnerName": {
      "in": "path",
      "name": "gitHubOwnerName",
      "description": "Name of the GitHub Owner.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GitHubRepoName": {
      "in": "path",
      "name": "gitHubRepoName",
      "description": "Name of the GitHub Repo.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "Token": {
      "in": "query",
      "name": "token",
      "description": "One time GitHub app token.",
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "InstallationId": {
      "in": "path",
      "name": "installationId",
      "description": "Installation id for GitHub app.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}