{
  "swagger": "2.0",
  "info": {
    "version": "2021-10-01-preview",
    "title": "securitydevops",
    "description": "Description of the new service"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/workspaces": {
      "get": {
        "description": "Returns a list of security devops workspaces in the subscription.",
        "operationId": "Workspaces_ListBySubscription",
        "x-ms-examples": {
          "Get a list of monitored GitHub repository under a subscription": {
            "$ref": "./examples/ListWorkspacesBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of security devops workspaces.",
            "schema": {
              "$ref": "#/definitions/WorkspaceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/workspaces": {
      "get": {
        "description": "Returns a list of security devops workspaces in the resource group.",
        "operationId": "Workspace_ListByResourceGroup",
        "x-ms-examples": {
          "Get a list of monitored GitHub repository under a subscription": {
            "$ref": "./examples/ListWorkspacesByResoureGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of security devops workspaces.",
            "schema": {
              "$ref": "#/definitions/WorkspaceResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/workspaces/{workspaceName}": {
      "get": {
        "description": "Returns a monitored GitHub repository resource for a given ID.",
        "operationId": "Workspace_Get",
        "x-ms-examples": {
          "Get a monitored GitHub repository": {
            "$ref": "./examples/GetWorkspace.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Workspace details.",
            "schema": {
              "$ref": "#/definitions/WorkspaceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a monitored GitHub repository resource.",
        "operationId": "Workspace_CreateOrUpdate",
        "x-ms-examples": {
          "Create a monitored GitHub repository": {
            "$ref": "./examples/createGitHubRepo.json"
          },
          "Update a monitored GitHub repository": {
            "$ref": "./examples/updateGitHubRepo.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "WorkspaceResource",
            "description": "Workspace details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspaceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/WorkspaceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update monitored GitHub repository details.",
        "operationId": "Workspace_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "workspacePatchResource",
            "description": "Workspace patch details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WorkspacePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/WorkspaceResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete monitored GitHub repository details.",
        "operationId": "Workspace_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/workspaces/{workspaceName}/connections": {
      "get": {
        "description": "Returns a list of Security DevOps connections to source code in the workspace.",
        "operationId": "Connections_ListByWorkgroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of security devops connections to source code.",
            "schema": {
              "$ref": "#/definitions/ConnectionResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/workspaces/{workspaceName}/connections/{connectionName}": {
      "get": {
        "description": "Returns a connection for a given ID.",
        "operationId": "Connection_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of security devops connections to source code.",
            "schema": {
              "$ref": "#/definitions/ConnectionResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a connection.",
        "operationId": "Connection_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "ConnectionResource",
            "description": "Connection details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/ConnectionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update connection details.",
        "operationId": "Connection_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "ConnectionPatchResource",
            "description": "Workspace patch details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionPatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/ConnectionResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a connection.",
        "operationId": "Connection_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkspaceNameParameter"
          },
          {
            "$ref": "#/parameters/ConnectionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/gitHubRepos": {
      "get": {
        "description": "Returns a list of monitored GitHub repositories.",
        "operationId": "GitHubRepo_List",
        "x-ms-examples": {
          "Get a list of monitored GitHub repository under a subscription": {
            "$ref": "./examples/getGitHubRepoList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of monitored GitHub repositories.",
            "schema": {
              "$ref": "#/definitions/GitHubRepoResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/gitHubRepos/{gitHubRepoName}": {
      "get": {
        "description": "Returns a monitored GitHub repository resource for a given ID.",
        "operationId": "GitHubRepo_Get",
        "x-ms-examples": {
          "Get a monitored GitHub repository": {
            "$ref": "./examples/getGitHubRepo.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GitHubRepoNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "GitHub repository details.",
            "schema": {
              "$ref": "#/definitions/GitHubRepoResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update a monitored GitHub repository resource.",
        "operationId": "GitHubRepo_CreateOrUpdate",
        "x-ms-examples": {
          "Create a monitored GitHub repository": {
            "$ref": "./examples/createGitHubRepo.json"
          },
          "Update a monitored GitHub repository": {
            "$ref": "./examples/updateGitHubRepo.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GitHubRepoNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "gitHubRepoResource",
            "description": "GitHub repository details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubRepoResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/GitHubRepoResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "description": "Update monitored GitHub repository details.",
        "operationId": "GitHubRepo_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GitHubRepoNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "gitHubRepoPatchResource",
            "description": "gitHubRepo patch details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubRepoPatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/GitHubRepoResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete monitored GitHub repository details.",
        "operationId": "GitHubRepo_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/GitHubRepoNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.SecurityDevOps/operations": {
      "get": {
        "description": "Returns list of operations supported by the Microsoft.SecurityDevOps provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "WorkspaceResource": {
      "type": "object",
      "description": "Workspace details.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "Information about the Workspace.",
          "x-ms-client-flatten": true,
          "properties": {
            "systemData": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
              "description": "The system metadata pertaining to this resource.",
              "readOnly": true
            }
          }
        }
      }
    },
    "WorkspacePatchResource": {
      "type": "object",
      "description": "Workspace patch properties.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Information about the Workspace.",
          "x-ms-client-flatten": true,
          "properties": {
          }
        }
      }
    },
    "WorkspaceResourceList": {
      "description": "The list of GitHub repos.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Workspace list.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The list of monitored GitHub repos.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/WorkspaceResource"
          }
        }
      }
    },
    "ConnectionResource": {
      "type": "object",
      "description": "Connection to a source code management system.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "Information about the Connection.",
          "x-ms-client-flatten": true,
          "properties": {
            "connectionType": {
              "type": "string",
              "description": "Type of connection, e.g. GitHub, ADO"
            },
            "code": {
              "type": "string",
              "description": "Code for authentication - write only",
              "x-ms-secret": true
            },
            "systemData": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
              "description": "The system metadata pertaining to this resource.",
              "readOnly": true
            }
          }
        }
      }
    },
    "ConnectionPatchResource": {
      "type": "object",
      "description": "Connection patch properties.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Information about the Workspace.",
          "x-ms-client-flatten": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Code for authentication - write only",
              "x-ms-secret": true
            }
          }
        }
      }
    },
    "ConnectionResourceList": {
      "description": "The list of connections to source code management systems.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of connections list.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The list of connections.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/ConnectionResource"
          }
        }
      }
    },
    "GitHubRepoResource": {
      "type": "object",
      "description": "Monitored GitHub repositories details.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "Information about the monitored GitHub repository.",
          "x-ms-client-flatten": true,
          "required": [
            "accountId",
            "repoName",
            "repoUrl"
          ],
          "properties": {
            "accountId": {
              "type": "integer",
              "format": "int64",
              "description": "GitHub account integer ID that the repository belongs to."
            },
            "repoName": {
              "type": "string",
              "description": "GitHub repository name."
            },
            "repoUrl": {
              "type": "string",
              "description": "User-viewable URL."
            },
            "systemData": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/systemData",
              "description": "The system metadata pertaining to this resource.",
              "readOnly": true
            }
          }
        }
      }
    },
    "GitHubRepoPatchResource": {
      "type": "object",
      "description": "Monitored GitHub repositories patch properties.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "description": "Information about the monitored GitHub repository.",
          "x-ms-client-flatten": true,
          "properties": {
            "repoName": {
              "type": "string",
              "description": "GitHub repository name"
            },
            "url": {
              "type": "string",
              "description": "User-viewable URL"
            }
          }
        }
      }
    },
    "GitHubRepoResourceList": {
      "description": "The list of GitHub repos.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of gitHubRepo list.",
          "type": "string",
          "readOnly": true
        },
        "value": {
          "description": "The list of monitored GitHub repos.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/GitHubRepoResource"
          }
        }
      }
    },
    "Scan": {
      "description": "A scan of a source code repository or build artifacts.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "Information about the scan.",
          "x-ms-client-flatten": true,
          "required": [
            "repo",
            "startTime",
            "tool"
          ],
          "properties": {
            "repo": {
              "description": "Source code repository information.",
              "$ref": "#/definitions/ScanRepo"
            },
            "build": {
              "description": "Build information.",
              "$ref": "#/definitions/ScanBuild"
            },
            "startTime": {
              "description": "Time of the scan",
              "type": "string",
              "format": "date-time"
            },
            "tool": {
              "description": "Scan tool.",
              "$ref": "#/definitions/ScanTool"
            }
          }
        }
      }
    },
    "ScanRepo": {
      "description": "Source code repository information for a scan.",
      "type": "object",
      "properties": {
        "repoType": {
          "description": "Type of source code repository.",
          "type": "string"
        },
        "repoName": {
          "description": "Name of the scan finding source.",
          "type": "string"
        },
        "version": {
          "description": "Version of the scan finding source.",
          "type": "string"
        }
      }
    },
    "ScanBuild": {
      "description": "Build information for a scan.",
      "type": "object",
      "properties": {
        "buildType": {
          "description": "Type of build.",
          "type": "string"
        },
        "definitionName": {
          "description": "Name of the build definition.",
          "type": "string"
        },
        "definitionUrl": {
          "description": "URL of the build definition.",
          "type": "string"
        },
        "runName": {
          "description": "Name of the build run.",
          "type": "string"
        },
        "runUrl": {
          "description": "URL of the build run.",
          "type": "string"
        },
        "sourceBranch": {
          "description": "Source code repository branch that was built.",
          "type": "string"
        }
      }
    },
    "ScanTool": {
      "description": "Tool that generated the scan.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the scan finding source.",
          "type": "string"
        },
        "version": {
          "description": "Version of the scan finding source.",
          "type": "string"
        }
      }
    },
    "ScanFinding": {
      "description": "A scan finding.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "Information about the scan finding.",
          "x-ms-client-flatten": true,
          "required": [
            "ruleId",
            "message"
          ],
          "properties": {
            "repoResourceId": {
              "description": "Resource ID of the code repository.",
              "type": "string"
            },
            "ruleId": {
              "description": "Rule ID that generated this scan finding.",
              "type": "string"
            },
            "ruleHelpUrl": {
              "description": "Help link for the rule that generated this scan finding.",
              "type": "string"
            },
            "message": {
              "description": "Human readable message this scan finding.",
              "type": "string"
            },
            "level": {
              "description": "Severity level for this scan finding.",
              "type": "string"
            },
            "path": {
              "description": "Relative path of the file that contains the scan finding.",
              "type": "string"
            },
            "startLine": {
              "description": "Line number inside the file that contains the scan finding.",
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "WorkspaceNameParameter": {
      "name": "workspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The workspace name.",
      "x-ms-parameter-location": "method"
    },
    "ConnectionNameParameter": {
      "name": "connectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The connection name.",
      "x-ms-parameter-location": "method"
    },
    "GitHubRepoNameParameter": {
      "name": "gitHubRepoName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of gitHubRepo resource.",
      "x-ms-parameter-location": "method"
    }
  }
}
