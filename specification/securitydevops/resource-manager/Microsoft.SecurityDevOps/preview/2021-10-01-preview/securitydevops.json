{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.SecurityDevOps",
    "description": "REST APIs for Defender for DevOps",
    "version": "2021-10-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors": {
      "get": {
        "tags": [
          "default"
        ],
        "operationId": "GitHubConnector_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnectorListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubConnector_ListByResourceGroup": {
            "$ref": "./examples/GitHubConnectorListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub Connector resource for a given ID.",
        "operationId": "GitHubConnector_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubConnector_Get": {
            "$ref": "./examples/GitHubConnectorGet.json"
          }
        }
      },
      "put": {
        "tags": [
          "default"
        ],
        "summary": "Create or update a monitored GitHub Connector resource.",
        "operationId": "GitHubConnector_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubConnector",
            "description": "Connector resource payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "GitHubConnector_CreateOrUpdate": {
            "$ref": "./examples/GitHubConnectorCreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "tags": [
          "default"
        ],
        "summary": "Update monitored GitHub Connector details.",
        "operationId": "GitHubConnector_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "gitHubConnector",
            "description": "Connector resource payload.",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/GitHubConnector"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubConnector_Update": {
            "$ref": "./examples/GitHubConnectorUpdate.json"
          }
        }
      },
      "delete": {
        "tags": [
          "default"
        ],
        "summary": "Delete monitored GitHub Connector details.",
        "operationId": "GitHubConnector_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "GitHubConnector_Delete": {
            "$ref": "./examples/GitHubConnectorDelete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/gitHubRepos": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of monitored GitHub repositories.",
        "operationId": "GitHubRootRepo_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepo_PrivatePreviewListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubRootRepo_List": {
            "$ref": "./examples/GitHubRootRepoList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecurityDevOps/gitHubConnectors/{gitHubConnectorName}/gitHubRepos/{gitHubRepoName}": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a monitored GitHub repository.",
        "operationId": "GitHubRootRepo_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/GitHubConnectorName"
          },
          {
            "$ref": "#/parameters/GitHubRepoName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubRepo_PrivatePreview"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GitHubRootRepo_Get": {
            "$ref": "./examples/GitHubRootRepoGet.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SecurityDevOps/gitHubConnectors": {
      "get": {
        "tags": [
          "default"
        ],
        "summary": "Returns a list of monitored GitHub Connectors.",
        "operationId": "GitHubConnector_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GitHubConnectorListResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GitHubConnector_ListBySubscription": {
            "$ref": "./examples/GitHubConnectorListBySubscription.json"
          }
        }
      }
    },
    "/providers/Microsoft.SecurityDevOps/operations": {
      "get": {
        "description": "Returns list of operations supported by the Microsoft.SecurityDevOps provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/OperationsList.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ActionableRemediation": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/ActionableRemediationState"
        },
        "severityLevels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleCategory"
          },
          "x-ms-identifiers": []
        },
        "branchConfiguration": {
          "$ref": "#/definitions/TargetBranchConfiguration"
        }
      }
    },
    "ActionableRemediationState": {
      "description": "ActionableRemediation Setting.\r\nNone - the setting was never set.\r\nEnabled - ActionableRemediation is enabled.\r\nDisabled - ActionableRemediation is disabled.",
      "enum": [
        "None",
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ActionableRemediationState",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AuthorizationInfo": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.\r\n\r\nOnly used during PUT operations. The secret is cleared during GET.\r\nIn general, RPaaS does not return any property marked as a secret.",
          "type": "string",
          "example": "00000000000000000000.",
          "x-ms-secret": true
        }
      }
    },
    "AutoDiscovery": {
      "enum": [
        "Disabled",
        "Enabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "AutoDiscovery",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "AzureDevOpsConnectorProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "authorization": {
          "$ref": "#/definitions/AuthorizationInfo"
        },
        "orgs": {
          "description": "Gets or sets org onboarding information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsOrgMetadata"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureDevOpsConnectorStats": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AzureDevOpsConnectorStatsProperties"
        }
      }
    },
    "AzureDevOpsConnectorStatsProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgsCount": {
          "format": "int64",
          "description": "Gets or sets orgs count.",
          "type": "integer"
        },
        "projectsCount": {
          "format": "int64",
          "description": "Gets or sets projects count.",
          "type": "integer"
        },
        "reposCount": {
          "format": "int64",
          "description": "Gets or sets repos count.",
          "type": "integer"
        }
      }
    },
    "AzureDevOpsOrgMetadata": {
      "description": "Org onboarding info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets name of the AzureDevOps Org.",
          "type": "string"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureDevOpsProjectMetadata"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureDevOpsOrgProperties": {
      "description": "AzureDevOps Org properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        }
      }
    },
    "AzureDevOpsProjectMetadata": {
      "description": "Project onboarding info.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets name of the AzureDevOps Project.",
          "type": "string"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        },
        "repos": {
          "description": "Gets or sets repositories.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "AzureDevOpsProjectProperties": {
      "description": "AzureDevOps Project properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string"
        },
        "projectId": {
          "description": "Gets or sets AzureDevOps Project Id.",
          "type": "string"
        },
        "autoDiscovery": {
          "$ref": "#/definitions/AutoDiscovery"
        }
      }
    },
    "AzureDevOpsRepoProperties": {
      "description": "AzureDevOps Repo properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "orgName": {
          "description": "Gets or sets AzureDevOps org Name.",
          "type": "string",
          "readOnly": true
        },
        "projectName": {
          "description": "Gets or sets AzureDevOps project Name.",
          "type": "string",
          "readOnly": true
        },
        "repoId": {
          "description": "Gets or sets Azure DevOps repo id.",
          "type": "string",
          "readOnly": true
        },
        "repoUrl": {
          "description": "Gets or sets AzureDevOps repo url.",
          "type": "string",
          "readOnly": true
        },
        "visibility": {
          "description": "Gets or sets AzureDevOps repo visibility, whether it is public or private etc.",
          "type": "string",
          "readOnly": true
        },
        "actionableRemediation": {
          "$ref": "#/definitions/ActionableRemediation"
        }
      }
    },
    "GitHubConnector": {
      "description": "Represents an ARM resource for /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.SecurityDevOps/gitHubConnectors.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubConnectorProperties"
        }
      }
    },
    "GitHubConnectorListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubConnector"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubConnectorProperties": {
      "description": "Properties of the ARM resource for /subscriptions/xxx/resourceGroups/xxx/providers/Microsoft.SecurityDevOps/gitHubConnectors.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "code": {
          "description": "Gets or sets one-time OAuth code to exchange for refresh and access tokens.\r\n\r\nOnly used during PUT operations. The secret is cleared during GET.\r\nIn general, RPaaS does not return any property marked as a secret.",
          "type": "string",
          "example": "00000000000000000000.",
          "x-ms-secret": true
        }
      }
    },
    "GitHubConnectorStats": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubConnectorStatsProperties"
        }
      }
    },
    "GitHubConnectorStatsProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "ownersCount": {
          "format": "int64",
          "description": "Gets or sets owners count.",
          "type": "integer"
        },
        "reposCount": {
          "format": "int64",
          "description": "Gets or sets repos count.",
          "type": "integer"
        }
      }
    },
    "GitHubOwnerProperties": {
      "description": "GitHub Repo Owner properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "ownerUrl": {
          "description": "Gets or sets gitHub owner url.",
          "type": "string"
        }
      }
    },
    "GitHubRepoProperties": {
      "description": "GitHub Repo properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "accountId": {
          "format": "int64",
          "description": "Gets or sets gitHub repo account id.",
          "type": "integer"
        },
        "repoUrl": {
          "description": "Gets or sets gitHub repo url.",
          "type": "string"
        },
        "ownerName": {
          "description": "Gets or sets GitHub Owner Name.",
          "type": "string"
        }
      }
    },
    "GitHubRepo_PrivatePreview": {
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/GitHubReposProperties"
        }
      }
    },
    "GitHubRepo_PrivatePreviewListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Gets or sets list of resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/GitHubRepo_PrivatePreview"
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Gets or sets next link to scroll over the results.",
          "type": "string"
        }
      }
    },
    "GitHubReposProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        },
        "accountId": {
          "format": "int64",
          "description": "Gets or sets gitHub repo account id.",
          "type": "integer"
        },
        "repoName": {
          "description": "Gets or sets gitHub repo name.",
          "type": "string"
        },
        "repoUrl": {
          "description": "Gets or sets gitHub repo url.",
          "type": "string"
        }
      }
    },
    "ProvisioningState": {
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "modelAsExtensible": true
      },
      "readOnly": true
    },
    "RuleCategory": {
      "enum": [
        "Code",
        "Artifacts",
        "Dependencies",
        "Secrets",
        "IaC",
        "Containers"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "RuleCategory",
        "modelAsString": true,
        "modelAsExtensible": true
      }
    },
    "TargetBranchConfiguration": {
      "description": "Branch onboarding info.",
      "type": "object",
      "properties": {
        "names": {
          "description": "Gets or sets branches that should have annotations.\r\n\r\nFor Ignite, we will be supporting a single default branch configuration in the UX.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        }
      }
    }
  },
  "parameters": {
    "GitHubConnectorName": {
      "in": "path",
      "name": "gitHubConnectorName",
      "description": "Name of the GitHub Connector.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "GitHubRepoName": {
      "in": "path",
      "name": "gitHubRepoName",
      "description": "Name of the GitHub Repo.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "Impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}