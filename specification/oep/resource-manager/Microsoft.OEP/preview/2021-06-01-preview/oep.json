{
  "swagger": "2.0",
  "info": {
    "title": "Open Energy Platform Management Service APIs",
    "description": "Open Energy Platform Management Service APIs",
    "version": "2021-06-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.OEP/checkNameAvailability": {
      "post": {
        "tags": [
          "Locations"
        ],
        "description": "Checks the name availability of the resource with requested resource name.",
        "operationId": "Locations_CheckNameAvailability",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "NameAvailabilityRequest object.",
            "required": true,
            "schema": {
              "description": "NameAvailabilityRequest object.",
              "allOf": [
                {
                  "$ref": "#/definitions/CheckNameAvailabilityRequest"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CheckNameAvailabilityResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Locations_CheckNameAvailability": {
            "$ref": "./examples/Locations_CheckNameAvailability.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OEP/oepResource": {
      "get": {
        "tags": [
          "UserRPOepResource"
        ],
        "description": "Returns list of oep resources..",
        "operationId": "OepResources_ListbyResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OepResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OepResource_ListbyResourceGroup": {
            "$ref": "./examples/OepResource_ListbyResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OEP/oepResource": {
      "get": {
        "tags": [
          "UserRPOepResource"
        ],
        "description": "Lists a collection of oep resources under the given Azure Subscription ID.",
        "operationId": "OepResources_ListBySubscriptionId",
        "x-ms-examples": {
          "OepResource_ListBySubscriptionId": {
            "$ref": "./examples/OepResource_ListBySubscriptionId.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returned when the operation is successful.",
            "schema": {
              "$ref": "#/definitions/OepResourceList"
            }
          },
          "default": {
            "x-nullable": false,
            "description": "Error response describing why the operation failed."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OEP/oepResource/{resourceName}": {
      "get": {
        "tags": [
          "UserRPOepResource"
        ],
        "description": "Returns oep resource for a given name.",
        "operationId": "OepResources_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OepResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "OepResource_Get": {
            "$ref": "./examples/OepResource_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "UserRPOepResource"
        ],
        "description": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "operationId": "OepResources_Create",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body.",
            "schema": {
              "description": "Request body.",
              "allOf": [
                {
                  "$ref": "#/definitions/OepResource"
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The OEP resource will be created asynchronously",
            "schema": {
              "$ref": "#/definitions/OepResource"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger could not be created/updated)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "OepResource_Create": {
            "$ref": "./examples/OepResource_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "OepResources_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OepPatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the oep resource.",
            "schema": {
              "$ref": "#/definitions/OepResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Workspace Update": {
            "$ref": "./examples/OepResource_Update.json"
          }
        }
      },
      "delete": {
        "description": "Deletes oep resource",
        "operationId": "OepResources_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "path",
            "name": "resourceName",
            "description": "The resource name.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "204": {
            "description": "Returned when the operation returns no content."
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Workspaces_Delete": {
            "$ref": "./examples/OepResource_Delete.json"
          }
        }
      }
    },
    "/providers/Microsoft.OEP/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available operations of Microsoft.OEP resource provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error response describing why the operation failed."
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    }
  },
  "definitions": {
    "CheckNameAvailabilityRequest": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "CheckNameAvailabilityResponse": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "readOnly": true
        },
        "reason": {
          "type": "string",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "Base resource type.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Fully qualified resource Id. Eg: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Type of the resource. Eg: Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "OepResourceList": {
      "description": "The list of oep resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of oep resources list.",
          "type": "string"
        },
        "value": {
          "description": "The list of oep resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OepResource"
          }
        }
      }
    },
    "OepProperties": {
      "type": "object",
      "properties": {
        "dnsName": {
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Updating"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "SystemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string"
        },
        "createdByType": {
          "description": "The type of identity that created the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'.",
          "type": "string"
        },
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource. Possible values include: 'User', 'Application', 'ManagedIdentity', 'Key'.",
          "type": "string"
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The type of identity that last modified the resource.",
          "type": "string"
        }
      }
    },
    "OepResource": {
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "allOf": [
            {
              "$ref": "#/definitions/OepProperties"
            }
          ]
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "allOf": [
            {
              "$ref": "#/definitions/SystemData"
            }
          ],
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Geo-location where the resource lives.",
          "type": "string"
        }
      }
    },
    "TrackedResourceUpdate": {
      "description": "The resource model definition used for updating a tracked ARM resource.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OepPatchResource": {
      "type": "object",
      "description": "OepResource patch properties",
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResourceUpdate"
        }
      ]
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The name of the resource group. The name is case insensitive.",
      "required": true,
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "The API version to be used with the HTTP request.",
      "required": true,
      "type": "string"
    },
    "SelectParameter": {
      "in": "query",
      "name": "$select",
      "description": "An OData $select clause. Used to select the properties to be returned in the GET response.",
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      }
    },
    "FilterParameter": {
      "in": "query",
      "name": "$filter",
      "description": "An OData $filter clause. Used to filter results that are returned in the GET response.",
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-parameter-grouping": {
        "postfix": "Options"
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      },
      "description": "Azure Active Directory OAuth2 Flow"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "management.azure.com",
  "schemes": [
    "https"
  ]
}
