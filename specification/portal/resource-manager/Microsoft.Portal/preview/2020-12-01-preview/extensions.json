{
  "swagger": "2.0",
  "info": {
    "version": "2020-12-01-preview",
    "title": "portal",
    "description": "Allows creation and deletion of Azure portal extensions.",
    "x-ms-code-generation-settings": {
      "name": "portalClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}": {
      "put": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_CreateOrUpdate",
        "x-ms-examples": {
          "Create or update a portal extension": {
            "$ref": "examples/createOrUpdatePortalExtension.json"
          }
        },
        "description": "Creates or updates a portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionRequest"
            },
            "description": "The parameters required to create or update a portal extension."
          }
        ],
        "responses": {
          "201": {
            "description": "Created response definition. Resource has been created",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "200": {
            "description": "Resource already exists.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Delete",
        "x-ms-examples": {
          "Delete a portal extension": {
            "$ref": "examples/deletePortalExtension.json"
          }
        },
        "description": "Deletes the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "OK resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Get",
        "x-ms-examples": {
          "Get Extension: Declarative portal extension, Not Onboarded": {
            "description": "Example extension registration for a Declarative Extension created and maintained in portal extension studio that not yet registered in partner center.",
            "$ref": "./examples/getPortalExtensionDeclarativeNotOboarded.json"
          },
          "Get Extension: Microsoft Extension, GA": {
            "description": "Example extension registration for an Microsoft internal extension that is registered in service tree and GA.",
            "$ref": "./examples/getPortalExtensionMicrosoftGA.json"
          }
        },
        "description": "Gets the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Update",
        "x-ms-examples": {
          "Update a PortalExtension": {
            "$ref": "examples/updatePortalExtension.json"
          }
        },
        "description": "Updates an existing portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchablePortalExtension"
            },
            "description": "The updatable fields of a portal extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "201": {
            "description": "Accepted response definition.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions": {
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_ListByResourceGroup",
        "x-ms-examples": {
          "List all portal extensions on the resourceGroup": {
            "$ref": "examples/listPortalExtensionsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extensions within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Portal/extensions": {
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_ListBySubscription",
        "x-ms-examples": {
          "List all portal extensions on the subscription": {
            "$ref": "examples/listPortalExtensionsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extensions within a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/alter": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_Alter",
        "x-ms-examples": {
          "Alter portal extension source files": {
            "$ref": "examples/alterPortalExtensionSources.json"
          }
        },
        "description": "Alters portal extension source files.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionAlter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionAlter"
            },
            "description": "The parameters required to alter portal extension sources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension."
          },
          "202": {
            "description": "Accepted - Alteration in progress."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/compilefile": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_CompileFile",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionCompileFile.json"
          }
        },
        "description": "compiles a file in the context of the extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionCompileView",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionCompileFile"
            },
            "description": "The parameters required to compile a source file."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the runtime configuration of the source file.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionCompileFileResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/export": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_Export",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionExport.json"
          }
        },
        "description": "Exports the extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionExport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionExport"
            },
            "description": "The parameters required to export the extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the exported extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionExportResult"
            }
          },
          "202": {
            "description": "Accepted - Export in progress."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/listSources": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_ListSources",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionListSources.json"
          }
        },
        "description": "Lists sources of the extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the exported extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionListSourcesResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/versions": {
      "get": {
        "tags": [
          "PortalExtensionVersion"
        ],
        "operationId": "PortalExtensionVersions_ListByExtension",
        "x-ms-examples": {
          "List all portal extensions on the resourceGroup": {
            "$ref": "examples/listPortalExtensionVersionsByExtension.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extension versions within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension versions.",
            "schema": {
              "$ref": "#/definitions/ExtensionVersionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/versions/{versionName}": {
      "put": {
        "tags": [
          "PortalExtensionVersion"
        ],
        "operationId": "PortalExtension_VersionsCreate",
        "description": "Creates an extension version",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "extension version definition.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtensionVersion"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExtensionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Extension Version from External Build Artifact": {
            "$ref": "./examples/createPortalExtensionVersionUsingBuildArtifact.json"
          },
          "Create Extension Version from Extension": {
            "$ref": "./examples/createPortalExtensionVersionOnDemmand.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "PortalExtensionVersion"
        ],
        "operationId": "PortalExtension_VersionsGet",
        "x-ms-examples": {
          "Get a portal extension": {
            "$ref": "examples/getPortalExtensionVersion.json"
          }
        },
        "description": "Gets the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/ExtensionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PortalExtensionVersion"
        ],
        "operationId": "PortalExtension_VersionsDelete",
        "x-ms-examples": {
          "Delete a portal extension": {
            "$ref": "examples/deletePortalExtensionVersion.json"
          }
        },
        "description": "Deletes the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "OK resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_VersionUpdate",
        "x-ms-examples": {
          "Update a PortalExtension Version": {
            "$ref": "examples/updatePortalExtensionVersion.json"
          }
        },
        "description": "Updates an existing portal extension version.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/VersionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PatchableExtensionVersion"
            },
            "description": "The updatable fields of a portal extension version."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/ExtensionVersion"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/deployments": {
      "get": {
        "tags": [
          "PortalExtensionDeployment"
        ],
        "operationId": "PortalExtensionDeployments_ListByExtension",
        "x-ms-examples": {
          "List all portal extensions on the extension": {
            "$ref": "examples/listPortalExtensionDeploymentsByExtension.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extension deployments within an extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension deployments.",
            "schema": {
              "$ref": "#/definitions/ExtensionDeploymentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/deployments/{deploymentName}": {
      "put": {
        "tags": [
          "PortalExtensionDeployment"
        ],
        "operationId": "PortalExtension_DeploymentsCreate",
        "description": "Deploys an extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "deployment definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionDeployment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExtensionDeployment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create Extension Deployment: From Version Resource Id": {
            "$ref": "./examples/createPortalExtensionDeploymentOfVersionId.json"
          },
          "Create Extension Deployment: Promote existing slot": {
            "$ref": "./examples/createPortalExtensionDeploymentPromoteSlotToProdStages.json"
          },
          "Create Extension Deployment: Single Stage": {
            "$ref": "./examples/createPortalExtensionDeploymentOfVersionIdToSingleStage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        }
      },
      "get": {
        "tags": [
          "PortalExtensionDeployment"
        ],
        "operationId": "PortalExtension_DeploymentsGet",
        "x-ms-examples": {
          "Get a portal extension": {
            "$ref": "examples/getPortalExtensionDeployment.json"
          }
        },
        "description": "Gets the portal extension deployment.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/ExtensionDeployment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PortalExtensionDeployment"
        ],
        "operationId": "PortalExtension_DeploymentsDelete",
        "x-ms-examples": {
          "Delete a portal extension": {
            "$ref": "examples/deletePortalExtensionDeployment.json"
          }
        },
        "description": "Only deletes if in a terminal state. Deletes the record only but not the actively running code.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "OK resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/deployments/{deploymentName}/stop": {
      "post": {
        "tags": [
          "PortalExtension_DeploymentStop"
        ],
        "operationId": "PortalExtension_DeploymentStop",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionDeploymentStop.json"
          }
        },
        "description": "Stops or cancels the deployment, if in progress.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/DeploymentNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully cancelled the default rollout."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/slots": {
      "get": {
        "tags": [
          "PortalExtensionSlot"
        ],
        "operationId": "PortalExtensionSlots_ListByExtension",
        "x-ms-examples": {
          "List all portal extensions on the extension": {
            "$ref": "examples/listPortalExtensionSlotsByExtension.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extension Slots within an extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of slots for the extension.",
            "schema": {
              "$ref": "#/definitions/ExtensionSlotListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/slots/{slotName}": {
      "put": {
        "tags": [
          "PortalExtensionSlot"
        ],
        "operationId": "PortalExtension_SlotsCreateOrUpdate",
        "description": "Creates or Updates a slot",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/SlotNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The slot deployment definition",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionSlot"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ExtensionSlot"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Creates a slot with content from an existing version": {
            "$ref": "./examples/createOrUpdatePortalExtensionSlotFromExistingVersion.json"
          },
          "Creates a slot with content from another slot": {
            "$ref": "./examples/createOrUpdatePortalExtensionSlotFromOtherSlot.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "original-uri"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "PortalExtensionSlot"
        ],
        "operationId": "PortalExtension_SlotsGet",
        "x-ms-examples": {
          "Get a portal extension": {
            "$ref": "examples/getPortalExtensionSlot.json"
          }
        },
        "description": "Gets the portal extension slot.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/SlotNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/ExtensionSlot"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PortalExtensionSlot"
        ],
        "operationId": "PortalExtension_SlotsDelete",
        "x-ms-examples": {
          "Delete a portal extension slot": {
            "$ref": "examples/deletePortalExtensionSlot.json"
          }
        },
        "description": "Delets a portal extension slot.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/SlotNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "OK resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "PortalExtensionListSourcesResult": {
      "type": "object",
      "properties": {
        "assetTypes": {
          "type": "array",
          "description": "The asset type source metadata.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the asset type."
              },
              "path": {
                "type": "string",
                "description": "The path to the file."
              }
            }
          }
        },
        "svgs": {
          "type": "array",
          "description": "The svg source metadata.",
          "items": {
            "type": "object",
            "properties": {
              "image": {
                "type": "string",
                "description": "The runtime svg content."
              },
              "path": {
                "type": "string",
                "description": "The path to the file."
              }
            }
          }
        },
        "views": {
          "type": "array",
          "description": "The view source metadata.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the view."
              },
              "kind": {
                "type": "string",
                "description": "The kind of view."
              },
              "path": {
                "type": "string",
                "description": "The path to the file."
              }
            }
          }
        }
      }
    },
    "ExtensionSlot": {
      "description": "A Portal Extension Slot",
      "allOf": [
        {
          "$ref": "#/definitions/ArmCommonProperties"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The extension slot properties.",
          "$ref": "#/definitions/ExtensionSlotProperties"
        }
      }
    },
    "ExtensionSlotProperties": {
      "properties": {
        "source": {
          "type": "object",
          "properties": {
            "kind": {
              "description": "The source content kind for deployment to the slot.",
              "$ref": "#/definitions/DeploymentSourceKind"
            },
            "value": {
              "type": "string"
            }
          },
          "description": "The source content for deployment to the slot."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Readonly. The current registration or provisioning state which only appears in the response",
          "readOnly": true
        },
        "nextStage": {
          "description": "Readonly. The slot that will be deployed to.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtensionSlotListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionSlot"
          },
          "description": "The array of portal extension slots."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of portal extension slots."
    },
    "ExtensionDeploymentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionDeployment"
          },
          "description": "The array of portal extension deployments."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of portal extension deployments."
    },
    "ExtensionDeployment": {
      "description": "Extension Deployment",
      "allOf": [
        {
          "$ref": "#/definitions/ArmCommonProperties"
        }
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The extension properties.",
          "$ref": "#/definitions/ExtensionDeploymentProperties"
        }
      }
    },
    "ExtensionDeploymentProperties": {
      "properties": {
        "waitDuration": {
          "description": "Default PT24H. The wait duration after each stage of the deployment. If a only single stage is being deployed waitDuration is ignored.",
          "type": "string",
          "default": "PT24H"
        },
        "source": {
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of source content for deployment",
              "$ref": "#/definitions/DeploymentSourceKind"
            },
            "value": {
              "type": "string"
            }
          },
          "description": "The build output artifact zip to deploy."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Readonly. The current registration or provisioning state which only appears in the response",
          "readOnly": true
        },
        "nextStage": {
          "description": "Readonly. The next stage of deployment from the deployment sequence e.g stage2",
          "type": "string",
          "readOnly": true
        },
        "stage": {
          "description": "Optional. The name of a a single stage to deploy. If ommitted the Extensions stageDefintion is used for deployment.",
          "type": "string"
        }
      }
    },
    "DeploymentSourceKind": {
      "enum": [
        "Version",
        "CopySlot"
      ],
      "default": "Version",
      "x-ms-enum": {
        "name": "DeploymentSourceKind",
        "modelAsString": true
      }
    },
    "DeploymentConfig": {
      "description": "Deployment config for the extension.",
      "properties": {
        "stageDefinition": {
          "$ref": "#/definitions/StageDefinition"
        }
      }
    },
    "StageDefinition": {
      "description": "Defines the deployment stages, regions to deploy to for each stage and sequence to rollout to individual stages.",
      "type": "object",
      "additionalProperties": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": {
          "stage1": [
            "centraluseuap"
          ],
          "stage2": [
            "westcentralus"
          ],
          "stage3": [
            "southcentralus"
          ],
          "stage4": [
            "westus"
          ],
          "stage5": [
            "*"
          ],
          "$sequence": [
            "stage1",
            "stage2",
            "stage3",
            "stage4",
            "stage5"
          ]
        }
      }
    },
    "PortalExtensionCompileFileResult": {
      "type": "object"
    },
    "PortalExtensionCompileFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The file path."
        },
        "contents": {
          "type": "object",
          "description": "The contents of the file."
        },
        "stringSource": {
          "type": "object",
          "description": "The contents of the string source."
        }
      }
    },
    "PortalExtensionExportResult": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PortalExtensionExportKind"
        },
        "uri": {
          "type": "string",
          "description": "The uri of the exported extension."
        }
      }
    },
    "PortalExtensionExport": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PortalExtensionExportKind"
        }
      }
    },
    "PortalExtensionSourceKind": {
      "enum": [
        "SourceCodeZipUri"
      ],
      "default": "SourceCodeZipUri",
      "x-ms-enum": {
        "name": "PortalExtensionSourceKind",
        "modelAsString": true
      }
    },
    "PortalExtensionExportKind": {
      "type": "string",
      "enum": [
        "SourceCodeZipUri",
        "BuildArtifactZipUri"
      ],
      "x-ms-enum": {
        "name": "ExportKind"
      },
      "description": "The kind of the source package."
    },
    "ExtensionVersionSourceKind": {
      "enum": [
        "BuildArtifactZipUri"
      ],
      "default": "BuildArtifactZipUri",
      "x-ms-enum": {
        "name": "ExtensionVersionSourceKind",
        "modelAsString": true
      }
    },
    "PublicStatusKind": {
      "enum": [
        "NotOnboarded",
        "PrivatePreview",
        "PublicPreview",
        "GA"
      ],
      "default": "NotOnboarded",
      "x-ms-enum": {
        "name": "PublicStatusKind",
        "modelAsString": true
      }
    },
    "PortalExtensionAlter": {
      "type": "object",
      "properties": {
        "alterations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "Write",
                  "Delete"
                ],
                "x-ms-enum": {
                  "name": "AlterKind"
                },
                "description": "The kind of alteration."
              },
              "path": {
                "type": "string",
                "description": "The file path to alter."
              },
              "content": {
                "type": "object",
                "description": "The content of the file."
              },
              "base64Content": {
                "type": "string",
                "description": "The base 64 encoded content of the file."
              }
            },
            "required": [
              "kind",
              "path"
            ]
          }
        }
      }
    },
    "PortalExtensionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalExtension"
          },
          "description": "The array of portal extensions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of portal extensions."
    },
    "ExtensionApiDefinition": {
      "type": "object",
      "description": "The ARM API definition used to generate extension content.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "The uri of the ARM API swagger."
        },
        "apiVersion": {
          "type": "string",
          "description": "The api version of the ARM APIs."
        }
      }
    },
    "PortalExtensionRequestProperties": {
      "type": "object",
      "description": "The portal extension properties.",
      "properties": {
        "source": {
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of the source package.",
              "$ref": "#/definitions/PortalExtensionSourceKind"
            },
            "uri": {
              "type": "string",
              "description": "The uri of the source package."
            }
          },
          "description": "The new source code of the extension."
        },
        "apiDefinition": {
          "$ref": "#/definitions/ExtensionApiDefinition",
          "description": "The ARM API definition used to generate extension content."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Readonly. The provisioning state.",
          "readOnly": true
        },
        "deploymentConfig": {
          "$ref": "#/definitions/DeploymentConfig"
        }
      }
    },
    "PortalExtensionProperties": {
      "type": "object",
      "description": "The portal extension properties.",
      "properties": {
        "deploymentConfig": {
          "$ref": "#/definitions/DeploymentConfig"
        },
        "icm": {
          "type": "object",
          "readOnly": true,
          "description": "Readonly. The ICM routing details for any live site issues for the extension set in service tree",
          "properties": {
            "service": {
              "readOnly": true,
              "description": "Readonly. The ICM service route e.g Azure Portal (IbizaFx) from ICM for the service tree icm teamId.",
              "type": "string"
            },
            "team": {
              "readOnly": true,
              "description": "Readonly. The team under the ICM service e.g Portal from ICM for the service tree icm teamId.",
              "type": "string"
            },
            "teamId": {
              "readOnly": true,
              "description": "Readonly. The ICM team Id from service tree.",
              "type": "integer"
            }
          },
          "required": [
            "service",
            "team",
            "teamId"
          ]
        },
        "feedbackEmail": {
          "readOnly": true,
          "description": "Readonly. Email for customer feedback from service tree.",
          "type": "string"
        },
        "serviceTreeId": {
          "description": "Readonly. The service tree id.",
          "type": "string",
          "readOnly": true
        },
        "oAuthClientId": {
          "readOnly": true,
          "description": "Readonly. The oAuthClientId guid from service tree.",
          "type": "string"
        },
        "previewStamp": {
          "readOnly": true,
          "description": "Readonly. The preview stamp from service tree.",
          "type": "string"
        },
        "portalName": {
          "readOnly": true,
          "description": "Readonly. The Azure portal extension name e.g Microsoft_Azure_Storage. Comes in from extension.pdl or extension.dx.json or is generated.",
          "type": "string"
        },
        "apiDefinition": {
          "$ref": "#/definitions/ExtensionApiDefinition",
          "description": "The ARM API definition used to generate extension content."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The current registration or provisioning state which only appears in the response",
          "readOnly": true
        },
        "publicStatus": {
          "description": "The visibility of the extension. By default status will be NotOnboarded. Microsoft owned extensions can promote using service tree. External extensions can promote your application use partner center.",
          "$ref": "#/definitions/PublicStatusKind",
          "readOnly": true
        },
        "runtimeUri": {
          "description": "Once provisioningState is in the terminal state of Succeeded this is the portal runtime uri for portal extensions with status of private",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PortalExtension": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The extension properties.",
          "$ref": "#/definitions/PortalExtensionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArmCommonProperties"
        }
      ]
    },
    "PortalExtensionRequest": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "description": "The portal extension properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalExtensionRequestProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArmCommonProperties"
        }
      ]
    },
    "PatchablePortalExtension": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "description": "The portal extension properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalExtensionProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "PatchableExtensionVersion": {
      "type": "object",
      "description": "The patchable fields of extension version.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "description": "The patchable extension version properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PatchableExtensionVersionProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "ExtensionVersionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionVersion"
          },
          "description": "The array of portal extension versions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of portal extensions."
    },
    "ExtensionVersion": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ExtensionVersionProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ArmCommonProperties"
        }
      ],
      "description": "Extension Version"
    },
    "ExtensionVersionProperties": {
      "properties": {
        "buildOutputArtifactUri": {
          "description": "The path to the ingested extension build artifact zip for the version.",
          "type": "string"
        },
        "hasBeenDeployed": {
          "description": "Indicates if the version has ever been deployed",
          "type": "boolean",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Readonly. The provisioning state.",
          "readOnly": true
        },
        "source": {
          "type": "object",
          "properties": {
            "kind": {
              "description": "The kind of source content for the version. If ommited uses latest exported version from extension.",
              "$ref": "#/definitions/ExtensionVersionSourceKind"
            },
            "value": {
              "type": "string"
            }
          },
          "description": "The build output artifact zip to create a version from"
        },
        "version": {
          "description": "The extension page version of the zip",
          "type": "string"
        }
      }
    },
    "PatchableExtensionVersionProperties": {
      "properties": {
        "hasBeenDeployed": {
          "description": "Set by RP to indicate if the version has ever been deployed",
          "type": "boolean"
        }
      }
    },
    "ArmCommonProperties": {
      "description": "Common resource properties",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "location": {
          "type": "string",
          "description": "Location of extension"
        }
      },
      "x-ms-azure-resource": true
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "description": "The provisioning state.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "PortalExtensionNameParameter": {
      "name": "portalExtensionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the portal extension.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "VersionNameParameter": {
      "name": "versionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the version",
      "x-ms-parameter-location": "method"
    },
    "DeploymentNameParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the deployment",
      "x-ms-parameter-location": "method"
    },
    "SlotNameParameter": {
      "name": "slotName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the slot",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    }
  }
}