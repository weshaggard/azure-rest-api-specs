{
  "swagger": "2.0",
  "info": {
    "version": "2020-12-01-preview",
    "title": "portal",
    "description": "Allows creation and deletion of Azure portal extensions.",
    "x-ms-code-generation-settings": {
      "name": "portalClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}": {
      "put": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_CreateOrUpdate",
        "x-ms-examples": {
          "Create or update a portal extension": {
            "$ref": "examples/createOrUpdatePortalExtension.json"
          }
        },
        "description": "Creates or updates a portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionRequest"
            },
            "description": "The parameters required to create or update a portal extension."
          }
        ],
        "responses": {
          "201": {
            "description": "Created response definition. Resource has been created",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "200": {
            "description": "Resource already exists.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Delete",
        "x-ms-examples": {
          "Delete a portal extension": {
            "$ref": "examples/deletePortalExtension.json"
          }
        },
        "description": "Deletes the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition."
          },
          "204": {
            "description": "OK resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Get",
        "x-ms-examples": {
          "Get a portal extension": {
            "$ref": "examples/getPortalExtension.json"
          }
        },
        "description": "Gets the portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "404": {
            "description": "Not found. Portal extension with provided id doesn't exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtension_Update",
        "x-ms-examples": {
          "Update a PortalExtension": {
            "$ref": "examples/updatePortalExtension.json"
          }
        },
        "description": "Updates an existing portal extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtension",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchablePortalExtension"
            },
            "description": "The updatable fields of a portal extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK response definition.",
            "schema": {
              "$ref": "#/definitions/PortalExtension"
            }
          },
          "404": {
            "description": "Not found. Portal extension with provided id doesn't exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions": {
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_ListByResourceGroup",
        "x-ms-examples": {
          "List all portal extensions on the resourceGroup": {
            "$ref": "examples/listPortalExtensionsByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extensions within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Portal/extensions": {
      "get": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_ListBySubscription",
        "x-ms-examples": {
          "List all portal extensions on the subscription": {
            "$ref": "examples/listPortalExtensionsBySubscription.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "description": "Gets all the portal extensions within a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/alter": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_Alter",
        "x-ms-examples": {
          "Alter portal extension source files": {
            "$ref": "examples/alterPortalExtensionSources.json"
          }
        },
        "description": "Alters portal extension source files.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionAlter",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionAlter"
            },
            "description": "The parameters required to alter portal extension sources."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns an array of portal extension."
          },
          "202": {
            "description": "Accepted - Alteration in progress."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/compilefile": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_CompileFile",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionCompileFile.json"
          }
        },
        "description": "compiles a file in the context of the extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionCompileView",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionCompileFile"
            },
            "description": "The parameters required to compile a source file."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the runtime configuration of the source file.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionCompileFileResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Portal/extensions/{portalExtensionName}/export": {
      "post": {
        "tags": [
          "PortalExtension"
        ],
        "operationId": "PortalExtensions_Export",
        "x-ms-examples": {
          "Compile single extension source file": {
            "$ref": "examples/portalExtensionExport.json"
          }
        },
        "description": "Exports the extension.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PortalExtensionNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "portalExtensionExport",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalExtensionExport"
            },
            "description": "The parameters required to export the extension."
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Returns the exported extension.",
            "schema": {
              "$ref": "#/definitions/PortalExtensionExportResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "PortalExtensionCompileFileResult": {
      "type": "object"
    },
    "PortalExtensionCompileFile": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The file path."
        },
        "contents": {
          "type": "object",
          "description": "The contents of the file."
        },
        "stringSource": {
          "type": "object",
          "description": "The contents of the string source."
        }
      }
    },
    "PortalExtensionExportResult": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PortalExtensionExportKind"
        },
        "uri": {
          "type": "string",
          "description": "The uri of the exported extension."
        }
      }
    },
    "PortalExtensionExport": {
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/PortalExtensionExportKind"
        }
      }
    },
    "PortalExtensionExportKind": {
      "type": "string",
      "enum": [
        "SourceCodeZipUri",
        "BuildArtifactZipUri"
      ],
      "x-ms-enum": {
        "name": "ExportKind"
      },
      "description": "The kind of the source package."
    },
    "PortalExtensionAlter": {
      "type": "object",
      "properties": {
        "alterations": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "kind": {
                "type": "string",
                "enum": [
                  "Write",
                  "Delete"
                ],
                "x-ms-enum": {
                  "name": "AlterKind"
                },
                "description": "The kind of alteration."
              },
              "path": {
                "type": "string",
                "description": "The file path to alter."
              },
              "content": {
                "type": "object",
                "description": "The content of the file."
              },
              "base64Content": {
                "type": "string",
                "description": "The base 64 encoded content of the file."
              }
            },
            "required": [
              "kind",
              "path"
            ]
          }
        }
      }
    },
    "PortalExtensionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalExtension"
          },
          "description": "The array of portal extensions."
        },
        "nextLink": {
          "type": "string",
          "description": "The URL to use for getting the next set of results."
        }
      },
      "description": "List of portal extensions."
    },
    "PortalExtensionRequestProperties": {
      "type": "object",
      "description": "The portal extension properties.",
      "properties": {
        "extensionName": {
          "type": "string",
          "description": "The portal runtime extension name."
        },
        "runtimeUri": {
          "readOnly": true,
          "type": "string",
          "description": "The portal runtime uri."
        },
        "source": {
          "type": "object",
          "description": "The new source code of the extension.",
          "properties": {
            "kind": {
              "type": "string",
              "enum": [
                "SourceCodeZipUri"
              ],
              "x-ms-enum": {
                "name": "SourceKind"
              },
              "description": "The kind of the source package."
            },
            "uri": {
              "type": "string",
              "description": "The uri of the source package."
            }
          }
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state."
        }
      }
    },
    "PortalExtensionProperties": {
      "type": "object",
      "description": "The portal extension properties.",
      "properties": {
        "extensionName": {
          "type": "string",
          "description": "The portal runtime extension name."
        },
        "runtimeUri": {
          "readOnly": true,
          "type": "string",
          "description": "The portal runtime uri."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state."
        }
      }
    },
    "PortalExtension": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "description": "The portal extension properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalExtensionProperties"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "PortalExtensionRequest": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "required": [
        "location"
      ],
      "properties": {
        "properties": {
          "description": "The portal extension properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalExtensionRequestProperties"
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Resource Id"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Resource name"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Resource type"
        },
        "location": {
          "type": "string",
          "description": "Resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "PatchablePortalExtension": {
      "type": "object",
      "description": "The portal extension resource definition.",
      "x-ms-azure-resource": true,
      "x-ms-client-flatten": true,
      "properties": {
        "properties": {
          "description": "The portal extension properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/PortalExtensionProperties"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "PortalExtensionNameParameter": {
      "name": "portalExtensionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the portal extension.",
      "minLength": 3,
      "maxLength": 64,
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    }
  }
}
