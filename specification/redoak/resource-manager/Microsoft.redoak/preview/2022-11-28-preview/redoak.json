{
  "swagger": "2.0",
  "info": {
    "title": "Redoak Platform Management Service APIs",
    "description": "Redoak Platform Management Rest API spec.",
    "version": "2022-11-28-preview"
  },
  "host": "management.azure.com",
  "paths": {
    "/providers/Microsoft.redoak/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available operations of Microsoft.redoak resource provider.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.redoak/redoakServices": {
      "get": {
        "tags": [
          "UserRPRedoakResource"
        ],
        "operationId": "RedoakServices_ListBySubscription",
        "description": "Lists a collection of Redoak resources under the given Azure Subscription ID.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RedoakServiceList"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "RedOak_ListBySubscription": {
            "$ref": "./examples/RedOak_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.redoak/RedoakServices": {
      "get": {
        "tags": [
          "UserRPRedoakResource"
        ],
        "operationId": "RedoakServices_ListByResourceGroup",
        "description": "List KdbInsightsEnterpriseResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/RedoakServiceList"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Redoak_ListByResourceGroup": {
            "$ref": "./examples/Redoak_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.redoak/RedoakServices/{resourceName}": {
      "get": {
        "tags": [
          "UserRPRedoakResource"
        ],
        "description": "Returns Redoak resource for a given name.",
        "operationId": "RedoakServices_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RedoakService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RedOak_Get": {
            "$ref": "./examples/RedOak_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "UserRPRedoakResource"
        ],
        "description": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "operationId": "RedoakServices_Create",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body.",
            "schema": {
              "description": "Request body.",
              "$ref": "#/definitions/RedoakService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Redoak resource created.",
            "schema": {
              "$ref": "#/definitions/RedoakService"
            }
          },
          "201": {
            "description": "The Redoak resource will be created asynchronously",
            "schema": {
              "$ref": "#/definitions/RedoakService"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Confidential Ledger could not be created/updated)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RedOak_Create": {
            "$ref": "./examples/RedOak_Create.json"
          }
        }
      },
      "patch": {
        "operationId": "RedoakServices_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RedoakResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the Redoak resource.",
            "schema": {
              "$ref": "#/definitions/RedoakService"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RedOak_Update": {
            "$ref": "./examples/RedOak_Update.json"
          }
        }
      },
      "delete": {
        "description": "Deletes Redoak resource",
        "operationId": "RedoakServices_Delete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourceNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "The Redoak resource will be deleted asynchronously"
          },
          "204": {
            "description": "Returned when the operation returns no content."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "RedOak_Delete": {
            "$ref": "./examples/RedOak_Delete.json"
          }
        }
      }
    }
  },
  "definitions": {
    "DataPartitionNames": {
      "type": "object",
      "description": "The list of Energy services resource's Data Partition Names.",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "RedoakServiceList": {
      "description": "The list of Redoak resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of Redoak resources list.",
          "type": "string"
        },
        "value": {
          "description": "The list of Redoak resources.",
          "type": "array",
          "x-ms-identifiers": [],
          "items": {
            "$ref": "#/definitions/RedoakService"
          }
        }
      }
    },
    "RedoakResourceUpdate": {
      "description": "The resource model definition used for updating a tracked ARM resource.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "RedoakServiceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "enum": [
            "Unknown",
            "Succeeded",
            "Failed",
            "Canceled",
            "Creating",
            "Deleting",
            "Updating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        },
        "applicationId": {
          "type": "string"
        },
        "virtualNetworkName": {
          "type": "string"
        },
        "virtualNetworkExisting": {
          "type": "string"
        },
        "dataPartitionNames": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPartitionNames"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "RedoakService": {
      "required": [
        "location"
      ],
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedoakServiceProperties"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Geo-location where the resource lives.",
          "type": "string"
        }
      }
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "resourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The resource name."
    }
  }
}
