{
  "swagger": "2.0",
  "info": {
    "title": "PerceptP8C",
    "description": "The Microsoft.PerceptP8C Rest API spec.",
    "version": "2020-01-01-preview",
    "x-ms-code-generation-settings": {
      "name": "PerceptP8CClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PerceptP8C/solutions/{solutionsName}": {
      "get": {
        "operationId": "solutions_Retrieve",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/solutionsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the solutions resource.",
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          }
        }
      },
      "put": {
        "operationId": "solutions_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/solutionsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "solutions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the solutions resource.",
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          },
          "201": {
            "description": "Creates the solutions resource.",
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          }
        }
      },
      "delete": {
        "operationId": "solutions_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/solutionsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the solutions resource."
          }
        }
      },
      "patch": {
        "operationId": "solutions_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/solutionsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "solutions",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/solutionsPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the solutions resource.",
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          },
          "201": {
            "description": "Updates the solutions resource.",
            "schema": {
              "$ref": "#/definitions/solutions"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PerceptP8C/solutions": {
      "get": {
        "operationId": "solutions_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all solutions under the resouce group.",
            "schema": {
              "$ref": "#/definitions/solutionsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PerceptP8C/solutions": {
      "get": {
        "operationId": "solutions_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all solutions under the subscription.",
            "schema": {
              "$ref": "#/definitions/solutionsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.PerceptP8C/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "solutionsProperties": {
      "type": "object",
      "properties": {
        "caps": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Capability portfolio attached to the endpoint"
        },
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "caps": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "image": {
                "type": "string"
              },
              "modelContent": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "type": {
                "type": "string"
              }
            },
            "required": [
              "image",
              "name",
              "type"
            ]
          }
        },
        "eTag": {
          "type": "string",
          "description": "ETag is used for state reconcilation between k8s state and ARM state. A desired state with matching ETag is accepted. A desired state with staled ETag is to be reconciled based on predefined policies, such as cloud-win and device-win"
        },
        "modelContent": {
          "type": "string",
          "description": "Inline endpoint spec"
        },
        "modelRefId": {
          "type": "string",
          "description": "Spec reference id"
        },
        "type": {
          "type": "string",
          "description": "Spec type"
        },
        "provisioningState": {
          "type": "string"
        },
        "status": {
          "type": "object",
          "properties": {
            "instances": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "type": "string",
                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
                  },
                  "kind": {
                    "type": "string",
                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                  },
                  "metadata": {
                    "type": "object"
                  },
                  "spec": {
                    "type": "object",
                    "properties": {
                      "eTag": {
                        "type": "string",
                        "description": "ETag is used for state reconcilation between k8s state and ARM state. A desired state with matching ETag is accepted. A desired state with staled ETag is to be reconciled based on predefined policies, such as cloud-win and device-win"
                      },
                      "solution": {
                        "type": "string"
                      },
                      "target": {
                        "type": "string"
                      },
                      "topology": {
                        "type": "object",
                        "additionalProperties": {
                          "properties": {
                            "selector": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "template": {
                              "additionalProperties": {
                                "type": "string"
                              },
                              "type": "object"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "template",
                            "type"
                          ],
                          "type": "object"
                        }
                      }
                    },
                    "required": [
                      "solution"
                    ],
                    "description": "InstanceSpec defines the desired state of Instance"
                  },
                  "status": {
                    "type": "object",
                    "properties": {
                      "artifacts": {
                        "type": "object",
                        "additionalProperties": {
                          "properties": {
                            "items": {
                              "items": {
                                "properties": {
                                  "etag": {
                                    "type": "string"
                                  },
                                  "info": {
                                    "properties": {
                                      "format": {
                                        "type": "string"
                                      },
                                      "identity": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "source": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "source"
                                        ],
                                        "type": "object"
                                      },
                                      "metadata": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "type": "object"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "format",
                                      "identity",
                                      "name",
                                      "type",
                                      "version"
                                    ],
                                    "type": "object"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "properties": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "type": "object"
                                  }
                                },
                                "required": [
                                  "etag",
                                  "info",
                                  "path"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "items"
                          ],
                          "type": "object"
                        },
                        "description": "Important: Run \"make\" to regenerate code after modifying this file"
                      },
                      "matchedDevices": {
                        "type": "object",
                        "additionalProperties": {
                          "properties": {
                            "entries": {
                              "additionalProperties": {
                                "description": "Device is the Schema for the devices API",
                                "properties": {
                                  "apiVersion": {
                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "type": "object"
                                  },
                                  "spec": {
                                    "description": "DeviceSpec defines the desired state of Device. This object holds a reference to an entry in a device registry such as Azure IoT Hub.",
                                    "properties": {
                                      "eTag": {
                                        "description": "ETag is used for state reconcilation between k8s state and ARM state. A desired state with matching ETag is accepted. A desired state with staled ETag is to be reconciled based on predefined policies, such as cloud-win and device-win",
                                        "type": "string"
                                      },
                                      "properties": {
                                        "additionalProperties": {
                                          "type": "string"
                                        },
                                        "type": "object"
                                      },
                                      "ref": {
                                        "properties": {
                                          "id": {
                                            "description": "Idenity of the device in a device registry.",
                                            "type": "string"
                                          },
                                          "properties": {
                                            "additionalProperties": {
                                              "type": "string"
                                            },
                                            "type": "object"
                                          },
                                          "registry": {
                                            "description": "The source registery where the device is registered. An empty registry indicates the device hasn't been registered anywhere.",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "properties",
                                          "registry"
                                        ],
                                        "type": "object"
                                      },
                                      "type": {
                                        "description": "Type of the device. As we don't support custom device types yet, the device of a device is identified by a simple string. In the future when custom types become necessary, we'll promote this attribute to its own spec.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "eTag",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  "status": {
                                    "description": "DeviceStatus defines the observed state of Device",
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "entries"
                          ],
                          "type": "object"
                        }
                      }
                    },
                    "description": "InstanceStatus defines the observed state of Instance"
                  }
                },
                "description": "Instance is the Schema for the Instances API"
              },
              "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file"
            }
          },
          "required": [
            "instances"
          ],
          "description": "SolutionStatus defines the observed state of Solution"
        }
      },
      "required": [
        "type"
      ],
      "description": "SolutionSpec defines the desired state of Solution"
    },
    "solutions": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/solutionsProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The solutions resource definition."
    },
    "solutionsPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The solutions resource patch definition."
    },
    "solutionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/solutions"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Results of the request to list operations."
    },
    "ResourceProviderOperation": {
      "type": "object",
      "properties": {
        "isDataAction": {
          "type": "string",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          },
          "description": "Display metadata associated with the operation."
        }
      },
      "description": "Results of the request to list operations."
    }
  },
  "parameters": {
    "solutionsNameParameter": {
      "name": "solutionsName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
    }
  }
}