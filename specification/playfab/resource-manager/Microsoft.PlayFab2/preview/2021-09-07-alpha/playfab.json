{
  "swagger": "2.0",
  "info": {
    "title": "PlayFab",
    "version": "2021-09-07-alpha"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PlayerAccountPools"
    }
  ],
  "paths": {
    "/providers/Microsoft.PlayFab2/operations": {
      "get": {
        "operationId": "Operations_List",
        "summary": "List the operations for Microsoft.PlayFab",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Operations"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab2/playerAccountPools/{playerAccountPoolName}": {
      "get": {
        "operationId": "PlayerAccountPools_Get",
        "summary": "Get a PlayerAccountPool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PlayerAccountPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPool"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-examples": {
          "PlayerAccountPools_Get": {
            "$ref": "./examples/PlayerAccountPools_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PlayerAccountPools_CreateOrUpdate",
        "summary": "Create a PlayerAccountPool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PlayerAccountPoolNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPool"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPool"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-examples": {
          "PlayerAccountPools_CreateOrUpdate": {
            "$ref": "./examples/PlayerAccountPools_CreateOrUpdate.json"
          }
        }
      },
      "patch": {
        "operationId": "PlayerAccountPools_Update",
        "summary": "Update a PlayerAccountPool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PlayerAccountPoolNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPool"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-examples": {
          "PlayerAccountPools_Update": {
            "$ref": "./examples/PlayerAccountPools_Update.json"
          }
        }
      },
      "delete": {
        "operationId": "PlayerAccountPools_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "summary": "Delete a PlayerAccountPool",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PlayerAccountPoolNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "202": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deletion accepted."
          },
          "204": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-examples": {
          "PlayerAccountPools_Delete": {
            "$ref": "./examples/PlayerAccountPools_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PlayFab2/playerAccountPools": {
      "get": {
        "operationId": "PlayerAccountPools_ListBySubscription",
        "summary": "List PlayerAccountPool resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PlayerAccountPools_ListBySubscription": {
            "$ref": "./examples/PlayerAccountPools_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab2/playerAccountPools": {
      "get": {
        "operationId": "PlayerAccountPools_ListByResourceGroup",
        "summary": "List PlayerAccountPool resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PlayerAccountPools"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PlayerAccountPools_ListByResourceGroup": {
            "$ref": "./examples/PlayerAccountPools_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}": {
      "put": {
        "tags": [
          "Titles"
        ],
        "description": "Create or Update Title",
        "operationId": "Title_ResourceGroupLevelPut",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/titleResource"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelPut": {
            "$ref": "./examples/Title_ResourceGroupLevelPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Read Title",
        "operationId": "Title_ResourceGroupLevelGet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelGet": {
            "$ref": "./examples/Title_ResourceGroupLevelGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Titles"
        ],
        "description": "Delete Title",
        "operationId": "Title_ResourceGroupLevelDelete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Title is deleted."
          },
          "202": {
            "description": "The request was accepted"
          },
          "204": {
            "description": "The request was successful; the Title is deleted."
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict(Title is in a non-terminal state due to an ongoing operation.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelDelete": {
            "$ref": "./examples/Title_ResourceGroupLevelDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Titles"
        ],
        "description": "Update Title",
        "operationId": "Title_ResourceGroupLevelPatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/TitleUpdate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelPatch": {
            "$ref": "./examples/Title_ResourceGroupLevelPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles": {
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Get all Titles in a resource group",
        "operationId": "Title_ResourceGroupLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/TitleCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelList": {
            "$ref": "./examples/Title_ResourceGroupLevelList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PlayFab/titles": {
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Read all Titles in a subscription",
        "operationId": "Title_SubscriptionLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/TitleCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_SubscriptionLevelList": {
            "$ref": "./examples/Title_SubscriptionLevelList.json"
          }
        }
      }
    }
  },
  "definitions": {
    "PlayerAccountPool": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlayerAccountPoolProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Player Account Pool.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PlayerAccountPoolUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the PlayerAccountPool."
    },
    "PlayerAccountPoolListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlayerAccountPool"
          },
          "x-cadl-name": "Microsoft.PlayFab.PlayerAccountPool[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a PlayerAccountPool list operation.",
      "required": [
        "value"
      ]
    },
    "PlayerAccountPoolProperties": {
      "type": "object",
      "properties": {
        "playFabPublisherId": {
          "type": "string",
          "description": "Id of publisher object in PlayFab backend associated to the PlayerAccountPool resource.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      }
    },
    "TitleUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        },
        "titleSettings": {
          "$ref": "#/definitions/TitleSettings"
        }
      },
      "description": "The updatable properties of the Title."
    },
    "ResourceOfTitle": {
      "type": "object",
      "description": "Resource of Title Type",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TitleProperties"
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        },
        {
          "$ref": "#/definitions/ExtraProperties"
        }
      ]
    },
    "TitleProperties": {
      "type": "object",
      "description": "Properties of Title Resource",
      "properties": {
        "playFabTitleId": {
          "type": "string",
          "readOnly": true,
          "description": "Id of title object in PlayFab backend."
        },
        "playerAccountPoolId": {
          "type": "string",
          "description": "Azure resource Id of the playerAccountPool resource."
        },
        "titleSettings": {
          "$ref": "#/definitions/TitleSettings"
        }
      },
      "required": [
        "playerAccountPoolId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePropertiesBase"
        }
      ]
    },
    "TitleSettings": {
      "type": "object",
      "properties": {
        "generalSettings": {
          "$ref": "#/definitions/GeneralSettings",
          "description": "General title settings"
        }
      },
      "description": "Settings of Title"
    },
    "GeneralSettings": {
      "type": "object",
      "properties": {
        "allowNonUniquePlayerDisplayNames": {
          "type": "boolean",
          "description": "Setting to allow non unique player display names"
        },
        "displayNameRandomSuffixLength": {
          "type": "integer",
          "description": "Setting to specify suffix length"
        }
      },
      "description": "General settings of Title"
    },
    "TitleCollection": {
      "description": "Page of Title",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Title Resource",
          "type": "array",
          "items": {
            "description": "The list of Title.",
            "$ref": "#/definitions/ResourceOfTitle"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of Title resources list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ResourcePropertiesBase": {
      "type": "object",
      "description": "The Common Resource Properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The value for the provisioning state",
          "readOnly": true,
          "enum": [
            "NotSpecified",
            "Accepted",
            "Creating",
            "Deleting",
            "Canceled",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ExtraProperties": {
      "type": "object",
      "description": "Extra properties not included in Tracked Resource",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "etag": {
          "type": "string",
          "description": "Etag of the Azure resource",
          "readOnly": true
        }
      }
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "tenantId": {
          "description": "Tenant of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "principalId": {
          "description": "Principal Id of managed service identity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Creating",
        "Deleting",
        "Canceled",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "PlayerAccountPoolNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "playerAccountPoolName",
      "in": "path",
      "required": true,
      "description": "Name of the Player Account Pool Parameter.",
      "type": "string"
    },
    "TitleNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "titleName",
      "in": "path",
      "required": true,
      "description": "Name of the Title Parameter.",
      "type": "string"
    },
    "titleResource": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ResourceOfTitle"
      },
      "x-nullable": false,
      "description": "Title Request object.",
      "x-ms-parameter-location": "method"
    }
  }
}
