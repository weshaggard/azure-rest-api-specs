{
  "swagger": "2.0",
  "info": {
    "title": "PlayFab",
    "description": "PlayFab AzureResourceProvider",
    "version": "2021-09-07-alpha"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "PlayerAccountPools"
    },
    {
      "name": "Titles"
    },
    {
      "name": "CloudScripts"
    },
    {
      "name": "Segments"
    },
    {
      "name": "TitleDatas"
    },
    {
      "name": "PrimaryKVs"
    }
  ],
  "paths": {
    "/providers/Microsoft.PlayFab/operations": {
      "get": {
        "operationId": "Operations_List",
        "summary": "List the operations for Microsoft.PlayFab",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Operations"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/playerAccountPools/{playerAccountPoolName}": {
      "put": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Create Or Update PlayerAccountPool",
        "operationId": "PlayerAccountPool_ResourceGroupLevelPut",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/playerAccountPoolName"
          },
          {
            "$ref": "#/parameters/playerAccountPoolResource"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Player Account",
            "schema": {
              "$ref": "#/definitions/ResourceOfPlayerAccountPool"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Player Account could not be created/updated)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_ResourceGroupLevelPut": {
            "$ref": "./examples/PlayerAccountPool_ResourceGroupLevelPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Read PlayerAccountPool",
        "operationId": "PlayerAccountPool_ResourceGroupLevelGet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/playerAccountPoolName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Player Account",
            "schema": {
              "$ref": "#/definitions/ResourceOfPlayerAccountPool"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Player Account does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_ResourceGroupLevelGet": {
            "$ref": "./examples/PlayerAccountPool_ResourceGroupLevelGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Delete PlayerAccountPool",
        "operationId": "PlayerAccountPool_ResourceGroupLevelDelete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/playerAccountPoolName"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Player Account is deleted."
          },
          "202": {
            "description": "The request was Accepted"
          },
          "204": {
            "description": "The request was successful; Player Account does not exist."
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict(Player Account is in a non-terminal state due to an ongoing operation.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_ResourceGroupLevelDelete": {
            "$ref": "./examples/PlayerAccountPool_ResourceGroupLevelDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Update PlayerAccountPool",
        "operationId": "PlayerAccountPool_ResourceGroupLevelPatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/playerAccountPoolName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolUpdate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the updated Player Account",
            "schema": {
              "$ref": "#/definitions/ResourceOfPlayerAccountPool"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Player Account does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_ResourceGroupLevelPatch": {
            "$ref": "./examples/PlayerAccountPool_ResourceGroupLevelPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/playerAccountPools": {
      "get": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Get all PlayerAccountPools in a resource group",
        "operationId": "PlayerAccountPool_ResourceGroupLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Player Account",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Player Account does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_ResourceGroupLevelList": {
            "$ref": "./examples/PlayerAccountPool_ResourceGroupLevelList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PlayFab/playerAccountPools": {
      "get": {
        "tags": [
          "PlayerAccountPools"
        ],
        "description": "Get all PlayerAccountPools in a subscription",
        "operationId": "PlayerAccountPool_SubscriptionLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Player Account",
            "schema": {
              "$ref": "#/definitions/PlayerAccountPoolCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Player Account does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "PlayerAccountPool_SubscriptionLevelList": {
            "$ref": "./examples/PlayerAccountPool_SubscriptionLevelList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}": {
      "put": {
        "tags": [
          "Titles"
        ],
        "description": "Create or Update Title",
        "operationId": "Title_ResourceGroupLevelPut",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/titleResource"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelPut": {
            "$ref": "./examples/Title_ResourceGroupLevelPut.json"
          }
        }
      },
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Read Title",
        "operationId": "Title_ResourceGroupLevelGet",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelGet": {
            "$ref": "./examples/Title_ResourceGroupLevelGet.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Titles"
        ],
        "description": "Delete Title",
        "operationId": "Title_ResourceGroupLevelDelete",
        "x-ms-long-running-operation": true,
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the Title is deleted."
          },
          "202": {
            "description": "The request was accepted"
          },
          "204": {
            "description": "The request was successful; the Title is deleted."
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 409 - Conflict(Title is in a non-terminal state due to an ongoing operation.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelDelete": {
            "$ref": "./examples/Title_ResourceGroupLevelDelete.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Titles"
        ],
        "description": "Update Title",
        "operationId": "Title_ResourceGroupLevelPatch",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/TitleUpdate"
            }
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/ResourceOfTitle"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelPatch": {
            "$ref": "./examples/Title_ResourceGroupLevelPatch.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles": {
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Get all Titles in a resource group",
        "operationId": "Title_ResourceGroupLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/TitleCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_ResourceGroupLevelList": {
            "$ref": "./examples/Title_ResourceGroupLevelList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.PlayFab/titles": {
      "get": {
        "tags": [
          "Titles"
        ],
        "description": "Read all Titles in a subscription",
        "operationId": "Title_SubscriptionLevelList",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the Title",
            "schema": {
              "$ref": "#/definitions/TitleCollection"
            }
          },
          "default": {
            "description": "Error response describing the reason for operation failure. 404 - NotFound (Title does not exist.)",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Title_SubscriptionLevelList": {
            "$ref": "./examples/Title_SubscriptionLevelList.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/cloudscripts/{cloudScriptName}": {
      "get": {
        "operationId": "CloudScripts_Get",
        "summary": "Get a CloudScript",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/CloudScriptNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudScript"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "CloudScripts"
        ],
        "x-ms-examples": {
          "CloudScripts_Get": {
            "$ref": "./examples/CloudScripts_Get.json"
          }
        }
      },
      "put": {
        "operationId": "CloudScripts_CreateOrUpdate",
        "summary": "Create a CloudScript",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/CloudScriptNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/CloudScript"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudScript"
            }
          },
          "201": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudScript"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "CloudScripts"
        ],
        "x-ms-examples": {
          "CloudScripts_CreateOrUpdate": {
            "$ref": "./examples/CloudScripts_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "CloudScripts_Delete",
        "summary": "Delete a CloudScript",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/CloudScriptNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "202": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deletion accepted."
          },
          "204": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "CloudScripts"
        ],
        "x-ms-examples": {
          "CloudScripts_Delete": {
            "$ref": "./examples/CloudScripts_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/segments/{segmentName}": {
      "get": {
        "operationId": "Segments_Get",
        "summary": "Get a Segment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/SegmentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "x-ms-examples": {
          "Segments_Get": {
            "$ref": "./examples/Segments_Get.json"
          }
        }
      },
      "put": {
        "operationId": "Segments_CreateOrUpdate",
        "summary": "Create a Segment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/SegmentNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "201": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Segment"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "x-ms-examples": {
          "Segments_CreateOrUpdate": {
            "$ref": "./examples/Segments_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "Segments_Delete",
        "summary": "Delete a Segment",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/SegmentNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "202": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deletion accepted."
          },
          "204": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "x-ms-examples": {
          "Segments_Delete": {
            "$ref": "./examples/Segments_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/segments": {
      "get": {
        "operationId": "Segments_ListByTitle",
        "summary": "List Segment resource by Title",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SegmentListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Segments"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Segments_ListByTitle": {
            "$ref": "./examples/Segments_ListByTitle.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/titledatas/{titleDataName}": {
      "get": {
        "operationId": "TitleDatas_Get",
        "summary": "Get a TitleData",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/TitleDataNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TitleData"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TitleDatas"
        ],
        "x-ms-examples": {
          "TitleDatas_Get": {
            "$ref": "./examples/TitleDatas_Get.json"
          }
        }
      },
      "put": {
        "operationId": "TitleDatas_CreateOrUpdate",
        "summary": "Create a TitleData",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/TitleDataNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/TitleData"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TitleData"
            }
          },
          "201": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TitleData"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TitleDatas"
        ],
        "x-ms-examples": {
          "TitleDatas_CreateOrUpdate": {
            "$ref": "./examples/TitleDatas_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "TitleDatas_Delete",
        "summary": "Delete a TitleData",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/TitleDataNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "202": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deletion accepted."
          },
          "204": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TitleDatas"
        ],
        "x-ms-examples": {
          "TitleDatas_Delete": {
            "$ref": "./examples/TitleDatas_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/primaryKVs/{primaryKVName}": {
      "get": {
        "operationId": "PrimaryKVs_Get",
        "summary": "Get a PrimaryKV",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/PrimaryKVNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrimaryKV"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PrimaryKVs"
        ],
        "x-ms-examples": {
          "PrimaryKVs_Get": {
            "$ref": "./examples/PrimaryKVs_Get.json"
          }
        }
      },
      "put": {
        "operationId": "PrimaryKVs_CreateOrUpdate",
        "summary": "Create a PrimaryKV",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/PrimaryKVNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/PrimaryKV"
            }
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrimaryKV"
            }
          },
          "201": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrimaryKV"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PrimaryKVs"
        ],
        "x-ms-examples": {
          "PrimaryKVs_CreateOrUpdate": {
            "$ref": "./examples/PrimaryKVs_CreateOrUpdate.json"
          }
        }
      },
      "delete": {
        "operationId": "PrimaryKVs_Delete",
        "summary": "Delete a PrimaryKV",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          },
          {
            "$ref": "#/parameters/PrimaryKVNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "202": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deletion accepted."
          },
          "204": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PrimaryKVs"
        ],
        "x-ms-examples": {
          "PrimaryKVs_Delete": {
            "$ref": "./examples/PrimaryKVs_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/primaryKVs": {
      "get": {
        "operationId": "PrimaryKVs_ListByTitle",
        "summary": "List PrimaryKV resources by Title",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PrimaryKVListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "PrimaryKVs"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "PrimaryKVs_ListByTitle": {
            "$ref": "./examples/PrimaryKVs_ListByTitle.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.PlayFab/titles/{titleName}/cloudscripts": {
      "get": {
        "operationId": "Cloudscripts_ListByTitle",
        "summary": "List Cloudscript resources by Title",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TitleNameParameter"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "x-ms-correlation-request-id": {
                "type": "string"
              }
            },
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudscriptListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "CloudScripts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Cloudscripts_ListByTitle": {
            "$ref": "./examples/Cloudscripts_ListByTitle.json"
          }
        }
      }
    }
  },
  "definitions": {
    "ResourceOfPlayerAccountPool": {
      "type": "object",
      "description": "Resource of PlayerAccountPool Type",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlayerAccountPoolProperties"
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        },
        {
          "$ref": "#/definitions/ExtraProperties"
        }
      ]
    },
    "PlayerAccountPoolUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the PlayerAccountPool."
    },
    "TitleUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        }
      },
      "description": "The updatable properties of the Title."
    },
    "PlayerAccountPoolProperties": {
      "type": "object",
      "description": "Properties of PlayerAccountPool Resource",
      "properties": {
        "playFabPublisherId": {
          "type": "string",
          "readOnly": true,
          "description": "PlayFab Publisher ID associated with the PlayerAccountPoolResource"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePropertiesBase"
        }
      ]
    },
    "ResourcePropertiesBase": {
      "type": "object",
      "description": "The Common Resource Properties",
      "properties": {
        "provisioningState": {
          "type": "string",
          "description": "The value for the provisioning state",
          "readOnly": true,
          "enum": [
            "NotSpecified",
            "Accepted",
            "Creating",
            "Deleting",
            "Canceled",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "provisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ResourceOfTitle": {
      "type": "object",
      "description": "Resource of Title Type",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TitleProperties"
        },
        "identity": {
          "$ref": "#/definitions/ManagedServiceIdentity"
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        },
        {
          "$ref": "#/definitions/ExtraProperties"
        }
      ]
    },
    "TitleProperties": {
      "type": "object",
      "description": "Properties of Title Resource",
      "properties": {
        "playFabTitleId": {
          "type": "string",
          "readOnly": true,
          "description": "Id of title object in PlayFab backend."
        },
        "playerAccountPoolId": {
          "type": "string",
          "description": "Azure resource Id of the playerAccountPool resource."
        }
      },
      "required": [
        "playerAccountPoolId"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePropertiesBase"
        }
      ]
    },
    "PlayerAccountPoolCollection": {
      "description": "Page of PlayerAccountPool",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of PlayerAccountPool Resource",
          "type": "array",
          "items": {
            "description": "The list of PlayerAccountPool.",
            "$ref": "#/definitions/ResourceOfPlayerAccountPool"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of PlayerAccountPool resources list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtraProperties": {
      "type": "object",
      "description": "Extra properties not included in Tracked Resource",
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "etag": {
          "type": "string",
          "description": "Etag of the Azure resource",
          "readOnly": true
        }
      }
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "enum": [
            "SystemAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ManagedServiceIdentityType",
            "modelAsString": true
          }
        },
        "tenantId": {
          "description": "Tenant of managed service identity.",
          "type": "string",
          "readOnly": true
        },
        "principalId": {
          "description": "Principal Id of managed service identity.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "TitleCollection": {
      "description": "Page of Title",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Title Resource",
          "type": "array",
          "items": {
            "description": "The list of Title.",
            "$ref": "#/definitions/ResourceOfTitle"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of Title resources list.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CloudscriptListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudScript"
          },
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a Cloudscript list operation.",
      "required": [
        "value"
      ]
    },
    "CloudScript": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudScriptProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "CloudScripts.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrimaryKV": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PrimaryKVProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "PrimaryKV.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PrimaryKVProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value to set for PrimaryKV."
        }
      },
      "description": "Properties of PrimaryKV.",
      "required": [
        "value"
      ]
    },
    "PrimaryKVListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrimaryKV"
          },
          "description": "List of PrimaryKV on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of PrimaryKVs"
        }
      },
      "description": "The response of a PrimaryKV list operation.",
      "required": [
        "value"
      ]
    },
    "TitleData": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TitleDataProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Title Data.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "Segment": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SegmentProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Segment.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SegmentProperties": {
      "type": "object",
      "properties": {
        "playFabSegmentId": {
          "type": "string",
          "description": "Id of Segment object in PlayFab backend.",
          "readOnly": true
        },
        "query": {
          "$ref": "#/definitions/SegmentQuery",
          "description": "Query for defining Segment."
        }
      },
      "required": [
        "query"
      ]
    },
    "SegmentQuery": {
      "type": "object",
      "properties": {
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SegmentGroup"
          },
          "x-cadl-name": "Microsoft.PlayFab.SegmentGroup[]",
          "description": "Groups in Query for Segment definition"
        }
      },
      "required": [
        "groups"
      ]
    },
    "SegmentGroup": {
      "type": "object",
      "properties": {
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SegmentFilter"
          },
          "x-cadl-name": "Microsoft.PlayFab.SegmentFilter[]",
          "description": "List of Filters for defining groups"
        }
      },
      "required": [
        "filters"
      ]
    },
    "SegmentFilter": {
      "type": "object",
      "properties": {
        "filterName": {
          "$ref": "#/definitions/FilterName",
          "description": "Name of the Segment filter."
        },
        "comparison": {
          "$ref": "#/definitions/Comparison",
          "description": "Comparator used for the filter."
        },
        "value": {
          "type": "string",
          "description": "Value to be compared"
        }
      },
      "required": [
        "filterName",
        "comparison",
        "value"
      ],
      "additionalProperties": {}
    },
    "SegmentStatisticFilter": {
      "type": "object",
      "properties": {
        "statisticName": {
          "type": "string",
          "description": "Name of the statistic used as Segment filter."
        },
        "version": {
          "type": "integer",
          "description": "Version of the statistic being used."
        },
        "useCurrentVersion": {
          "type": "boolean",
          "description": "Flag to use current version of the statistic"
        }
      },
      "required": [
        "statisticName"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentFilter"
        }
      ]
    },
    "SegmentListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Segment"
          },
          "description": "The Segments on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of Segments"
        }
      },
      "description": "The response of a Segment list operation.",
      "required": [
        "value"
      ]
    },
    "FilterName": {
      "type": "string",
      "enum": [
        "FirstLogin",
        "LastLogin",
        "FirstLoginDate",
        "LastLoginDate",
        "Location",
        "Statistic",
        "Tag",
        "UserOrigination",
        "AllPlayers"
      ],
      "x-ms-enum": {
        "name": "FilterName",
        "modelAsString": true
      }
    },
    "Comparison": {
      "type": "string",
      "enum": [
        "Greater",
        "Less",
        "Equals",
        "NotEquals",
        "GreaterOrEquals",
        "LessOrEquals",
        "Contains",
        "NotContains",
        "Ignore",
        "Exists"
      ],
      "x-ms-enum": {
        "name": "Comparison",
        "modelAsString": true
      }
    },
    "CloudScriptProperties": {
      "type": "object",
      "properties": {
        "triggerType": {
          "$ref": "#/definitions/CloudScriptTriggerType",
          "description": "Id of title object in PlayFab backend."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      },
      "description": "CloudScript Properties.",
      "required": [
        "triggerType"
      ],
      "discriminator": "triggerType"
    },
    "CloudScriptHttpFunctionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CloudScriptProperties"
        },
        {
          "type": "object",
          "properties": {
            "functionUrl": {
              "type": "string",
              "description": "Function URL of HTTP trigger type function."
            }
          }
        }
      ],
      "description": "CloudScriptHttpFunction Properties.",
      "required": [
        "triggerType",
        "functionUrl"
      ],
      "x-ms-discriminator-value": "HTTP"
    },
    "CloudScriptQueuedFunctionProperties": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/CloudScriptProperties"
        },
        {
          "type": "object",
          "properties": {
            "queueName": {
              "type": "string",
              "description": "Queue name of Queue trigger type function."
            },
            "connectionString": {
              "type": "string",
              "description": "Connection string of Queue trigger type function."
            }
          }
        }
      ],
      "description": "CloudScriptQueuedFunction Properties.",
      "required": [
        "triggerType",
        "queueName",
        "connectionString"
      ],
      "x-ms-discriminator-value": "Queue"
    },
    "TitleDataProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value to set for title data."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state.",
          "readOnly": true
        }
      },
      "description": "Properties of Title Data.",
      "required": [
        "value"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Creating",
        "Deleting",
        "Canceled",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "CloudScriptTriggerType": {
      "type": "string",
      "enum": [
        "HTTP",
        "Queue"
      ],
      "x-ms-enum": {
        "name": "CloudScriptTriggerType",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "playerAccountPoolName": {
      "type": "string",
      "name": "playerAccountPoolName",
      "in": "path",
      "required": true,
      "x-nullable": false,
      "description": "Resource Name",
      "x-ms-parameter-location": "method"
    },
    "playerAccountPoolResource": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ResourceOfPlayerAccountPool"
      },
      "x-nullable": false,
      "description": "Player Account Pool Request object.",
      "x-ms-parameter-location": "method"
    },
    "TitleNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "titleName",
      "in": "path",
      "required": true,
      "description": "Name of the Title Parameter.",
      "type": "string"
    },
    "titleResource": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ResourceOfTitle"
      },
      "x-nullable": false,
      "description": "Title Request object.",
      "x-ms-parameter-location": "method"
    },
    "SegmentNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "segmentName",
      "in": "path",
      "required": true,
      "description": "Name of the Segment Parameter.",
      "type": "string"
    },
    "CloudScriptNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "cloudScriptName",
      "in": "path",
      "required": true,
      "description": "CloudScript name",
      "type": "string"
    },
    "TitleDataNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "titleDataName",
      "in": "path",
      "required": true,
      "description": "Title Data name",
      "type": "string"
    },
    "PrimaryKVNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "primaryKVName",
      "in": "path",
      "required": true,
      "description": "PrimaryKV name",
      "type": "string"
    }
  }
}