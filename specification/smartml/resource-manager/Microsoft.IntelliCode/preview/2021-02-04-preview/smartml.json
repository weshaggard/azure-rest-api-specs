{
  "swagger": "2.0",
  "info": {
    "version": "2021-02-04-preview",
    "title": "SmartML",
    "description": "Microsoft IntelliCode SmartML Platform"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/experiments/{experimentName}": {
      "get": {
        "tags": [
          "ExperimentResource"
        ],
        "summary": "Gets an existing experiment resource.",
        "operationId": "Experiments_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_Get": {
            "$ref": "./examples/Experiments_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExperimentResource"
        ],
        "summary": "Creates or updates an experiment resource.",
        "operationId": "Experiments_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperimentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_CreateAdf": {
            "$ref": "./examples/Experiments_CreateAdf.json"
          },
          "Experiments_CreateBatch": {
            "$ref": "./examples/Experiments_CreateBatch.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ExperimentResource"
        ],
        "summary": "Deletes an existing experiment resource.",
        "operationId": "Experiments_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_Delete": {
            "$ref": "./examples/Experiments_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ExperimentResource"
        ],
        "summary": "Updates an experiment resource.",
        "operationId": "Experiments_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperimentUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_Update": {
            "$ref": "./examples/Experiments_Update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/experiments": {
      "get": {
        "tags": [
          "ExperimentResource"
        ],
        "summary": "Lists all the experiments within the specified instance.",
        "operationId": "Experiments_ListByInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ExperimentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_ListByInstance": {
            "$ref": "./examples/Experiments_ListByInstance.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/sandboxes/{sandboxName}/experiments/{experimentName}": {
      "get": {
        "tags": [
          "ExperimentSandboxResource"
        ],
        "summary": "Gets an existing experiment resource.",
        "operationId": "Experiments_GetInSandbox",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_GetInSandbox": {
            "$ref": "./examples/Experiments_GetInSandbox.json"
          }
        }
      },
      "put": {
        "tags": [
          "ExperimentSandboxResource"
        ],
        "summary": "Creates or updates an Experiment of the sandbox resource.",
        "operationId": "Experiments_CreateInSandbox",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperimentCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_CreateInSandbox": {
            "$ref": "./examples/Experiments_CreateInSandbox.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "ExperimentSandboxResource"
        ],
        "summary": "Deletes an existing Experiment of the Sandbox resource.",
        "operationId": "Experiments_DeleteInSandbox",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_DeleteInSandbox": {
            "$ref": "./examples/Experiments_DeleteInSandbox.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "ExperimentSandboxResource"
        ],
        "summary": "Updates an Experiment of the Sandbox resource.",
        "operationId": "Experiments_UpdateInSandbox",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "experimentName",
            "description": "The name of the experiment resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExperimentUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Experiment"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_UpdateInSandbox": {
            "$ref": "./examples/Experiments_UpdateInSandbox.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/sandboxes/{sandboxName}/experiments": {
      "get": {
        "tags": [
          "ExperimentSandboxResource"
        ],
        "summary": "Lists all the experiments within the specified sandbox.",
        "operationId": "Experiments_ListBySandbox",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/ExperimentListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Experiments_ListBySandbox": {
            "$ref": "./examples/Experiments_ListBySandbox.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}": {
      "get": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Gets an existing instance of the resource.",
        "operationId": "Instances_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Get": {
            "$ref": "./examples/Instances_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Creates or updates an instance of the resource.",
        "operationId": "Instances_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Create": {
            "$ref": "./examples/Instances_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Deletes an existing instance of the resource.",
        "operationId": "Instances_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Delete": {
            "$ref": "./examples/Instances_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Updates an instance of the resource.",
        "operationId": "Instances_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_Update": {
            "$ref": "./examples/Instances_Update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances": {
      "get": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Lists all the instances under the specified resource group.",
        "operationId": "Instances_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_ListByResourceGroup": {
            "$ref": "./examples/Instances_ListByResourceGroup.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IntelliCode/instances": {
      "get": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Lists all the instances under the specified subscription.",
        "operationId": "Instances_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_List": {
            "$ref": "./examples/Instances_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/swap": {
      "post": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Endpoint to swap the active and inactive resources.",
        "operationId": "Instances_SwapSlot",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_SwapSlot": {
            "$ref": "./examples/Instances_SwapSlot.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/config": {
      "get": {
        "tags": [
          "InstanceResource"
        ],
        "summary": "Endpoint to get the configuration for a SmartML instance",
        "operationId": "Instances_GetConfiguration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Instances_GetConfiguration": {
            "$ref": "./examples/Instances_GetConfiguration.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/notebookVMs/{notebookVMName}": {
      "get": {
        "tags": [
          "NotebookVMResource"
        ],
        "summary": "Gets an existing Notebook VM resource.",
        "operationId": "NotebookVMs_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notebookVMName",
            "description": "The name of the notebookVM resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookVM"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotebookVMs_Get": {
            "$ref": "./examples/NotebookVMs_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "NotebookVMResource"
        ],
        "summary": "Creates or updates an instance of the resource.",
        "operationId": "NotebookVMs_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notebookVMName",
            "description": "The name of the notebookVM resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotebookVMCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookVM"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NotebookVM"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotebookVMs_Create": {
            "$ref": "./examples/NotebookVMs_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "NotebookVMResource"
        ],
        "summary": "Deletes an existing instance of the resource.",
        "operationId": "NotebookVMs_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notebookVMName",
            "description": "The name of the notebookVM resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotebookVMs_Delete": {
            "$ref": "./examples/NotebookVMs_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "NotebookVMResource"
        ],
        "summary": "Updates an instance of the resource.",
        "operationId": "NotebookVMs_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "notebookVMName",
            "description": "The name of the notebookVM resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotebookVMUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NotebookVM"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/NotebookVM"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotebookVMs_Update": {
            "$ref": "./examples/NotebookVMs_Update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/notebookVMs": {
      "get": {
        "tags": [
          "NotebookVMResource"
        ],
        "summary": "Lists all the Notebook VM within the specified instance.",
        "operationId": "NotebookVMs_ListByInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/NotebookVMListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "NotebookVMs_ListByInstance": {
            "$ref": "./examples/NotebookVMs_ListByInstance.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.IntelliCode/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Retrieves a list of available API operations under this Resource Provider.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; response contains the list of operations under Microsoft.IntelliCode resource provider.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/sandboxes/{sandboxName}": {
      "get": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Gets an existing sandbox resource.",
        "operationId": "Sandboxes_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Sandbox"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_Get": {
            "$ref": "./examples/Sandboxes_Get.json"
          }
        }
      },
      "put": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Creates or updates a sandbox of an instance resource.",
        "operationId": "Sandboxes_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/Sandbox"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Sandbox"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_Create": {
            "$ref": "./examples/Sandboxes_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Deletes an existing instance of the resource.",
        "operationId": "Sandboxes_Delete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly."
          },
          "202": {
            "description": "The request was successful; the operation will complete asynchronously."
          },
          "204": {
            "description": "No Content - the specified resource was not found."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_Delete": {
            "$ref": "./examples/Sandboxes_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Updates an instance of the resource.",
        "operationId": "Sandboxes_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The properties of the resource.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SandboxUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Sandbox"
            }
          },
          "201": {
            "description": "The request was successful; the operation will complete asynchronously.",
            "schema": {
              "$ref": "#/definitions/Sandbox"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_Update": {
            "$ref": "./examples/Sandboxes_Update.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/sandboxes": {
      "get": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Lists all the sandboxes within the specified instance.",
        "operationId": "Sandboxes_ListByInstance",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "$ref": "#/definitions/SandboxListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_ListByInstance": {
            "$ref": "./examples/Sandboxes_ListByInstance.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IntelliCode/instances/{instanceName}/sandboxes/{sandboxName}/config": {
      "get": {
        "tags": [
          "SandboxResource"
        ],
        "summary": "Endpoint to get the configuration for a SmartML sandbox.",
        "operationId": "Sandboxes_GetConfiguration",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "instanceName",
            "description": "The name of the instance resource.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "sandboxName",
            "description": "The name of the sandbox resource.",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request was successful; the request was well-formed and received properly.",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Sandboxes_GetConfiguration": {
            "$ref": "./examples/Sandboxes_GetConfiguration.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AdfPipeline": {
      "description": "Represents the definition of an Azure Data Factory pipeline.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the pipeline. Max of 140 characters, must start with letter, number, or underscore and not contain\r\n\".\", \"+\", \"?\", \"/\", \"<\", \">\", \"*\", \"%\", \"&\", \":\", \"\\\"",
          "type": "string"
        },
        "properties": {
          "description": "Represents the definition of properties of a ResourceProvider.API.Models.Experiment.AdfPipelineProperties.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Optional list of tags associated with the pipeline.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "activities": {
              "description": "One or more Activities that make up the pipeline.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/data-factory/concepts-pipelines-activities#pipeline-json\" />",
              "type": "array",
              "items": {}
            },
            "concurrency": {
              "format": "int32",
              "description": "Optional maximum number of concurrent runs the pipeline can have. By default, there is no maximum. If the concurrency limit is reached,\r\nadditional pipeline runs will be queued until earlier ones complete.",
              "type": "integer"
            },
            "description": {
              "description": "Optional text describing what the pipeline does.",
              "type": "string"
            },
            "parameters": {
              "description": "Any pipeline specific ARM parameters following key-value pair format from templates.",
              "type": "object",
              "additionalProperties": {}
            },
            "variables": {
              "description": "Any pipeline specific ARM variables following key-value pair format from templates.",
              "type": "object",
              "additionalProperties": {}
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "AdfPipelineReference": {
      "description": "Represents a definition identifying the ADF pipeline associated with a ResourceProvider.API.Models.Experiment.DataType.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets the name of the ADF Pipeline that produces this data type.",
          "type": "string"
        },
        "inputName": {
          "description": "The name of the input parameter of the ADF pipeline.",
          "type": "string"
        }
      }
    },
    "BatchJob": {
      "description": "Represents the definition of a stateless experiment.",
      "type": "object",
      "properties": {
        "command": {
          "description": "The command to run when tasks are executed for the associated stateless experiment job.",
          "type": "string"
        }
      }
    },
    "DataType": {
      "description": "Represents a definition of a DataType",
      "type": "object",
      "properties": {
        "dataFamilyId": {
          "description": "Gets the id of this data family.",
          "type": "string"
        },
        "descriptors": {
          "description": "A collection of descriptors that can describe inventory items of this type.\r\nThe collection can also include a friendly name for the main descriptor which can be used as an alternative in Get operations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "friendlyDescriptorName": {
          "description": "The friendly name of the main descriptor that can be used in Get operations instead of a descriptor that can be hard to know.",
          "type": "string"
        },
        "adfPipelineReference": {
          "description": "The specification of the ADF pipeline that produces the ResourceProvider.API.Models.Experiment.DataType.",
          "allOf": [
            {
              "$ref": "#/definitions/AdfPipelineReference"
            }
          ]
        },
        "mainDescriptor": {
          "description": "Gets the main descriptor of this data family.",
          "type": "string"
        },
        "name": {
          "description": "Gets the name of the data type.",
          "type": "string"
        }
      }
    },
    "ErrorDetail": {
      "description": "Represents the details of an error response for RPaaS.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the error code.",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "Represents the error responses for RPaaS operations.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Gets or sets the error details.",
          "allOf": [
            {
              "$ref": "#/definitions/ErrorDetail"
            }
          ]
        },
        "status": {
          "description": "Gets or sets the status of the request.",
          "type": "string"
        }
      }
    },
    "Experiment": {
      "description": "Represents the definition of an instance of an ResourceProvider.API.Models.Experiment.Experiment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Represents the definition of properties of a ResourceProvider.API.Models.Experiment.Experiment.",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/ExperimentMetadataNotifiableResourcePropertiesBase"
            }
          ],
          "properties": {
            "dataTypes": {
              "description": "The collection of ResourceProvider.API.Models.Experiment.DataType.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataType"
              }
            },
            "pipelineInfo": {
              "description": "The ResourceProvider.API.Models.Experiment.AdfPipeline information.",
              "allOf": [
                {
                  "$ref": "#/definitions/AdfPipeline"
                }
              ]
            },
            "batchJobInfo": {
              "description": "The ResourceProvider.API.Models.Experiment.BatchJob.",
              "allOf": [
                {
                  "$ref": "#/definitions/BatchJob"
                }
              ]
            },
            "machinePools": {
              "description": "The Batch VM Pools the experiment will create and use. There must be at least one.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachinePool"
              }
            },
            "existingPoolIds": {
              "description": "The ids of the existing Batch VM Pools the experiment will use. The experiment either\r\ncreates its own pools with definitions and/or reuses existing ones. For existing pools, the experiment is not\r\nallowed to change the pool definition as it's shared and changing the pool's definition like OS, Scale, and Applications\r\ncould cause implications to other experiments.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "ExperimentCreateRequest": {
      "description": "An experiment definition to create a ResourceProvider.API.Models.Experiment.Experiment.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LocationResourceRequest"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties the experiment will be created with.",
          "allOf": [
            {
              "$ref": "#/definitions/ExperimentRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        }
      }
    },
    "ExperimentListResult": {
      "description": "The result of a request to list a resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resources. Since this list may be incomplete, the nextLink field should be used to request the next list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Experiment"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list.",
          "type": "string"
        }
      }
    },
    "ExperimentMetadataNotifiableResourcePropertiesBase": {
      "description": "Represents the base properties of all Azure resource properties that include emails for notification.",
      "type": "object",
      "properties": {
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Gets or sets the resource's the current state.",
          "enum": [
            "Accepted",
            "Canceled",
            "Creating",
            "Deleting",
            "Failed",
            "Succeeded",
            "Swapping",
            "Updating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "ExperimentRequestProperties": {
      "description": "Represents the definition of properties of a ResourceProvider.API.Models.Experiment.ExperimentRequestProperties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NotifiableRequestPropertiesBase"
        }
      ],
      "properties": {
        "dataTypes": {
          "description": "The collection of ResourceProvider.API.Models.Experiment.DataType.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataType"
          }
        },
        "pipelineInfo": {
          "description": "The ResourceProvider.API.Models.Experiment.AdfPipeline information.",
          "allOf": [
            {
              "$ref": "#/definitions/AdfPipeline"
            }
          ]
        },
        "batchJobInfo": {
          "description": "The ResourceProvider.API.Models.Experiment.BatchJob.",
          "allOf": [
            {
              "$ref": "#/definitions/BatchJob"
            }
          ]
        },
        "machinePools": {
          "description": "Gets or sets the Batch VM Pools the experiment will create and use. There must be at least one.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachinePool"
          }
        },
        "existingPoolIds": {
          "description": "Gets or sets the ids of the existing Batch VM Pools the experiment will use. The experiment either\r\ncreates its own pools with definitions and/or reuses existing ones. For existing pools, the experiment is not\r\nallowed to change the pool definition as it's shared and changing the pool's definition like OS, Scale, and Applications\r\ncould cause implications to other experiments.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExperimentUpdateRequest": {
      "description": "Represents the definition of an updated experiment definition for a ResourceProvider.API.Models.Experiment.Experiment containing\r\nonly the properties that can be modified on an existing Experiment.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties the experiment will be updated with.",
          "allOf": [
            {
              "$ref": "#/definitions/ExperimentRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The tags for the experiment.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Instance": {
      "description": "Represents the definition of an instance of a ResourceProvider.API.Models.Instance.Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Represents the definition of properties of a ResourceProvider.API.Models.Instance.InstanceProperties.",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/InstanceMetadataInstancePermissionsTopLevelResourcePropertiesBase"
            }
          ],
          "properties": {
            "apiTier": {
              "description": "The ResourceProvider.API.Models.Instance.InstanceProperties.ApiTier needed for this instance's expected workload. Default is ResourceProvider.API.Models.ApiTier.S1.",
              "enum": [
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2",
                "P1v3",
                "P2v3",
                "P3v3"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ApiTier",
                "modelAsString": true
              }
            },
            "machinePools": {
              "description": "The Batch VM Pools the instance will contain. There must be at least one.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachinePool"
              }
            },
            "enableAzureMachineLearning": {
              "description": "Indicates if the creation of an AML resource should be included in the instance. Default is true.",
              "type": "boolean"
            },
            "enableNotebooks": {
              "description": "A value that indicates if this instance should support Azure Notebooks. Default is false.",
              "type": "boolean"
            },
            "hostname": {
              "description": "The shared SSL Hostname for the instance, if any. Must only include root of hostname and it must be a subdomain of *.smltenant.microsoft.com.",
              "type": "string"
            },
            "authJwtAudiences": {
              "description": "The audiences allowed to make requests for user based auth. Multiple values are allowed by separating them with ','.",
              "type": "string"
            },
            "trafficManager": {
              "description": "The Traffic Manager resource associated with the ResourceProvider.API.Models.Instance.Instance.",
              "allOf": [
                {
                  "$ref": "#/definitions/TrafficManagerSettings"
                }
              ]
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "InstanceCreateRequest": {
      "description": "An instance definition to create a ResourceProvider.API.Models.Instance.Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LocationResourceRequest"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties the instance will be created with.",
          "allOf": [
            {
              "$ref": "#/definitions/InstanceRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        },
        "skipUniqueNameGeneration": {
          "description": "Indicates if resource name should be used as-is instead of generating a unique suffix.",
          "type": "boolean"
        }
      }
    },
    "InstanceListResult": {
      "description": "The result of a request to list a resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resources. Since this list may be incomplete, the nextLink field should be used to request the next list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list.",
          "type": "string"
        }
      }
    },
    "InstanceMetadataInstancePermissionsTopLevelResourcePropertiesBase": {
      "description": "Represents the base properties of all Azure resource properties that are at the top level resource type.",
      "type": "object",
      "properties": {
        "resourceConfiguration": {
          "description": "A collection of configuration values that are available to consume in the resources.\r\nIn an update, the values are not remembered from so they should be included every time.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityGroupPermissions": {
          "description": "The permissions granted to security groups.",
          "allOf": [
            {
              "$ref": "#/definitions/InstancePermissions"
            }
          ],
          "x-ms-client-flatten": true
        },
        "servicePrincipalPermissions": {
          "description": "The permissions granted to service principals.",
          "allOf": [
            {
              "$ref": "#/definitions/InstancePermissions"
            }
          ],
          "x-ms-client-flatten": true
        },
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Gets or sets the resource's the current state.",
          "enum": [
            "Accepted",
            "Canceled",
            "Creating",
            "Deleting",
            "Failed",
            "Succeeded",
            "Swapping",
            "Updating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "InstancePermissions": {
      "description": "Represents the permissions that can be granted in a ResourceProvider.API.Models.Instance.Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/ResourcePermissions"
        }
      ],
      "properties": {
        "appServiceCallers": {
          "description": "The principal ids to grant access to call instance app service.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InstancePermissionsTopLevelRequestPropertiesBase": {
      "description": "Represents the definition of properties in a request.",
      "type": "object",
      "properties": {
        "resourceConfiguration": {
          "description": "A collection of configuration values that are available to consume in the resources.\r\nIn an update, the values are not remembered from so they should be included every time.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityGroupPermissions": {
          "description": "The permissions granted to security groups.",
          "allOf": [
            {
              "$ref": "#/definitions/InstancePermissions"
            }
          ],
          "x-ms-client-flatten": true
        },
        "servicePrincipalPermissions": {
          "description": "The permissions granted to service principals.",
          "allOf": [
            {
              "$ref": "#/definitions/InstancePermissions"
            }
          ],
          "x-ms-client-flatten": true
        },
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "InstanceRequestProperties": {
      "description": "Represents the definition of properties of a ResourceProvider.API.Models.Instance.InstanceProperties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/InstancePermissionsTopLevelRequestPropertiesBase"
        }
      ],
      "properties": {
        "apiTier": {
          "description": "Gets or sets the ResourceProvider.API.Models.Instance.InstanceRequestProperties.ApiTier needed for this instance's expected workload. Default is ResourceProvider.API.Models.ApiTier.S1.",
          "enum": [
            "S1",
            "S2",
            "S3",
            "P1v2",
            "P2v2",
            "P3v2",
            "P1v3",
            "P2v3",
            "P3v3"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ApiTier",
            "modelAsString": true
          }
        },
        "machinePools": {
          "description": "Gets or sets the Batch VM Pools the instance will contain. There must be at least one.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachinePool"
          }
        },
        "enableAzureMachineLearning": {
          "description": "Indicates if the creation of an AML resource should be included in the instance. Default is true.",
          "type": "boolean"
        },
        "enableDatabricks": {
          "description": "Gets or sets a value that indicates if this instance should support Azure Databricks. Default is false.",
          "type": "boolean"
        },
        "enableNotebooks": {
          "description": "Gets or sets a value that indicates if this instance should support Azure Notebooks. Default is false.",
          "type": "boolean"
        },
        "hostname": {
          "description": "The shared SSL Hostname for the instance, if any. Must only include root of hostname and it must be a subdomain of *.smltenant.microsoft.com.",
          "type": "string"
        },
        "authJwtAudiences": {
          "description": "The audiences allowed to make requests for user based auth. Multiple values are allowed by separating them with ','.",
          "type": "string"
        },
        "trafficManager": {
          "description": "The Traffic Manager resource associated with the ResourceProvider.API.Models.Instance.Instance.",
          "allOf": [
            {
              "$ref": "#/definitions/TrafficManagerSettings"
            }
          ]
        }
      }
    },
    "InstanceUpdateRequest": {
      "description": "Represents the definition of an updated instance definition for a ResourceProvider.API.Models.Instance.Instance containing\r\nonly the properties that can be modified on an existing Instance.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties the instance will be updated with.",
          "allOf": [
            {
              "$ref": "#/definitions/InstanceRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The tags for the instance.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LocationResourceRequest": {
      "description": "A definition for the request that must specify the location.",
      "type": "object",
      "properties": {
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        }
      }
    },
    "MachinePool": {
      "description": "Represents the definition of a Batch VM Pool for an instance.",
      "type": "object",
      "properties": {
        "apps": {
          "description": "Gets or sets the ResourceProvider.API.Models.MachinePools.MachinePoolApp to install into the pool.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachinePoolApp"
          }
        },
        "name": {
          "description": "Gets or sets the  name of the VM Pool.",
          "type": "string"
        },
        "scale": {
          "description": "Represents the definition of the Scale strategy for a Batch VM Pool.",
          "type": "object",
          "properties": {
            "dedicatedNodeCount": {
              "format": "int32",
              "description": "Gets or sets the number of nodes to have in the VM Pool when configured to use ResourceProvider.API.Models.MachinePools.MachinePoolScaleMode.Fixed scaling.",
              "type": "integer"
            },
            "evaluationPeriodMinutes": {
              "format": "int32",
              "description": "Gets or sets the number of minutes to wait before evaluating the scaling formula when configured to use ResourceProvider.API.Models.MachinePools.MachinePoolScaleMode.Auto scaling.",
              "type": "integer"
            },
            "formula": {
              "description": "Gets or sets the scaling formula to use when configured to use ResourceProvider.API.Models.MachinePools.MachinePoolScaleMode.Auto scaling.",
              "type": "string"
            },
            "mode": {
              "description": "Gets or sets the kind of scaling the VM Pool instance will use.",
              "enum": [
                "Auto",
                "Fixed"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MachinePoolScaleMode",
                "modelAsString": true
              }
            }
          }
        },
        "vmOsType": {
          "description": "Gets or sets the OS to be used in the Pool. Default is ResourceProvider.API.OsType.Windows",
          "enum": [
            "Windows",
            "Linux"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OsType",
            "modelAsString": true
          }
        },
        "type": {
          "description": "Gets or sets the type of the Pool. Default is ResourceProvider.API.Models.MachinePools.MachinePoolType.Shared",
          "enum": [
            "Shared",
            "Experiment"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MachinePoolType",
            "modelAsString": true
          }
        },
        "vmSize": {
          "description": "Gets or sets the size of the VM to be used in the Pool. Default is ResourceProvider.API.Models.MachinePools.MachinePoolVmSize.STANDARD_A2.",
          "enum": [
            "STANDARD_A2",
            "STANDARD_A2_V2",
            "STANDARD_D4_V3",
            "STANDARD_F4S_V2",
            "STANDARD_NC24",
            "STANDARD_DS15_V2",
            "STANDARD_G5",
            "STANDARD_D48DS_V4"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MachinePoolVmSize",
            "modelAsString": true
          }
        },
        "maxTasksPerNode": {
          "format": "int32",
          "description": "Gets or sets the maximum number of parallel tasks to run on a node.",
          "type": "integer"
        }
      }
    },
    "MachinePoolApp": {
      "description": "Represents the definition of a 3rd Party app that can be installed into a Batch VM Pool.",
      "type": "object",
      "properties": {
        "fileName": {
          "description": "Gets the name of the file for the application.",
          "type": "string",
          "readOnly": true
        },
        "format": {
          "description": "Gets or sets the format of the app within the store. Optional, defaults to zip.",
          "type": "string"
        },
        "hasStartTask": {
          "description": "Gets or sets a value indicating if this app contains a start task to include in the VM Pool.",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the name of the app within the store.",
          "type": "string"
        },
        "store": {
          "description": "Gets or sets the name of the store in the RP that contains the specified app.",
          "type": "string"
        }
      }
    },
    "NotebookVM": {
      "description": "Represents the definition of an instance of a ResourceProvider.API.Models.NotebookVM.NotebookVM containing the information about\r\nthis resource and it's dependencies.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Represents the definition of properties of a ResourceProvider.API.Models.NotebookVM.NotebookVM.",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/NotebookVMMetadataNotifiableResourcePropertiesBase"
            }
          ],
          "properties": {
            "vmSize": {
              "description": "The size of the VM to be used. Default is ResourceProvider.API.Models.MachinePools.MachinePoolVmSize.STANDARD_A2.",
              "enum": [
                "STANDARD_A2",
                "STANDARD_A2_V2",
                "STANDARD_D4_V3",
                "STANDARD_F4S_V2",
                "STANDARD_NC24",
                "STANDARD_DS15_V2",
                "STANDARD_G5",
                "STANDARD_D48DS_V4"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MachinePoolVmSize",
                "modelAsString": true
              }
            },
            "vmUserName": {
              "description": "The admin username of the VM and name of the keyvault secret for the password to that account",
              "type": "string"
            },
            "vmSshKeyName": {
              "description": "The name of the key vault secret for the SSH private key of the VM",
              "type": "string"
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "NotebookVMCreateRequest": {
      "description": "An instance definition to create a N:ResourceProvider.API.Models.Sandbox.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties the instance will be created with.",
          "allOf": [
            {
              "$ref": "#/definitions/NotebookVMRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        }
      }
    },
    "NotebookVMListResult": {
      "description": "The result of a request to list a resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resources. Since this list may be incomplete, the nextLink field should be used to request the next list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotebookVM"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list.",
          "type": "string"
        }
      }
    },
    "NotebookVMMetadataNotifiableResourcePropertiesBase": {
      "description": "Represents the base properties of all Azure resource properties that include emails for notification.",
      "type": "object",
      "properties": {
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Gets or sets the resource's the current state.",
          "enum": [
            "Accepted",
            "Canceled",
            "Creating",
            "Deleting",
            "Failed",
            "Succeeded",
            "Swapping",
            "Updating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "NotebookVMRequestProperties": {
      "description": "Represents the definition of the properties of a Notebook VM.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NotifiableRequestPropertiesBase"
        }
      ],
      "properties": {
        "vmSize": {
          "description": "The size of the VM to be used. Default is ResourceProvider.API.Models.MachinePools.MachinePoolVmSize.STANDARD_A2.",
          "enum": [
            "STANDARD_A2",
            "STANDARD_A2_V2",
            "STANDARD_D4_V3",
            "STANDARD_F4S_V2",
            "STANDARD_NC24",
            "STANDARD_DS15_V2",
            "STANDARD_G5",
            "STANDARD_D48DS_V4"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MachinePoolVmSize",
            "modelAsString": true
          }
        },
        "vmUserName": {
          "description": "The admin username of the VM and name of the keyvault secret for the password to that account",
          "type": "string"
        },
        "vmSshKeyName": {
          "description": "The name of the key vault secret for the SSH private key of the VM",
          "type": "string"
        }
      }
    },
    "NotebookVMUpdateRequest": {
      "description": "Represents the definition of an updated instance definition for a N:ResourceProvider.API.Models.Sandbox containing\r\nonly the properties that can be modified on an existing Instance.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties the instance will be updated with.",
          "allOf": [
            {
              "$ref": "#/definitions/NotebookVMRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The tags for the instance.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NotifiableRequestPropertiesBase": {
      "description": "Represents the definition of properties in a request.",
      "type": "object",
      "properties": {
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "description": "Represents the base properties of all Azure resources.",
      "required": [
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "name": {
          "description": "The name of the resource.",
          "type": "string",
          "readOnly": true
        },
        "systemData": {
          "description": "Metadata pertaining to creation and last modification of the resource.",
          "allOf": [
            {
              "$ref": "#/definitions/SystemData"
            }
          ],
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "A list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups).\r\nMax Tag Count: 10\r\nMax Key Length: 128\r\nMax Value Length: 256",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourcePermissions": {
      "description": "Represents the permissions that can be granted in the resource.",
      "type": "object",
      "properties": {
        "blobContributors": {
          "description": "The object ids to grant contributor access to public and internal blob data.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blobReaders": {
          "description": "The object ids to grant read access to public and internal blob data.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretsGetters": {
          "description": "The object ids to grant access to get keyvault secrets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceProviderOperationDefinition": {
      "description": "Describes the Resource Provider Operation.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource provider operation name.",
          "type": "string"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is a data action.",
          "type": "boolean"
        },
        "actionType": {
          "description": "Indicates the action type.",
          "type": "string"
        },
        "origin": {
          "description": "Origin of the operation.",
          "type": "string"
        },
        "display": {
          "description": "Resource provider display properties.",
          "allOf": [
            {
              "$ref": "#/definitions/ResourceProviderOperationDisplay"
            }
          ]
        }
      }
    },
    "ResourceProviderOperationDisplay": {
      "description": "Describes the properties of the Operation.",
      "type": "object",
      "properties": {
        "provider": {
          "description": "Name of the resource provider.",
          "type": "string"
        },
        "resource": {
          "description": "Name of the resource type.",
          "type": "string"
        },
        "operation": {
          "description": "Name of the resource provider operation.",
          "type": "string"
        },
        "description": {
          "description": "Description of the resource provider operation.",
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "description": "List containing this Resource Provider's available operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Resource provider operations list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperationDefinition"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next page for list of Azure operations.",
          "type": "string"
        }
      }
    },
    "Sandbox": {
      "description": "Represents the definition of an instance of a ResourceProvider.API.Models.Sandbox.Sandbox.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Represents the definition of properties of a ResourceProvider.API.Models.Sandbox.Sandbox.",
          "type": "object",
          "allOf": [
            {
              "$ref": "#/definitions/SandboxMetadataNotifiableResourcePropertiesBase"
            }
          ],
          "properties": {
            "machinePools": {
              "description": "The Batch VM Pools the sandbox will contain. There must be at least one.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MachinePool"
              }
            }
          },
          "x-ms-client-flatten": true
        }
      }
    },
    "SandboxCreateRequest": {
      "description": "An instance definition to create a ResourceProvider.API.Models.Sandbox.Sandbox.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/LocationResourceRequest"
        }
      ],
      "properties": {
        "properties": {
          "description": "The properties the instance will be created with.",
          "allOf": [
            {
              "$ref": "#/definitions/SandboxRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        }
      }
    },
    "SandboxListResult": {
      "description": "The result of a request to list a resource.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resources. Since this list may be incomplete, the nextLink field should be used to request the next list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sandbox"
          }
        },
        "nextLink": {
          "description": "The URI that can be used to request the next list.",
          "type": "string"
        }
      }
    },
    "SandboxMetadataNotifiableResourcePropertiesBase": {
      "description": "Represents the base properties of all Azure resource properties that include emails for notification.",
      "type": "object",
      "properties": {
        "notificationEmails": {
          "description": "List of notification emails for the resource.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "description": "Gets or sets the resource's the current state.",
          "enum": [
            "Accepted",
            "Canceled",
            "Creating",
            "Deleting",
            "Failed",
            "Succeeded",
            "Swapping",
            "Updating"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ResourceProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "SandboxRequestProperties": {
      "description": "Represents the definition of properties of a ResourceProvider.API.Models.Sandbox.SandboxProperties.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NotifiableRequestPropertiesBase"
        }
      ],
      "properties": {
        "machinePools": {
          "description": "Gets or sets the Batch VM Pools the instance will contain. There must be at least one.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MachinePool"
          }
        }
      }
    },
    "SandboxUpdateRequest": {
      "description": "Represents the definition of an updated instance definition for a ResourceProvider.API.Models.Sandbox.Sandbox containing\r\nonly the properties that can be modified on an existing Instance.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "The properties the instance will be updated with.",
          "allOf": [
            {
              "$ref": "#/definitions/SandboxRequestProperties"
            }
          ],
          "x-ms-client-flatten": true
        },
        "tags": {
          "description": "The tags for the instance.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "SystemData": {
      "description": "Read only metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "properties": {
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string"
        },
        "createdByType": {
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CreatedByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC).",
          "type": "string"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "CreatedByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC).",
          "type": "string"
        }
      }
    },
    "TopLevelRequestPropertiesBase`1": {
      "description": "Represents the definition of properties in a request.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/NotifiableRequestPropertiesBase"
        }
      ],
      "properties": {
        "resourceConfiguration": {
          "description": "A collection of configuration values that are available to consume in the resources.\r\nIn an update, the values are not remembered from so they should be included every time.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "securityGroupPermissions": {
          "description": "The permissions granted to security groups.",
          "allOf": [
            {
              "$ref": "#/definitions/TPermissionInRequest"
            }
          ],
          "x-ms-client-flatten": true
        },
        "servicePrincipalPermissions": {
          "description": "The permissions granted to service principals.",
          "allOf": [
            {
              "$ref": "#/definitions/TPermissionInRequest"
            }
          ],
          "x-ms-client-flatten": true
        }
      }
    },
    "TPermissionInRequest": {
      "type": "object",
      "properties": {
        "blobContributors": {
          "description": "The object ids to grant contributor access to public and internal blob data.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "blobReaders": {
          "description": "The object ids to grant read access to public and internal blob data.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretsGetters": {
          "description": "The object ids to grant access to get keyvault secrets.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TrafficManagerSettings": {
      "description": "Represents the definition of a Traffic Manager resource associated with a ResourceProvider.API.Models.Instance.Instance.",
      "type": "object",
      "properties": {
        "enableEndpoint": {
          "description": "Gets or sets a value indicating if the endpoint should be enabled at the completion of deployment. Default is true.",
          "type": "boolean"
        },
        "name": {
          "description": "Gets or sets the name of the associated Traffic Manager resource.",
          "type": "string"
        },
        "globalNameOverride": {
          "description": "Override the default (Name) setting for the global auth AAD resource name for multi-TM scenarios.",
          "type": "string"
        },
        "globalApplicationName": {
          "description": "The name of the associated global authorization AAD resource name.",
          "type": "string",
          "readOnly": true
        },
        "resourceGroupName": {
          "description": "Gets or sets the resource group name of the associated Traffic Manager resource.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ApiVersionParameter": {
      "in": "query",
      "name": "api-version",
      "description": "The API version to be used with the HTTP request.",
      "required": true,
      "type": "string"
    },
    "SubscriptionIdParameter": {
      "in": "path",
      "name": "subscriptionId",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000).",
      "required": true,
      "type": "string"
    },
    "ResourceGroupNameParameter": {
      "in": "path",
      "name": "resourceGroupName",
      "description": "The name of the resource group.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
