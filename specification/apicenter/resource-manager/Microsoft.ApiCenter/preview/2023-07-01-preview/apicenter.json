{
  "swagger": "2.0",
  "info": {
    "title": "Azure API Center",
    "version": "2023-07-01-preview",
    "description": "Azure API Center Resource Provider."
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Services"
    }
  ],
  "paths": {
    "/providers/Microsoft.ApiCenter/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "tags": [
          "Service"
        ],
        "operationId": "Services_ListBySubscription",
        "description": "Lists services within an Azure subscription.",
        "x-ms-examples": {
          "Services_ListBySubscription": {
            "$ref": "./examples/Services_ListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The service list.",
            "schema": {
              "$ref": "#/definitions/ServiceCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_ListByResourceGroup",
        "description": "Lists services within a resource group",
        "x-ms-examples": {
          "Services_ListByResourceGroup": {
            "$ref": "./examples/Services_ListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ServiceCollection"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}": {
      "get": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Get",
        "description": "Get service",
        "x-ms-examples": {
          "Services_Get": {
            "$ref": "./examples/Services_Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_CreateOrUpdate",
        "description": "Create or update service",
        "x-ms-examples": {
          "Services_Create": {
            "$ref": "./examples/Services_CreateOrUpdate.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceName"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "The service entity.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully updated.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "201": {
            "description": "The service was successfully created.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Update",
        "description": "Update service",
        "x-ms-examples": {
          "Services_Update": {
            "$ref": "./examples/Services_Update.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceName"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The service properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ServiceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The service was successfully updated.",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Services"
        ],
        "operationId": "Services_Delete",
        "description": "Delete service",
        "x-ms-examples": {
          "Services_Delete": {
            "$ref": "./examples/Services_Delete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ServiceName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the service.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      },
      "readOnly": true
    },
    "Service": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "The resource location.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-typespec-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ServiceProperties",
          "description": "The properties of the service.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "$ref": "#/definitions/ServiceIdentity",
          "description": "The identity of the service."
        }
      },
      "description": "The service entity.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ServiceCollection": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Service"
          },
          "x-typespec-name": "Service[]",
          "description": "The Service items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-typespec-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a Service list operation.",
      "required": [
        "value"
      ]
    },
    "ServiceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation."
        }
      },
      "description": "The properties of the service."
    },
    "ServiceUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The service properties to be updated."
    },
    "ServiceIdentity": {
      "description": "The properties of the service identity.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true
          }
        },
        "principalId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The principal ID of the identity."
        },
        "tenantId": {
          "type": "string",
          "format": "uuid",
          "readOnly": true,
          "description": "The client tenant ID of the identity."
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource IDs in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/UserIdentityProperties"
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal ID of user assigned identity.",
          "type": "string"
        },
        "clientId": {
          "description": "The client ID of user assigned identity.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "ServiceName": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "description": "Service name",
      "pattern": "^[a-zA-Z0-9\\-]{1,64}$",
      "type": "string"
    }
  }
}
