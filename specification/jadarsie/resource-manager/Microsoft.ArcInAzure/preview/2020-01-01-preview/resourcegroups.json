{
  "swagger": "2.0",
  "info": {
    "title": "ArcInAzure",
    "description": "The Microsoft.ArcInAzure Rest API spec.",
    "version": "2020-01-01-preview",
    "x-ms-code-generation-settings": {
      "name": "ArcInAzureClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcInAzure/resourcegroups/{resourcegroupsName}": {
      "get": {
        "operationId": "resourcegroups_Retrieve",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourcegroupsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the resourcegroups resource.",
            "schema": {
              "$ref": "#/definitions/resourcegroups"
            }
          }
        }
      },
      "put": {
        "operationId": "resourcegroups_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourcegroupsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "resourcegroups",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/resourcegroups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the resourcegroups resource.",
            "schema": {
              "$ref": "#/definitions/resourcegroups"
            }
          },
          "201": {
            "description": "Creates the resourcegroups resource.",
            "schema": {
              "$ref": "#/definitions/resourcegroups"
            }
          }
        }
      },
      "delete": {
        "operationId": "resourcegroups_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/resourcegroupsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the resourcegroups resource."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ArcInAzure/resourcegroups": {
      "get": {
        "operationId": "resourcegroups_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all resourcegroups under the resouce group.",
            "schema": {
              "$ref": "#/definitions/resourcegroupsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ArcInAzure/resourcegroups": {
      "get": {
        "operationId": "resourcegroups_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all resourcegroups under the subscription.",
            "schema": {
              "$ref": "#/definitions/resourcegroupsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.ArcInAzure/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "resourcegroupsProperties": {
      "type": "object",
      "properties": {
        "azureName": {
          "type": "string",
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it doesn't have to be."
        },
        "managedBy": {
          "type": "string",
          "description": "ManagedBy is the management group responsible for managing this group"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are user defined key value pairs"
        },
        "provisioningState": {
          "type": "string"
        },
        "status": {
          "type": "object",
          "properties": {
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lastTransitionTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "LastTransitionTime is the last time the condition transitioned from one status to another."
                  },
                  "message": {
                    "type": "string",
                    "description": "Message is a human readable message indicating details about the transition. This field may be empty."
                  },
                  "observedGeneration": {
                    "type": "integer",
                    "format": "int64",
                    "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance."
                  },
                  "reason": {
                    "type": "string",
                    "description": "Reason for the condition's last transition. Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty."
                  },
                  "severity": {
                    "type": "string",
                    "description": "Severity with which to treat failures of this type of condition. For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False. This is omitted in all cases when Status == Unknown"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the condition, one of True, False, or Unknown."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of condition."
                  }
                },
                "required": [
                  "lastTransitionTime",
                  "reason",
                  "status",
                  "type"
                ],
                "description": "Condition defines an extension to status (an observation) of a resource"
              },
              "description": "Conditions describe the observed state of the resource"
            },
            "id": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "managedBy": {
              "type": "string",
              "description": "ManagedBy is the management group responsible for managing this group"
            },
            "name": {
              "type": "string"
            },
            "provisioningState": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags are user defined key value pairs"
            }
          }
        }
      }
    },
    "resourcegroups": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/resourcegroupsProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The resourcegroups resource definition."
    },
    "resourcegroupsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourcegroups"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Results of the request to list operations."
    },
    "ResourceProviderOperation": {
      "type": "object",
      "properties": {
        "isDataAction": {
          "type": "string",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          },
          "description": "Display metadata associated with the operation."
        }
      },
      "description": "Results of the request to list operations."
    }
  },
  "parameters": {
    "resourcegroupsNameParameter": {
      "name": "resourcegroupsName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
    }
  }
}