{
    "swagger": "2.0",
    "info": {
      "title": "Private OracleDatabase Resource Manager",
      "version": "2023-07-01-preview",
      "x-typespec-generated": [
        {
          "emitter": "@azure-tools/typespec-autorest"
        }
      ]
    },
    "schemes": [
      "https"
    ],
    "host": "management.azure.com",
    "produces": [
      "application/json"
    ],
    "consumes": [
      "application/json"
    ],
    "security": [
      {
        "azure_auth": [
          "user_impersonation"
        ]
      }
    ],
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "description": "Azure Active Directory OAuth2 Flow.",
        "flow": "implicit",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    },
    "tags": [
      {
        "name": "Operations"
      },
      {
        "name": "CloudExadataInfrastructures"
      },
      {
        "name": "CloudVmClusters"
      },
      {
        "name": "GiVersions"
      },
      {
        "name": "DbSystemShapes"
      }
    ],
    "paths": {
      "/providers/Private.OracleDatabase/operations": {
        "get": {
          "tags": [
            "Operations"
          ],
          "operationId": "Operations_List",
          "description": "List the operations for the provider",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Private.OracleDatabase/cloudExadataInfrastructures": {
        "get": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_ListBySubscription",
          "description": "List CloudExadataInfrastructure resources by subscription ID",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructureListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Private.OracleDatabase/cloudVmClusters": {
        "get": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_ListBySubscription",
          "description": "List CloudVmCluster resources by subscription ID",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudVmClusterListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Private.OracleDatabase/dbSystemShapes": {
        "get": {
          "tags": [
            "DbSystemShapes"
          ],
          "operationId": "DbSystemShapes_ListBySubscription",
          "description": "List DbSystemShape resources by subscription ID",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/DbSystemShapeListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Private.OracleDatabase/giVersions": {
        "get": {
          "tags": [
            "GiVersions"
          ],
          "operationId": "GiVersions_ListBySubscription",
          "description": "List GiVersion resources by subscription ID",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/GiVersionListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/cloudExadataInfrastructures": {
        "get": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_ListByResourceGroup",
          "description": "List CloudExadataInfrastructure resources by resource group",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructureListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/cloudExadataInfrastructures/{cloudExadataInfrastructureName}": {
        "put": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_Create",
          "description": "Create a CloudExadataInfrastructure",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudExadataInfrastructureName",
              "in": "path",
              "required": true,
              "description": "CloudExadataInfrastructure name",
              "type": "string"
            },
            {
              "name": "resource",
              "in": "body",
              "required": true,
              "description": "Resource create parameters.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructure"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructure"
              }
            },
            "201": {
              "description": "ARM create operation completed successfully.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructure"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "azure-async-operation"
          },
          "x-ms-long-running-operation": true
        },
        "get": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_Get",
          "description": "Get a CloudExadataInfrastructure",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudExadataInfrastructureName",
              "in": "path",
              "required": true,
              "description": "CloudExadataInfrastructure name",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructure"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_Update",
          "description": "Update a CloudExadataInfrastructure",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudExadataInfrastructureName",
              "in": "path",
              "required": true,
              "description": "CloudExadataInfrastructure name",
              "type": "string"
            },
            {
              "name": "properties",
              "in": "body",
              "required": true,
              "description": "The resource properties to be updated.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructureUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudExadataInfrastructure"
              }
            },
            "202": {
              "description": "Resource update request accepted.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                },
                "Location": {
                  "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                  "type": "string"
                }
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "location"
          },
          "x-ms-long-running-operation": true
        },
        "delete": {
          "tags": [
            "CloudExadataInfrastructures"
          ],
          "operationId": "CloudExadataInfrastructures_Delete",
          "description": "Delete a CloudExadataInfrastructure",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudExadataInfrastructureName",
              "in": "path",
              "required": true,
              "description": "CloudExadataInfrastructure name",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Resource deleted successfully."
            },
            "202": {
              "description": "Resource deletion accepted.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                },
                "Location": {
                  "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                  "type": "string"
                }
              }
            },
            "204": {
              "description": "Resource deleted successfully."
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "location"
          },
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/cloudVmClusters": {
        "get": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_ListByResourceGroup",
          "description": "List CloudVmCluster resources by resource group",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudVmClusterListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/cloudVmClusters/{cloudVmClusterName}": {
        "put": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_Create",
          "description": "Create a CloudVmCluster",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudVmClusterName",
              "in": "path",
              "required": true,
              "description": "CloudVmCluster name",
              "type": "string"
            },
            {
              "name": "resource",
              "in": "body",
              "required": true,
              "description": "Resource create parameters.",
              "schema": {
                "$ref": "#/definitions/CloudVmCluster"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudVmCluster"
              }
            },
            "201": {
              "description": "ARM create operation completed successfully.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "schema": {
                "$ref": "#/definitions/CloudVmCluster"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "azure-async-operation"
          },
          "x-ms-long-running-operation": true
        },
        "get": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_Get",
          "description": "Get a CloudVmCluster",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudVmClusterName",
              "in": "path",
              "required": true,
              "description": "CloudVmCluster name",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudVmCluster"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_Update",
          "description": "Update a CloudVmCluster",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudVmClusterName",
              "in": "path",
              "required": true,
              "description": "CloudVmCluster name",
              "type": "string"
            },
            {
              "name": "properties",
              "in": "body",
              "required": true,
              "description": "The resource properties to be updated.",
              "schema": {
                "$ref": "#/definitions/CloudVmClusterUpdate"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/CloudVmCluster"
              }
            },
            "202": {
              "description": "Resource update request accepted.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                },
                "Location": {
                  "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                  "type": "string"
                }
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "location"
          },
          "x-ms-long-running-operation": true
        },
        "delete": {
          "tags": [
            "CloudVmClusters"
          ],
          "operationId": "CloudVmClusters_Delete",
          "description": "Delete a CloudVmCluster",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            },
            {
              "name": "cloudVmClusterName",
              "in": "path",
              "required": true,
              "description": "CloudVmCluster name",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Resource deleted successfully."
            },
            "202": {
              "description": "Resource deletion accepted.",
              "headers": {
                "Retry-After": {
                  "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                  "type": "integer",
                  "format": "int32"
                },
                "Location": {
                  "description": "The Location header contains the URL where the status of the long running operation can be checked.",
                  "type": "string"
                }
              }
            },
            "204": {
              "description": "Resource deleted successfully."
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-long-running-operation-options": {
            "final-state-via": "location"
          },
          "x-ms-long-running-operation": true
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/dbSystemShapes": {
        "get": {
          "tags": [
            "DbSystemShapes"
          ],
          "operationId": "DbSystemShapes_ListByResourceGroup",
          "description": "List DbSystemShape resources by resource group",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/DbSystemShapeListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.OracleDatabase/giVersions": {
        "get": {
          "tags": [
            "GiVersions"
          ],
          "operationId": "GiVersions_ListByResourceGroup",
          "description": "List GiVersion resources by resource group",
          "parameters": [
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "ARM operation completed successfully.",
              "schema": {
                "$ref": "#/definitions/GiVersionListResult"
              }
            },
            "default": {
              "description": "An unexpected error response.",
              "schema": {
                "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      }
    },
    "definitions": {
      "Azure.ResourceManager.ResourceProvisioningState": {
        "type": "string",
        "description": "The provisioning state of a resource type.",
        "enum": [
          "Succeeded",
          "Failed",
          "Canceled"
        ],
        "x-ms-enum": {
          "name": "ResourceProvisioningState",
          "modelAsString": true,
          "values": [
            {
              "name": "Succeeded",
              "value": "Succeeded",
              "description": "Resource has been created."
            },
            {
              "name": "Failed",
              "value": "Failed",
              "description": "Resource creation failed."
            },
            {
              "name": "Canceled",
              "value": "Canceled",
              "description": "Resource creation was canceled."
            }
          ]
        }
      },
      "CloudExadataInfrastructure": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/CloudExadataInfrastructureProperties",
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true,
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "description": "CloudExadataInfrastructure resource definition",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
          }
        ]
      },
      "CloudExadataInfrastructureId": {
        "type": "string",
        "description": "A type definition that refers the id to an ARM resource.",
        "format": "arm-id",
        "x-ms-arm-id-details": {
          "allowedResources": [
            {
              "type": "Private.OracleDatabase/cloudExadataInfrastructures"
            }
          ]
        }
      },
      "CloudExadataInfrastructureListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            },
            "description": "The CloudExadataInfrastructure items on this page",
            "x-typespec-name": "CloudExadataInfrastructure[]"
          },
          "nextLink": {
            "type": "string",
            "format": "uri",
            "description": "The link to the next page of items",
            "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
          }
        },
        "description": "The response of a CloudExadataInfrastructure list operation.",
        "required": [
          "value"
        ]
      },
      "CloudExadataInfrastructureProperties": {
        "type": "object",
        "properties": {
          "freeformTags": {
            "type": "string",
            "description": "Free-form tags for this resource.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "storageCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of storage servers for the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "computeCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of compute servers for the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "availableStorageSizeInGbs": {
            "type": "integer",
            "format": "int32",
            "description": "The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
            "readOnly": true
          },
          "displayName": {
            "type": "string",
            "description": "The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "timeCreated": {
            "type": "string",
            "description": "The date and time the cloud Exadata infrastructure resource was created.",
            "readOnly": true
          },
          "shape": {
            "type": "string",
            "description": "The model name of the cloud Exadata infrastructure resource. ",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "ocid": {
            "type": "string",
            "description": "The [OCID](/Content/General/Concepts/identifiers.htm) of the resource.",
            "readOnly": true
          },
          "customerContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerContact"
            },
            "x-ms-identifiers": [],
            "description": "The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
            "x-typespec-name": "CustomerContact[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the asynchronous operation being performed.",
            "readOnly": true
          },
          "maintenanceWindow": {
            "$ref": "#/definitions/MaintenanceWindow",
            "description": "maintenanceWindow property",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "lifecycleState": {
            "type": "string",
            "description": "The current lifecycle state of the cloud Exadata infrastructure resource.",
            "readOnly": true
          },
          "lifecycleDetails": {
            "type": "string",
            "description": "Additional information about the current lifecycle state.",
            "readOnly": true
          },
          "totalStorageSizeInGbs": {
            "type": "integer",
            "format": "int32",
            "description": "The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
            "readOnly": true
          },
          "provisioningState": {
            "$ref": "#/definitions/CloudExadataInfrastructureProvisioningState",
            "description": "The status of the last operation.",
            "readOnly": true
          }
        },
        "description": "CloudExadataInfrastructure resource model",
        "required": [
          "displayName",
          "shape",
          "lifecycleState"
        ]
      },
      "CloudExadataInfrastructureProvisioningState": {
        "type": "string",
        "description": "The provisioning state of a CloudExadataInfrastructure resource.",
        "enum": [
          "Succeeded",
          "Failed",
          "Canceled",
          "Provisioning",
          "Available",
          "Updating",
          "Terminating",
          "Terminated",
          "MaintenanceInProgress"
        ],
        "x-ms-enum": {
          "name": "CloudExadataInfrastructureProvisioningState",
          "modelAsString": true,
          "values": [
            {
              "name": "Succeeded",
              "value": "Succeeded",
              "description": "Resource has been created."
            },
            {
              "name": "Failed",
              "value": "Failed",
              "description": "Resource creation failed."
            },
            {
              "name": "Canceled",
              "value": "Canceled",
              "description": "Resource creation was canceled."
            },
            {
              "name": "Provisioning",
              "value": "Provisioning",
              "description": "Provisioning"
            },
            {
              "name": "Available",
              "value": "Available",
              "description": "Available"
            },
            {
              "name": "Updating",
              "value": "Updating",
              "description": "Updating"
            },
            {
              "name": "Terminating",
              "value": "Terminating",
              "description": "Terminating"
            },
            {
              "name": "Terminated",
              "value": "Terminated",
              "description": "Terminated"
            },
            {
              "name": "MaintenanceInProgress",
              "value": "MaintenanceInProgress",
              "description": "MaintenanceInProgress"
            }
          ]
        }
      },
      "CloudExadataInfrastructureUpdate": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "x-typespec-name": "Record<string>"
          },
          "properties": {
            "$ref": "#/definitions/CloudExadataInfrastructureUpdateProperties",
            "x-ms-client-flatten": true
          }
        },
        "description": "The type used for update operations of the CloudExadataInfrastructure."
      },
      "CloudExadataInfrastructureUpdateProperties": {
        "type": "object",
        "properties": {
          "freeformTags": {
            "type": "string",
            "description": "Free-form tags for this resource.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "storageCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of storage servers for the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "computeCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of compute servers for the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The user-friendly name for the cloud Exadata infrastructure resource. The name does not need to be unique.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "customerContacts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerContact"
            },
            "x-ms-identifiers": [],
            "description": "The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
            "x-typespec-name": "CustomerContact[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "maintenanceWindow": {
            "$ref": "#/definitions/MaintenanceWindowUpdate",
            "description": "maintenanceWindow property",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          }
        },
        "description": "The updatable properties of the CloudExadataInfrastructure."
      },
      "CloudVmCluster": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/CloudVmClusterProperties",
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true,
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "description": "CloudVmCluster resource definition",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
          }
        ]
      },
      "CloudVmClusterListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudVmCluster"
            },
            "description": "The CloudVmCluster items on this page",
            "x-typespec-name": "CloudVmCluster[]"
          },
          "nextLink": {
            "type": "string",
            "format": "uri",
            "description": "The link to the next page of items",
            "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
          }
        },
        "description": "The response of a CloudVmCluster list operation.",
        "required": [
          "value"
        ]
      },
      "CloudVmClusterProperties": {
        "type": "object",
        "properties": {
          "ocpuCount": {
            "type": "number",
            "format": "float",
            "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "storageSizeInGbs": {
            "type": "integer",
            "format": "int32",
            "description": "The storage allocation for the disk group, in gigabytes (GB).",
            "x-ms-mutability": [
              "read",
              "update"
            ]
          },
          "diskRedundancy": {
            "$ref": "#/definitions/DiskRedundancy",
            "description": "The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. ",
            "readOnly": true
          },
          "scanDnsName": {
            "type": "string",
            "description": "The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. ",
            "readOnly": true
          },
          "domain": {
            "type": "string",
            "description": "The domain name for the cloud VM cluster.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "scanListenerPortTcpSsl": {
            "description": "The TCPS Single Client Access Name (SCAN) port. The default port is 2484.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "computeCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of compute servers for the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "create"
            ]
          },
          "vips": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.  **Note:** For a single-node DB system, this list is empty. ",
            "x-typespec-name": "string[]",
            "readOnly": true
          },
          "timeCreated": {
            "type": "string",
            "description": "The date and time that the cloud VM cluster was created.",
            "readOnly": true
          },
          "licenseModel": {
            "$ref": "#/definitions/LicenseModel",
            "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "listenerPort": {
            "type": "integer",
            "format": "int64",
            "description": "The port number configured for the listener on the cloud VM cluster.",
            "readOnly": true
          },
          "nodeCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of nodes in the cloud VM cluster. ",
            "readOnly": true
          },
          "ocid": {
            "type": "string",
            "description": "The [OCID](/Content/General/Concepts/identifiers.htm) of the resource.",
            "readOnly": true
          },
          "sshPublicKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
            "x-typespec-name": "string[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "ociNetworkCidrs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The CIDRs that will be used to bring up the VirtualCloudNetwork (VCN) in OCI. These can only be ipv4 CIDRS. The list of one or more IPv4 CIDR blocks for the VCN that meet the following criteria   - The CIDR blocks must be valid.   - They must not overlap with each other or with the on-premises network CIDR block.   - The number of CIDR blocks must not exceed the limit of CIDR blocks allowed per VCN.   - During dry-run only one of ociNetworkCidrs, vnetId is required. ",
            "x-typespec-name": "string[]",
            "x-ms-mutability": [
              "create"
            ]
          },
          "status": {
            "type": "string",
            "description": "The current status of the asynchronous operation being performed.",
            "readOnly": true
          },
          "vnetId": {
            "$ref": "#/definitions/VNetId",
            "description": "The Azure unique identifier of the VNET.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "lifecycleState": {
            "type": "string",
            "description": "The current state of the cloud VM cluster.",
            "readOnly": true
          },
          "lifecycleDetails": {
            "type": "string",
            "description": "Additional information about the current lifecycle state.",
            "readOnly": true
          },
          "giVersion": {
            "type": "string",
            "description": "A valid Oracle Grid Infrastructure (GI) software version.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "hostname": {
            "type": "string",
            "description": "The hostname for the cloud VM cluster.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "cpuCoreCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of CPU cores enabled on the cloud VM cluster.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "isLocalBackupEnabled": {
            "type": "boolean",
            "description": "If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. ",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "systemVersion": {
            "type": "string",
            "description": "Operating system version of the image.",
            "readOnly": true
          },
          "freeformTags": {
            "type": "string",
            "description": "Free-form tags for this resource.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "isSparseDiskgroupEnabled": {
            "type": "boolean",
            "description": "If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. ",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "dataStoragePercentage": {
            "type": "integer",
            "format": "int32",
            "description": "The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. ",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The user-friendly name for the cloud VM cluster. The name does not need to be unique.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "timeZone": {
            "type": "string",
            "description": "The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "scanIps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.  **Note:** For a single-node DB system, this list is empty. ",
            "x-typespec-name": "string[]",
            "readOnly": true
          },
          "clusterName": {
            "type": "string",
            "description": "The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. ",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "cloudExadataInfrastructureId": {
            "$ref": "#/definitions/CloudExadataInfrastructureId",
            "description": "The fully qualified Azure resource ID of the cloud Exadata infrastructure.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "scanListenerPortTcp": {
            "description": "The TCP Single Client Access Name (SCAN) port. The default port is 1521.",
            "x-ms-mutability": [
              "read",
              "create"
            ]
          },
          "provisioningState": {
            "$ref": "#/definitions/CloudVmClusterProvisioningState",
            "description": "The status of the last operation.",
            "readOnly": true
          }
        },
        "description": "CloudVmCluster resource model",
        "required": [
          "domain",
          "sshPublicKeys",
          "lifecycleState",
          "giVersion",
          "hostname",
          "cpuCoreCount",
          "cloudExadataInfrastructureId"
        ]
      },
      "CloudVmClusterProvisioningState": {
        "type": "string",
        "description": "The provisioning state of a CloudVmCluster resource.",
        "enum": [
          "Succeeded",
          "Failed",
          "Canceled",
          "Provisioning",
          "Available",
          "Updating",
          "Terminating",
          "Terminated",
          "MaintenanceInProgress"
        ],
        "x-ms-enum": {
          "name": "CloudVmClusterProvisioningState",
          "modelAsString": true,
          "values": [
            {
              "name": "Succeeded",
              "value": "Succeeded",
              "description": "Resource has been created."
            },
            {
              "name": "Failed",
              "value": "Failed",
              "description": "Resource creation failed."
            },
            {
              "name": "Canceled",
              "value": "Canceled",
              "description": "Resource creation was canceled."
            },
            {
              "name": "Provisioning",
              "value": "Provisioning",
              "description": "Provisioning"
            },
            {
              "name": "Available",
              "value": "Available",
              "description": "Available"
            },
            {
              "name": "Updating",
              "value": "Updating",
              "description": "Updating"
            },
            {
              "name": "Terminating",
              "value": "Terminating",
              "description": "Terminating"
            },
            {
              "name": "Terminated",
              "value": "Terminated",
              "description": "Terminated"
            },
            {
              "name": "MaintenanceInProgress",
              "value": "MaintenanceInProgress",
              "description": "MaintenanceInProgress"
            }
          ]
        }
      },
      "CloudVmClusterUpdate": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags.",
            "x-typespec-name": "Record<string>"
          },
          "properties": {
            "$ref": "#/definitions/CloudVmClusterUpdateProperties",
            "x-ms-client-flatten": true
          }
        },
        "description": "The type used for update operations of the CloudVmCluster."
      },
      "CloudVmClusterUpdateProperties": {
        "type": "object",
        "properties": {
          "ocpuCount": {
            "type": "number",
            "format": "float",
            "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "storageSizeInGbs": {
            "type": "integer",
            "format": "int32",
            "description": "The storage allocation for the disk group, in gigabytes (GB).",
            "x-ms-mutability": [
              "read",
              "update"
            ]
          },
          "licenseModel": {
            "$ref": "#/definitions/LicenseModel",
            "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "sshPublicKeys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
            "x-typespec-name": "string[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "cpuCoreCount": {
            "type": "integer",
            "format": "int32",
            "description": "The number of CPU cores enabled on the cloud VM cluster.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "freeformTags": {
            "type": "string",
            "description": "Free-form tags for this resource.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "The user-friendly name for the cloud VM cluster. The name does not need to be unique.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          }
        },
        "description": "The updatable properties of the CloudVmCluster."
      },
      "CustomerContact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address used by Oracle to send notifications regarding databases and infrastructure.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          }
        },
        "description": "CustomerContact resource properties",
        "required": [
          "email"
        ]
      },
      "DayOfWeek": {
        "type": "string",
        "description": "DayOfWeek resource properties",
        "enum": [
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Sunday"
        ],
        "x-ms-enum": {
          "name": "DayOfWeek",
          "modelAsString": true,
          "values": [
            {
              "name": "Monday",
              "value": "Monday",
              "description": "Monday"
            },
            {
              "name": "Tuesday",
              "value": "Tuesday",
              "description": "Tuesday"
            },
            {
              "name": "Wednesday",
              "value": "Wednesday",
              "description": "Wednesday"
            },
            {
              "name": "Thursday",
              "value": "Thursday",
              "description": "Thursday"
            },
            {
              "name": "Friday",
              "value": "Friday",
              "description": "Friday"
            },
            {
              "name": "Saturday",
              "value": "Saturday",
              "description": "Saturday"
            },
            {
              "name": "Sunday",
              "value": "Sunday",
              "description": "Sunday"
            }
          ]
        }
      },
      "DbSystemShape": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/DbSystemShapeProperties",
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true,
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "description": "DbSystemShape resource definition",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
          }
        ]
      },
      "DbSystemShapeListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DbSystemShape"
            },
            "description": "The DbSystemShape items on this page",
            "x-typespec-name": "DbSystemShape[]"
          },
          "nextLink": {
            "type": "string",
            "format": "uri",
            "description": "The link to the next page of items",
            "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
          }
        },
        "description": "The response of a DbSystemShape list operation.",
        "required": [
          "value"
        ]
      },
      "DbSystemShapeProperties": {
        "type": "object",
        "properties": {
          "availableMemoryInGbs": {
            "description": "The maximum memory that can be enabled for this shape.",
            "readOnly": true
          },
          "availableCoreCountPerNode": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.",
            "readOnly": true
          },
          "runtimeMinimumCoreCount": {
            "description": "The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.",
            "readOnly": true
          },
          "coreCountIncrement": {
            "description": "The discrete number by which the CPU core count for this shape can be increased or decreased.",
            "readOnly": true
          },
          "availableMemoryPerNodeInGbs": {
            "description": "The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
            "readOnly": true
          },
          "availableCoreCount": {
            "description": "The maximum number of CPU cores that can be enabled on the DB system for this shape.",
            "readOnly": true
          },
          "minCoreCountPerNode": {
            "description": "The minimum number of CPU cores that can be enabled per node for this shape.",
            "readOnly": true
          },
          "shapeFamily": {
            "type": "string",
            "description": "The family of the shape used for the DB system.",
            "readOnly": true
          },
          "availableDataStorageInTbs": {
            "description": "The maximum DATA storage that can be enabled for this shape.",
            "readOnly": true
          },
          "availableDbNodePerNodeInGbs": {
            "description": "The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
            "readOnly": true
          },
          "availableDataStoragePerServerInTbs": {
            "type": "number",
            "format": "double",
            "description": "The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.",
            "readOnly": true
          },
          "shape": {
            "type": "string",
            "description": "Deprecated. Use `name` instead of `shape`.",
            "readOnly": true
          },
          "minStorageCount": {
            "description": "The minimum number of Exadata storage servers available for the Exadata infrastructure.",
            "readOnly": true
          },
          "minimumCoreCount": {
            "description": "The minimum number of CPU cores that can be enabled on the DB system for this shape.",
            "readOnly": true
          },
          "maxStorageCount": {
            "description": "The maximum number of Exadata storage servers available for the Exadata infrastructure.",
            "readOnly": true
          },
          "minDbNodeStoragePerNodeInGbs": {
            "description": "The minimum Db Node storage that need be allocated per node for this shape.",
            "readOnly": true
          },
          "minDataStorageInTbs": {
            "description": "The minimum data storage that need be allocated for this shape.",
            "readOnly": true
          },
          "minimumNodeCount": {
            "description": "The minimum number of database nodes available for this shape.",
            "readOnly": true
          },
          "minMemoryPerNodeInGbs": {
            "description": "The minimum memory that need be allocated per node for this shape.",
            "readOnly": true
          },
          "availableDbNodeStorageInGbs": {
            "description": "The maximum Db Node storage that can be enabled for this shape.",
            "readOnly": true
          },
          "maximumNodeCount": {
            "description": "The maximum number of database nodes available for this shape.",
            "readOnly": true
          },
          "provisioningState": {
            "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
            "description": "The status of the last operation.",
            "readOnly": true
          }
        },
        "description": "DbSystemShape resource model",
        "required": [
          "availableCoreCount"
        ]
      },
      "DiskRedundancy": {
        "type": "string",
        "description": "DiskRedundancy enum",
        "enum": [
          "High",
          "Normal"
        ],
        "x-ms-enum": {
          "name": "DiskRedundancy",
          "modelAsString": true,
          "values": [
            {
              "name": "High",
              "value": "High",
              "description": "High"
            },
            {
              "name": "Normal",
              "value": "Normal",
              "description": "Normal"
            }
          ]
        }
      },
      "GiVersion": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/GiVersionProperties",
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true,
            "x-ms-mutability": [
              "read",
              "create"
            ]
          }
        },
        "description": "GiVersion resource definition",
        "allOf": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
          }
        ]
      },
      "GiVersionListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/GiVersion"
            },
            "description": "The GiVersion items on this page",
            "x-typespec-name": "GiVersion[]"
          },
          "nextLink": {
            "type": "string",
            "format": "uri",
            "description": "The link to the next page of items",
            "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
          }
        },
        "description": "The response of a GiVersion list operation.",
        "required": [
          "value"
        ]
      },
      "GiVersionProperties": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "A valid Oracle Grid Infrastructure (GI) software version.",
            "readOnly": true
          },
          "provisioningState": {
            "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
            "description": "The status of the last operation.",
            "readOnly": true
          }
        },
        "description": "GiVersion resource model",
        "required": [
          "version"
        ]
      },
      "LicenseModel": {
        "type": "string",
        "description": "LicenseModel enum",
        "enum": [
          "LicenseIncluded",
          "BringYourOwnLicense"
        ],
        "x-ms-enum": {
          "name": "LicenseModel",
          "modelAsString": true,
          "values": [
            {
              "name": "LicenseIncluded",
              "value": "LicenseIncluded",
              "description": "LicenseIncluded"
            },
            {
              "name": "BringYourOwnLicense",
              "value": "BringYourOwnLicense",
              "description": "BringYourOwnLicense"
            }
          ]
        }
      },
      "MaintenanceWindow": {
        "type": "object",
        "properties": {
          "weeksOfMonth": {
            "type": "array",
            "items": {},
            "description": "Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
            "x-typespec-name": "integer[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "leadTimeInWeeks": {
            "description": "Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. ",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "preference": {
            "type": "string",
            "description": "The maintenance window scheduling preference.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "months": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Month"
            },
            "description": "Months during the year when maintenance should be performed.",
            "x-typespec-name": "Month[]",
            "x-ms-identifiers": [
              "name"
            ],
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DayOfWeek"
            },
            "description": "Days during the week when maintenance should be performed.",
            "x-typespec-name": "DayOfWeek[]",
            "x-ms-identifiers": [
              "name"
            ],
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "hoursOfDay": {
            "type": "array",
            "items": {},
            "description": "The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
            "x-typespec-name": "integer[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          }
        },
        "description": "MaintenanceWindow resource properties",
        "required": [
          "preference"
        ]
      },
      "MaintenanceWindowUpdate": {
        "type": "object",
        "properties": {
          "weeksOfMonth": {
            "type": "array",
            "items": {},
            "description": "Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
            "x-typespec-name": "integer[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "leadTimeInWeeks": {
            "description": "Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. ",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "preference": {
            "type": "string",
            "description": "The maintenance window scheduling preference.",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "months": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Month"
            },
            "description": "Months during the year when maintenance should be performed.",
            "x-typespec-name": "Month[]",
            "x-ms-identifiers": [
              "name"
            ],
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "daysOfWeek": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DayOfWeek"
            },
            "description": "Days during the week when maintenance should be performed.",
            "x-typespec-name": "DayOfWeek[]",
            "x-ms-identifiers": [
              "name"
            ],
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          },
          "hoursOfDay": {
            "type": "array",
            "items": {},
            "description": "The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
            "x-typespec-name": "integer[]",
            "x-ms-mutability": [
              "read",
              "update",
              "create"
            ]
          }
        },
        "description": "MaintenanceWindow resource properties"
      },
      "Month": {
        "type": "string",
        "description": "Month resource properties",
        "enum": [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December"
        ],
        "x-ms-enum": {
          "name": "Month",
          "modelAsString": true,
          "values": [
            {
              "name": "January",
              "value": "January",
              "description": "January"
            },
            {
              "name": "February",
              "value": "February",
              "description": "February"
            },
            {
              "name": "March",
              "value": "March",
              "description": "March"
            },
            {
              "name": "April",
              "value": "April",
              "description": "April"
            },
            {
              "name": "May",
              "value": "May",
              "description": "May"
            },
            {
              "name": "June",
              "value": "June",
              "description": "June"
            },
            {
              "name": "July",
              "value": "July",
              "description": "July"
            },
            {
              "name": "August",
              "value": "August",
              "description": "August"
            },
            {
              "name": "September",
              "value": "September",
              "description": "September"
            },
            {
              "name": "October",
              "value": "October",
              "description": "October"
            },
            {
              "name": "November",
              "value": "November",
              "description": "November"
            },
            {
              "name": "December",
              "value": "December",
              "description": "December"
            }
          ]
        }
      },
      "VNetId": {
        "type": "string",
        "description": "A type definition that refers the id to an ARM resource.",
        "format": "arm-id",
        "x-ms-arm-id-details": {
          "allowedResources": [
            {
              "type": "Microsoft.Network/virtualNetworks"
            }
          ]
        }
      }
    },
    "parameters": {}
  }
  