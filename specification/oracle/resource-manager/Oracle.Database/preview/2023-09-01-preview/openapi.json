{
  "swagger": "2.0",
  "info": {
    "title": "Oracle Database Resource Manager",
    "version": "2023-09-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "DbVersions"
    },
    {
      "name": "GiVersions"
    },
    {
      "name": "DbSystemShapes"
    },
    {
      "name": "CloudVmClusters"
    },
    {
      "name": "CloudExadataInfrastructures"
    },
    {
      "name": "OracleSubscriptions"
    },
    {
      "name": "VirtualMachines"
    }
  ],
  "paths": {
    "/providers/Oracle.Database/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Oracle.Database/dbSystemShapes": {
      "get": {
        "operationId": "DbSystemShapes_ListByLocation",
        "tags": [
          "DbSystemShapes"
        ],
        "description": "List DbSystemShape resources by location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbSystemShapeListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Oracle.Database/dbVersions": {
      "get": {
        "operationId": "DbVersions_ListByLocation",
        "tags": [
          "DbVersions"
        ],
        "description": "List DbVersion resources by location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DbVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/locations/{location}/providers/Oracle.Database/giVersions": {
      "get": {
        "operationId": "GiVersions_ListByLocation",
        "tags": [
          "GiVersions"
        ],
        "description": "List GiVersion resources by location",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/LocationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GiVersionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/cloudExadataInfrastructures": {
      "get": {
        "operationId": "CloudExadataInfrastructures_ListBySubscription",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "List CloudExadataInfrastructure resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/cloudVmClusters": {
      "get": {
        "operationId": "CloudVmClusters_ListBySubscription",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "List CloudVmCluster resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions": {
      "get": {
        "operationId": "OracleSubscriptions_ListBySubscription",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "List OracleSubscription resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default": {
      "get": {
        "operationId": "OracleSubscriptions_Get",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Get a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "OracleSubscriptions_Create",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Create a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'OracleSubscription' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "201": {
            "description": "Resource 'OracleSubscription' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "OracleSubscriptions_Update",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Update a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "OracleSubscriptions_Delete",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Delete a OracleSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/createOciAccount": {
      "post": {
        "operationId": "OracleSubscriptions_CreateOciAccount",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Create a new OCI account",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OracleSubscription"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/createOciAccountValidation": {
      "post": {
        "operationId": "OracleSubscriptions_CreateOciAccountValidation",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "OCI Account Creation Validate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/getOciAccountDetails": {
      "post": {
        "operationId": "OracleSubscriptions_GetOciAccountDetails",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "Get OCI Account Details",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/OciAccountDetails"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/resourceCreationValidate": {
      "post": {
        "operationId": "OracleSubscriptions_ResourceCreationValidate",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/resourceDeletionValidate": {
      "post": {
        "operationId": "OracleSubscriptions_ResourceDeletionValidate",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Oracle.Database/oracleSubscriptions/default/resourcePatchValidate": {
      "post": {
        "operationId": "OracleSubscriptions_ResourcePatchValidate",
        "tags": [
          "OracleSubscriptions"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OracleSubscriptionProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures": {
      "get": {
        "operationId": "CloudExadataInfrastructures_ListByResourceGroup",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "List CloudExadataInfrastructure resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudExadataInfrastructureName}": {
      "get": {
        "operationId": "CloudExadataInfrastructures_Get",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Get a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "CloudExadataInfrastructures_Create",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Create a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudExadataInfrastructure' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "201": {
            "description": "Resource 'CloudExadataInfrastructure' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CloudExadataInfrastructures_Update",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Update a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructure"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudExadataInfrastructures_Delete",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Delete a CloudExadataInfrastructure",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudExadataInfrastructureName}/getOciAccountName": {
      "post": {
        "operationId": "CloudExadataInfrastructures_GetOciAccountName",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "Get OCI Account Name",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "string"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudExadataInfrastructureName}/resourceCreationValidate": {
      "post": {
        "operationId": "CloudExadataInfrastructures_ResourceCreationValidate",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudExadataInfrastructureName}/resourceDeletionValidate": {
      "post": {
        "operationId": "CloudExadataInfrastructures_ResourceDeletionValidate",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudExadataInfrastructures/{cloudExadataInfrastructureName}/resourcePatchValidate": {
      "post": {
        "operationId": "CloudExadataInfrastructures_ResourcePatchValidate",
        "tags": [
          "CloudExadataInfrastructures"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudExadataInfrastructureName",
            "in": "path",
            "description": "CloudExadataInfrastructure name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudExadataInfrastructureProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters": {
      "get": {
        "operationId": "CloudVmClusters_ListByResourceGroup",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "List CloudVmCluster resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmClusterListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}": {
      "get": {
        "operationId": "CloudVmClusters_Get",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Get a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "CloudVmClusters_Create",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Create a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'CloudVmCluster' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "201": {
            "description": "Resource 'CloudVmCluster' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "CloudVmClusters_Update",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Update a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmClusterUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "202": {
            "description": "Resource update request accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "CloudVmClusters_Delete",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "Delete a CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/addVm": {
      "post": {
        "operationId": "CloudVmClusters_AddVm",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddVirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CloudVmCluster"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/resourceCreationValidate": {
      "post": {
        "operationId": "CloudVmClusters_ResourceCreationValidate",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmClusterProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/resourceDeletionValidate": {
      "post": {
        "operationId": "CloudVmClusters_ResourceDeletionValidate",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmClusterProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/resourcePatchValidate": {
      "post": {
        "operationId": "CloudVmClusters_ResourcePatchValidate",
        "tags": [
          "CloudVmClusters"
        ],
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudVmClusterProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualMachines": {
      "get": {
        "operationId": "VirtualMachines_ListByCloudVmCluster",
        "tags": [
          "VirtualMachines"
        ],
        "description": "List VirtualMachine resources by CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualMachines/{virtualMachineName}": {
      "post": {
        "operationId": "VirtualMachines_Action",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Perform action on virtual machine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "Virtual machine name",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "Vm action enum",
            "required": true,
            "type": "string",
            "enum": [
              "Start",
              "Stop",
              "SoftReset"
            ],
            "x-ms-enum": {
              "name": "ActionEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "Start",
                  "value": "Start",
                  "description": "Start VM"
                },
                {
                  "name": "Stop",
                  "value": "Stop",
                  "description": "Stop VM"
                },
                {
                  "name": "SoftReset",
                  "value": "SoftReset",
                  "description": "Soft reset VM"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualMachines_Delete",
        "tags": [
          "VirtualMachines"
        ],
        "description": "Delete a VirtualMachine",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualMachineName",
            "in": "path",
            "description": "Virtual machine name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualNetworkAddress": {
      "get": {
        "operationId": "VirtualNetworkAddresses_ListByCloudVmCluster",
        "description": "List VirtualNetworkAddress resources by CloudVmCluster",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddressListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualNetworkAddress/{virtualNetworkAddressName}": {
      "put": {
        "operationId": "VirtualNetworkAddresses_Create",
        "description": "Create a VirtualNetworkAddress",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkAddressName",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "format": "^[a-zA-Z0-9-]+",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'VirtualNetworkAddress' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            }
          },
          "201": {
            "description": "Resource 'VirtualNetworkAddress' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddress"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "operationId": "VirtualNetworkAddresses_Delete",
        "description": "Delete a VirtualNetworkAddress",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkAddressName",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "format": "^[a-zA-Z0-9-]+",
            "minLength": 1,
            "maxLength": 63
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualNetworkAddress/{virtualNetworkAddressName}/resourceCreationValidate": {
      "post": {
        "operationId": "VirtualNetworkAddresses_ResourceCreationValidate",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkAddressName",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "format": "^[a-zA-Z0-9-]+",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddressProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Oracle.Database/cloudVmClusters/{cloudVmClusterName}/virtualNetworkAddress/{virtualNetworkAddressName}/resourceDeletionValidate": {
      "post": {
        "operationId": "VirtualNetworkAddresses_ResourceDeletionValidate",
        "description": "A synchronous resource action.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "cloudVmClusterName",
            "in": "path",
            "description": "CloudVmCluster name",
            "required": true,
            "type": "string"
          },
          {
            "name": "virtualNetworkAddressName",
            "in": "path",
            "description": "Virtual IP address hostname.",
            "required": true,
            "type": "string",
            "format": "^[a-zA-Z0-9-]+",
            "minLength": 1,
            "maxLength": 63
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualNetworkAddressProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ValidationResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountProperties": {
      "type": "object",
      "description": "Account Properties model",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "The email address used to create the Oracle account.",
          "minLength": 1,
          "maxLength": 320
        },
        "firstName": {
          "type": "string",
          "description": "The first name used to create the Oracle account.",
          "minLength": 1,
          "maxLength": 200
        },
        "lastName": {
          "type": "string",
          "description": "The last name used to create the Oracle account.",
          "minLength": 1,
          "maxLength": 200
        },
        "password": {
          "$ref": "#/definitions/Password",
          "description": "The password name used to create the Oracle account.",
          "minLength": 8,
          "maxLength": 40
        },
        "cloudAccountName": {
          "type": "string",
          "description": "The Cloud Account name used to create the Oracle Tenancy.",
          "minLength": 1,
          "maxLength": 25
        },
        "homeRegion": {
          "$ref": "#/definitions/HomeRegion",
          "description": "The Cloud home region used to create the Oracle Tenancy."
        }
      },
      "required": [
        "emailAddress",
        "firstName",
        "lastName",
        "password",
        "cloudAccountName",
        "homeRegion"
      ]
    },
    "ActionEnum": {
      "type": "string",
      "description": "Vm action enum",
      "enum": [
        "Start",
        "Stop",
        "SoftReset"
      ],
      "x-ms-enum": {
        "name": "ActionEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Start",
            "value": "Start",
            "description": "Start VM"
          },
          {
            "name": "Stop",
            "value": "Stop",
            "description": "Stop VM"
          },
          {
            "name": "SoftReset",
            "value": "SoftReset",
            "description": "Soft reset VM"
          }
        ]
      }
    },
    "AddVirtualMachine": {
      "type": "object",
      "description": "Add virtual machine model",
      "properties": {
        "dbServers": {
          "type": "array",
          "description": "Db servers ocids",
          "items": {
            "$ref": "#/definitions/Ocid"
          }
        }
      },
      "required": [
        "dbServers"
      ]
    },
    "Azure.Core.ipV4Address": {
      "type": "string",
      "format": "ipV4Address",
      "description": "Represent an IP V4 address serialized as a string.\n\nIt is formatted as four 8-bit fields separated by periods."
    },
    "CloudExadataInfrastructure": {
      "type": "object",
      "description": "CloudExadataInfrastructure resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudExadataInfrastructureProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "zones": {
          "type": "array",
          "description": "CloudExadataInfrastructure zones",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "zones"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CloudExadataInfrastructureId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Oracle.Database/cloudExadataInfrastructures"
          }
        ]
      }
    },
    "CloudExadataInfrastructureListResult": {
      "type": "object",
      "description": "The response of a CloudExadataInfrastructure list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudExadataInfrastructure items on this page",
          "items": {
            "$ref": "#/definitions/CloudExadataInfrastructure"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudExadataInfrastructureProperties": {
      "type": "object",
      "description": "CloudExadataInfrastructure resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Exadata infra ocid",
          "readOnly": true
        },
        "computeCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of compute servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "storageCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of storage servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "totalStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The total storage allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
          "readOnly": true
        },
        "availableStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The available storage can be allocated to the cloud Exadata infrastructure resource, in gigabytes (GB).",
          "readOnly": true
        },
        "timeCreated": {
          "type": "string",
          "description": "The date and time the cloud Exadata infrastructure resource was created.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "maintenanceWindow property",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "estimatedPatchingTime": {
          "$ref": "#/definitions/EstimatedPatchingTime",
          "description": "The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).",
          "readOnly": true
        },
        "customerContacts": {
          "type": "array",
          "description": "The list of customer email addresses that receive information from Oracle about the specified OCI Database service resource. Oracle uses these email addresses to send notifications about planned and unplanned software maintenance updates, information about system hardware, and other information needed by administrators. Up to 10 email addresses can be added to the customer contacts for a cloud Exadata infrastructure instance. ",
          "items": {
            "$ref": "#/definitions/CustomerContact"
          },
          "x-ms-identifiers": [],
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/CloudExadataInfrastructureProvisioningState",
          "description": "CloudExadataInfrastructure provisioning state",
          "readOnly": true
        },
        "shape": {
          "$ref": "#/definitions/DbSystemShapeId",
          "description": "The model name of the cloud Exadata infrastructure resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ociUrl": {
          "type": "string",
          "description": "HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
          "readOnly": true
        },
        "cpuCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The total number of CPU cores allocated.",
          "readOnly": true
        },
        "maxCpuCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The total number of CPU cores available.",
          "readOnly": true
        },
        "memorySizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The memory allocated in GBs.",
          "readOnly": true
        },
        "maxMemoryInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The total memory available in GBs.",
          "readOnly": true
        },
        "dbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The local node storage to be allocated in GBs.",
          "readOnly": true
        },
        "maxDbNodeStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The total local node storage available in GBs.",
          "readOnly": true
        },
        "dataStorageSizeInTbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity of data in the database, in terabytes.",
          "readOnly": true
        },
        "maxDataStorageInTbs": {
          "type": "number",
          "format": "double",
          "description": "The total available DATA disk group size.",
          "readOnly": true
        },
        "dbServerVersion": {
          "type": "string",
          "description": "The software version of the database servers (dom0) in the Exadata infrastructure.",
          "readOnly": true
        },
        "storageServerVersion": {
          "type": "string",
          "description": "The software version of the storage servers (cells) in the Exadata infrastructure.",
          "readOnly": true
        },
        "activatedStorageCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The requested number of additional storage servers activated for the Exadata infrastructure.",
          "readOnly": true
        },
        "additionalStorageCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The requested number of additional storage servers for the Exadata infrastructure.",
          "readOnly": true
        },
        "displayName": {
          "type": "string",
          "description": "The name for the Exadata infrastructure.",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "lastMaintenanceRunId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the last maintenance run.",
          "readOnly": true
        },
        "nextMaintenanceRunId": {
          "$ref": "#/definitions/Ocid",
          "description": "The OCID of the next maintenance run.",
          "readOnly": true
        },
        "definedFileSystemConfigurations": {
          "type": "string",
          "description": "definedFileSystemConfigurations",
          "readOnly": true
        },
        "monthlyDbServerVersion": {
          "type": "string",
          "description": "monthlyDbServerVersion",
          "readOnly": true
        },
        "monthlyStorageServerVersion": {
          "type": "string",
          "description": "monthlyStorageServerVersion",
          "readOnly": true
        }
      },
      "required": [
        "shape",
        "displayName"
      ]
    },
    "CloudExadataInfrastructureProvisioningState": {
      "type": "string",
      "description": "CloudExadataInfrastructureProvisioningState enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Available",
        "Updating",
        "Terminating",
        "Terminated",
        "MaintenanceInProgress"
      ],
      "x-ms-enum": {
        "name": "CloudExadataInfrastructureProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning value"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available value"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Updating value"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Terminating value"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Terminated value"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "MaintenanceInProgress value"
          }
        ]
      }
    },
    "CloudExadataInfrastructureUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CloudExadataInfrastructure.",
      "properties": {
        "zones": {
          "type": "array",
          "description": "CloudExadataInfrastructure zones",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "CloudVmCluster": {
      "type": "object",
      "description": "CloudVmCluster resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CloudVmClusterProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CloudVmClusterListResult": {
      "type": "object",
      "description": "The response of a CloudVmCluster list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The CloudVmCluster items on this page",
          "items": {
            "$ref": "#/definitions/CloudVmCluster"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "CloudVmClusterProperties": {
      "type": "object",
      "description": "CloudVmCluster resource model",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Cloud VM Cluster ocid",
          "readOnly": true
        },
        "listenerPort": {
          "type": "integer",
          "format": "int64",
          "description": "The port number configured for the listener on the cloud VM cluster.",
          "readOnly": true
        },
        "nodeCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of nodes in the cloud VM cluster. ",
          "readOnly": true
        },
        "storageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The data disk group size to be allocated in GBs per VM."
        },
        "storageSizeInTbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The data disk group size to be allocated in TBs per storage."
        },
        "nodeStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The local node storage to be allocated in GBs per VM."
        },
        "timeCreated": {
          "type": "string",
          "description": "The date and time that the cloud VM cluster was created.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state.",
          "readOnly": true
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of the cloud VM cluster. For details, see [Exadata Infrastructure Time Zones](/Content/Database/References/timezones.htm).",
          "minLength": 1,
          "maxLength": 255,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "hostname": {
          "type": "string",
          "description": "The hostname for the cloud VM cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "domain": {
          "type": "string",
          "description": "The domain name for the cloud VM cluster.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of CPU cores enabled on the cloud VM cluster."
        },
        "ocpuCount": {
          "type": "number",
          "format": "float",
          "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."
        },
        "clusterName": {
          "type": "string",
          "description": "The cluster name for cloud VM cluster. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive. ",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "dataStoragePercentage": {
          "type": "integer",
          "format": "uint32",
          "description": "The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 35, 40, 60 and 80. The default is 80 percent assigned to DATA storage. See [Storage Configuration](/Content/Database/Concepts/exaoverview.htm#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage. ",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isLocalBackupEnabled": {
          "type": "boolean",
          "description": "If true, database backup on local Exadata storage is configured for the cloud VM cluster. If false, database backup on local Exadata storage is not available in the cloud VM cluster. ",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "cloudExadataInfrastructureId": {
          "$ref": "#/definitions/CloudExadataInfrastructureId",
          "description": "Cloud Exadata Infrastructure ID",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isSparseDiskgroupEnabled": {
          "type": "boolean",
          "description": "If true, sparse disk group is configured for the cloud VM cluster. If false, sparse disk group is not created. ",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemVersion": {
          "type": "string",
          "description": "Operating system version of the image.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "sshPublicKeys": {
          "type": "array",
          "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
          "items": {
            "type": "string"
          }
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "
        },
        "diskRedundancy": {
          "$ref": "#/definitions/DiskRedundancy",
          "description": "The type of redundancy configured for the cloud Vm cluster. NORMAL is 2-way redundancy. HIGH is 3-way redundancy. ",
          "readOnly": true
        },
        "scanIps": {
          "type": "array",
          "description": "The Single Client Access Name (SCAN) IP addresses associated with the cloud VM cluster. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.  **Note:** For a single-node DB system, this list is empty. ",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "vips": {
          "type": "array",
          "description": "The virtual IP (VIP) addresses associated with the cloud VM cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.  **Note:** For a single-node DB system, this list is empty. ",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "scanDnsName": {
          "type": "string",
          "description": "The FQDN of the DNS record for the SCAN IP addresses that are associated with the cloud VM cluster. ",
          "minLength": 1,
          "maxLength": 72,
          "readOnly": true
        },
        "scanListenerPortTcp": {
          "type": "integer",
          "format": "uint32",
          "description": "The TCP Single Client Access Name (SCAN) port. The default port is 1521.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "scanListenerPortTcpSsl": {
          "type": "integer",
          "format": "uint32",
          "description": "The TCPS Single Client Access Name (SCAN) port. The default port is 2484.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/CloudVmClusterProvisioningState",
          "description": "CloudVmCluster provisioning state",
          "readOnly": true
        },
        "vnetId": {
          "$ref": "#/definitions/VnetId",
          "description": "VNET for network connectivity",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "giVersionId": {
          "$ref": "#/definitions/GiVersionId",
          "description": "Oracle Grid Infrastructure (GI) software version",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ociUrl": {
          "type": "string",
          "description": "HTTPS link to OCI resources exposed to Azure Customer via Azure Interface.",
          "readOnly": true
        },
        "ociNetworkCidrs": {
          "type": "array",
          "description": "The CIDRs that will be used to bring up the VirtualCloudNetwork (VCN) in OCI. These can only be ipv4 CIDRS. The list of one or more IPv4 CIDR blocks for the VCN that meet the following criteria   - The CIDR blocks must be valid.   - They must not overlap with each other or with the on-premises network CIDR block.   - The number of CIDR blocks must not exceed the limit of CIDR blocks allowed per VCN.   - During dry-run only one of ociNetworkCidrs, mcvcnId, or networkLinkId is required. ",
          "items": {
            "type": "string"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "computeCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of compute servers for the cloud Exadata infrastructure.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "subnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "Client subnet",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "backupSubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "Client backup subnet",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "nsgId": {
          "$ref": "#/definitions/NsgId",
          "description": "Client network security group",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "backupNetworkNsgId": {
          "$ref": "#/definitions/NsgId",
          "description": "Client backup network security group",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isDiagnosticsEventsEnabled": {
          "type": "boolean",
          "description": "Enable diagnostic events",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isHealthMonitoringEnabled": {
          "type": "boolean",
          "description": "Enable health monitoring",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "isIncidentLogsEnabled": {
          "type": "boolean",
          "description": "Enable incident logs and tracing",
          "default": false,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "usePrivateDns": {
          "type": "boolean",
          "description": "Use private DNS service",
          "default": false,
          "x-ms-mutability": [
            "create"
          ]
        },
        "privateView": {
          "type": "string",
          "description": "Private view",
          "x-ms-mutability": [
            "create"
          ]
        },
        "privateZone": {
          "type": "string",
          "description": "Private zone",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "required": [
        "hostname",
        "cpuCoreCount",
        "cloudExadataInfrastructureId",
        "sshPublicKeys",
        "vnetId",
        "giVersionId",
        "subnetId",
        "backupSubnetId"
      ]
    },
    "CloudVmClusterProvisioningState": {
      "type": "string",
      "description": "CloudVmClusterProvisioningState enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Available",
        "Updating",
        "Terminating",
        "Terminated",
        "MaintenanceInProgress"
      ],
      "x-ms-enum": {
        "name": "CloudVmClusterProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning value"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available value"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Updating value"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Terminating value"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Terminated value"
          },
          {
            "name": "MaintenanceInProgress",
            "value": "MaintenanceInProgress",
            "description": "MaintenanceInProgress value"
          }
        ]
      }
    },
    "CloudVmClusterUpdate": {
      "type": "object",
      "description": "The type used for update operations of the CloudVmCluster.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/CloudVmClusterUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "CloudVmClusterUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the CloudVmCluster.",
      "properties": {
        "storageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The data disk group size to be allocated in GBs per VM."
        },
        "storageSizeInTbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The data disk group size to be allocated in TBs per storage."
        },
        "nodeStorageSizeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The local node storage to be allocated in GBs per VM."
        },
        "cpuCoreCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of CPU cores enabled on the cloud VM cluster."
        },
        "ocpuCount": {
          "type": "number",
          "format": "float",
          "description": "The number of OCPU cores to enable on the cloud VM cluster. Only 1 decimal place is allowed for the fractional part."
        },
        "sshPublicKeys": {
          "type": "array",
          "description": "The public key portion of one or more key pairs used for SSH access to the cloud VM cluster.",
          "items": {
            "type": "string"
          }
        },
        "licenseModel": {
          "$ref": "#/definitions/LicenseModel",
          "description": "The Oracle license model that applies to the cloud VM cluster. The default is LICENSE_INCLUDED. "
        }
      }
    },
    "CustomerContact": {
      "type": "object",
      "description": "CustomerContact resource properties",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address used by Oracle to send notifications regarding databases and infrastructure.",
          "minLength": 1,
          "maxLength": 320
        }
      },
      "required": [
        "email"
      ]
    },
    "DayOfWeek": {
      "type": "object",
      "description": "DayOfWeek resource properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/DayOfWeekName",
          "description": "Name of the day of the week."
        }
      },
      "required": [
        "name"
      ]
    },
    "DayOfWeekName": {
      "type": "string",
      "description": "DayOfWeekName enum",
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ],
      "x-ms-enum": {
        "name": "DayOfWeekName",
        "modelAsString": true,
        "values": [
          {
            "name": "Monday",
            "value": "Monday",
            "description": "Monday value"
          },
          {
            "name": "Tuesday",
            "value": "Tuesday",
            "description": "Tuesday value"
          },
          {
            "name": "Wednesday",
            "value": "Wednesday",
            "description": "Wednesday value"
          },
          {
            "name": "Thursday",
            "value": "Thursday",
            "description": "Thursday value"
          },
          {
            "name": "Friday",
            "value": "Friday",
            "description": "Friday value"
          },
          {
            "name": "Saturday",
            "value": "Saturday",
            "description": "Saturday value"
          },
          {
            "name": "Sunday",
            "value": "Sunday",
            "description": "Sunday value"
          }
        ]
      }
    },
    "DbSystemShape": {
      "type": "object",
      "description": "DbSystemShape resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DbSystemShapeProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DbSystemShapeId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Oracle.Database/dbSystemShapes"
          }
        ]
      }
    },
    "DbSystemShapeListResult": {
      "type": "object",
      "description": "The response of a DbSystemShape list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DbSystemShape items on this page",
          "items": {
            "$ref": "#/definitions/DbSystemShape"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DbSystemShapeProperties": {
      "type": "object",
      "description": "DbSystemShape resource model",
      "properties": {
        "shapeFamily": {
          "type": "string",
          "description": "The family of the shape used for the DB system.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "shape": {
          "type": "string",
          "description": "Deprecated. Use `name` instead of `shape`.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "availableCoreCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "minimumCoreCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "runtimeMinimumCoreCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The runtime minimum number of CPU cores that can be enabled on the DB system for this shape.",
          "readOnly": true
        },
        "coreCountIncrement": {
          "type": "integer",
          "format": "uint32",
          "description": "The discrete number by which the CPU core count for this shape can be increased or decreased.",
          "readOnly": true
        },
        "minStorageCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum number of Exadata storage servers available for the Exadata infrastructure.",
          "readOnly": true
        },
        "maxStorageCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum number of Exadata storage servers available for the Exadata infrastructure.",
          "readOnly": true
        },
        "availableDataStoragePerServerInTbs": {
          "type": "number",
          "format": "double",
          "description": "The maximum data storage available per storage server for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "availableMemoryPerNodeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum memory available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "availableDbNodePerNodeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum Db Node storage available per database node for this shape. Only applicable to ExaCC Elastic shapes.",
          "readOnly": true
        },
        "minCoreCountPerNode": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum number of CPU cores that can be enabled per node for this shape.",
          "readOnly": true
        },
        "availableMemoryInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum memory that can be enabled for this shape.",
          "readOnly": true
        },
        "minMemoryPerNodeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum memory that need be allocated per node for this shape.",
          "readOnly": true
        },
        "availableDbNodeStorageInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum Db Node storage that can be enabled for this shape.",
          "readOnly": true
        },
        "minDbNodeStoragePerNodeInGbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum Db Node storage that need be allocated per node for this shape.",
          "readOnly": true
        },
        "availableDataStorageInTbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum DATA storage that can be enabled for this shape.",
          "readOnly": true
        },
        "minDataStorageInTbs": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum data storage that need be allocated for this shape.",
          "readOnly": true
        },
        "minimumNodeCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The minimum number of database nodes available for this shape.",
          "readOnly": true
        },
        "maximumNodeCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum number of database nodes available for this shape.",
          "readOnly": true
        },
        "availableCoreCountPerNode": {
          "type": "integer",
          "format": "uint32",
          "description": "The maximum number of CPU cores per database node that can be enabled for this shape. Only applicable to the flex Exadata shape and ExaCC Elastic shapes.",
          "readOnly": true
        }
      },
      "required": [
        "availableCoreCount"
      ]
    },
    "DbVersion": {
      "type": "object",
      "description": "DbVersion resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DbVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DbVersionListResult": {
      "type": "object",
      "description": "The response of a DbVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DbVersion items on this page",
          "items": {
            "$ref": "#/definitions/DbVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DbVersionProperties": {
      "type": "object",
      "description": "DbVersion resource model",
      "properties": {
        "version": {
          "type": "string",
          "description": "A valid Oracle Database version.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        },
        "isLatestForMajorVersion": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software is the latest version for a release.",
          "readOnly": true
        },
        "supportsPdb": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software supports pluggable databases.",
          "readOnly": true
        },
        "isPreviewDbVersion": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software is the preview version.",
          "readOnly": true
        },
        "isUpgradeSupported": {
          "type": "boolean",
          "description": "True if this version of the Oracle Database software is supported for Upgrade.",
          "readOnly": true
        }
      },
      "required": [
        "version"
      ]
    },
    "DiskRedundancy": {
      "type": "string",
      "description": "DiskRedundancy enum",
      "enum": [
        "High",
        "Normal"
      ],
      "x-ms-enum": {
        "name": "DiskRedundancy",
        "modelAsString": true,
        "values": [
          {
            "name": "High",
            "value": "High",
            "description": "High value"
          },
          {
            "name": "Normal",
            "value": "Normal",
            "description": "Normal value"
          }
        ]
      }
    },
    "EstimatedPatchingTime": {
      "type": "object",
      "description": "The estimated total time required in minutes for all patching operations (database server, storage server, and network switch patching).",
      "properties": {
        "estimatedDbServerPatchingTime": {
          "type": "integer",
          "format": "uint32",
          "description": "The estimated time required in minutes for database server patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "estimatedNetworkSwitchesPatchingTime": {
          "type": "integer",
          "format": "uint32",
          "description": "The estimated time required in minutes for network switch patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "estimatedStorageServerPatchingTime": {
          "type": "integer",
          "format": "uint32",
          "description": "The estimated time required in minutes for storage server patching.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        },
        "totalEstimatedPatchingTime": {
          "type": "integer",
          "format": "uint32",
          "description": "The estimated total time required in minutes for all patching operations.",
          "minimum": 1,
          "maximum": 3000,
          "readOnly": true
        }
      }
    },
    "GiVersion": {
      "type": "object",
      "description": "GiVersion resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GiVersionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "GiVersionId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Oracle.Database/giVersions"
          }
        ]
      }
    },
    "GiVersionListResult": {
      "type": "object",
      "description": "The response of a GiVersion list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The GiVersion items on this page",
          "items": {
            "$ref": "#/definitions/GiVersion"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "GiVersionProperties": {
      "type": "object",
      "description": "GiVersion resource model",
      "properties": {
        "version": {
          "type": "string",
          "description": "A valid Oracle Grid Infrastructure (GI) software version.",
          "minLength": 1,
          "maxLength": 255,
          "readOnly": true
        }
      },
      "required": [
        "version"
      ]
    },
    "HomeRegion": {
      "type": "string",
      "description": "HomeRegion enum",
      "enum": [
        "UsEast",
        "GermanyCentral"
      ],
      "x-ms-enum": {
        "name": "HomeRegion",
        "modelAsString": true,
        "values": [
          {
            "name": "UsEast",
            "value": "UsEast",
            "description": "East US"
          },
          {
            "name": "GermanyCentral",
            "value": "GermanyCentral",
            "description": "Germany West Central"
          }
        ]
      }
    },
    "LicenseModel": {
      "type": "string",
      "description": "LicenseModel enum",
      "enum": [
        "LicenseIncluded",
        "BringYourOwnLicense"
      ],
      "x-ms-enum": {
        "name": "LicenseModel",
        "modelAsString": true,
        "values": [
          {
            "name": "LicenseIncluded",
            "value": "LicenseIncluded",
            "description": "LicenseIncluded value"
          },
          {
            "name": "BringYourOwnLicense",
            "value": "BringYourOwnLicense",
            "description": "BringYourOwnLicense value"
          }
        ]
      }
    },
    "MaintenanceRun": {
      "type": "object",
      "description": "MaintenanceRun resource model",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MaintenanceRunProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "MaintenanceRunProperties": {
      "type": "object",
      "description": "MaintenanceRun resource properties",
      "properties": {
        "timeScheduled": {
          "type": "string",
          "description": "The date and time the maintenance run is scheduled to occur.",
          "readOnly": true
        },
        "patchingStatus": {
          "$ref": "#/definitions/PatchingStatus",
          "description": "The status of the patching operation.",
          "readOnly": true
        },
        "maintenanceType": {
          "$ref": "#/definitions/MaintenanceType",
          "description": "Maintenance type.",
          "readOnly": true
        },
        "targetDbServerVersion": {
          "type": "string",
          "description": "The target software version for the database server patching operation.",
          "readOnly": true
        },
        "targetStorageServerVersion": {
          "type": "string",
          "description": "The target Cell version that is to be patched to.",
          "readOnly": true
        },
        "patchingMode": {
          "$ref": "#/definitions/PatchingMode",
          "description": "Cloud Exadata infrastructure node patching method.",
          "readOnly": true
        },
        "estimatedPatchingTime": {
          "$ref": "#/definitions/EstimatedPatchingTime",
          "description": "The estimated total time required in minutes for all patching operations.",
          "readOnly": true
        }
      },
      "required": [
        "timeScheduled"
      ]
    },
    "MaintenanceType": {
      "type": "string",
      "description": "MaintenanceType enum",
      "enum": [
        "Planned",
        "Unplanned"
      ],
      "x-ms-enum": {
        "name": "MaintenanceType",
        "modelAsString": true,
        "values": [
          {
            "name": "Planned",
            "value": "Planned",
            "description": "Planned value"
          },
          {
            "name": "Unplanned",
            "value": "Unplanned",
            "description": "Unplanned value"
          }
        ]
      }
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "MaintenanceWindow resource properties",
      "properties": {
        "preference": {
          "$ref": "#/definitions/Preference",
          "description": "The maintenance window scheduling preference."
        },
        "months": {
          "type": "array",
          "description": "Months during the year when maintenance should be performed.",
          "items": {
            "$ref": "#/definitions/Month"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "weeksOfMonth": {
          "type": "array",
          "description": "Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the  daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. ",
          "items": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "daysOfWeek": {
          "type": "array",
          "description": "Days during the week when maintenance should be performed.",
          "items": {
            "$ref": "#/definitions/DayOfWeek"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "hoursOfDay": {
          "type": "array",
          "description": "The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Valid values are - 0 - represents time slot 0:00 - 3:59 UTC - 4 - represents time slot 4:00 - 7:59 UTC - 8 - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot 20:00 - 23:59 UTC",
          "items": {
            "type": "integer",
            "format": "uint32"
          }
        },
        "leadTimeInWeeks": {
          "type": "integer",
          "format": "uint32",
          "description": "Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between 1 to 4. "
        },
        "patchingMode": {
          "$ref": "#/definitions/PatchingMode",
          "description": "Cloud Exadata infrastructure node patching method."
        },
        "customActionTimeoutInMins": {
          "type": "integer",
          "format": "uint32",
          "description": "Determines the amount of time the system will wait before the start of each database server patching operation. Custom action timeout is in minutes and valid value is between 15 to 120 (inclusive).",
          "minimum": 0,
          "maximum": 120
        },
        "isCustomActionTimeoutEnabled": {
          "type": "boolean",
          "description": "If true, enables the configuration of a custom action timeout (waiting period) between database server patching operations."
        },
        "isMonthlyPatchingEnabled": {
          "type": "boolean",
          "description": "is Monthly Patching Enabled"
        }
      }
    },
    "Month": {
      "type": "object",
      "description": "Month resource properties",
      "properties": {
        "name": {
          "$ref": "#/definitions/MonthName",
          "description": "Name of the month of the year."
        }
      },
      "required": [
        "name"
      ]
    },
    "MonthName": {
      "type": "string",
      "description": "MonthName enum",
      "enum": [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "August",
        "September",
        "October",
        "November",
        "December"
      ],
      "x-ms-enum": {
        "name": "MonthName",
        "modelAsString": true,
        "values": [
          {
            "name": "January",
            "value": "January",
            "description": "January value"
          },
          {
            "name": "February",
            "value": "February",
            "description": "February value"
          },
          {
            "name": "March",
            "value": "March",
            "description": "March value"
          },
          {
            "name": "April",
            "value": "April",
            "description": "April value"
          },
          {
            "name": "May",
            "value": "May",
            "description": "May value"
          },
          {
            "name": "June",
            "value": "June",
            "description": "June value"
          },
          {
            "name": "July",
            "value": "July",
            "description": "July value"
          },
          {
            "name": "August",
            "value": "August",
            "description": "August value"
          },
          {
            "name": "September",
            "value": "September",
            "description": "September value"
          },
          {
            "name": "October",
            "value": "October",
            "description": "October value"
          },
          {
            "name": "November",
            "value": "November",
            "description": "November value"
          },
          {
            "name": "December",
            "value": "December",
            "description": "December value"
          }
        ]
      }
    },
    "NsgId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/networkSecurityGroups"
          }
        ]
      }
    },
    "OciAccountDetails": {
      "type": "object",
      "description": "OCI Account Details model",
      "properties": {
        "ociTenantName": {
          "type": "string",
          "description": "OCI Tenant name",
          "readOnly": true
        }
      }
    },
    "OciTenancyProvisioningState": {
      "type": "string",
      "description": "OciTenancyProvisioningState enum",
      "enum": [
        "Pending",
        "Provisioning",
        "ProvisioningHold",
        "Provisioned",
        "Available",
        "Terminating",
        "Terminated"
      ],
      "x-ms-enum": {
        "name": "OciTenancyProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Pending value"
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning value"
          },
          {
            "name": "ProvisioningHold",
            "value": "ProvisioningHold",
            "description": "ProvisioningHold value"
          },
          {
            "name": "Provisioned",
            "value": "Provisioned",
            "description": "Provisioned value"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available value"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Terminating value"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Terminated value"
          }
        ]
      }
    },
    "Ocid": {
      "type": "string",
      "description": "The [OCID](/Content/General/Concepts/identifiers.htm) of the resource.",
      "minLength": 1,
      "maxLength": 255
    },
    "OracleSubscription": {
      "type": "object",
      "description": "OracleSubscription resource definition",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OracleSubscriptionProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "OracleSubscriptionListResult": {
      "type": "object",
      "description": "The response of a OracleSubscription list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The OracleSubscription items on this page",
          "items": {
            "$ref": "#/definitions/OracleSubscription"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "OracleSubscriptionProperties": {
      "type": "object",
      "description": "Oracle Subscription resource model",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/OracleSubscriptionProvisioningState",
          "description": "OracleSubscriptionProvisioningState provisioning state",
          "readOnly": true
        },
        "oracleSubscriptionId": {
          "$ref": "#/definitions/Ocid",
          "description": "OracleSubscription Id generated by SPMR",
          "readOnly": true
        },
        "ociTenantId": {
          "$ref": "#/definitions/Ocid",
          "description": "OCI Tenancy Id",
          "readOnly": true
        },
        "ociTenantState": {
          "$ref": "#/definitions/OciTenancyProvisioningState",
          "description": "OCI Tenancy provisioning state.",
          "readOnly": true
        }
      }
    },
    "OracleSubscriptionProvisioningState": {
      "type": "string",
      "description": "OracleSubscriptionProvisioningState enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "OracleSubscriptionProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      }
    },
    "OracleSubscriptionUpdate": {
      "type": "object",
      "description": "The type used for update operations of the OracleSubscription.",
      "properties": {
        "plan": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Plan",
          "description": "Details of the resource plan."
        }
      }
    },
    "Password": {
      "type": "string",
      "format": "password",
      "x-ms-secret": true
    },
    "PatchingMode": {
      "type": "string",
      "description": "PatchingMode enum",
      "enum": [
        "Rolling",
        "Nonrolling"
      ],
      "x-ms-enum": {
        "name": "PatchingMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Rolling",
            "value": "Rolling",
            "description": "Rolling value"
          },
          {
            "name": "Nonrolling",
            "value": "Nonrolling",
            "description": "Nonrolling value"
          }
        ]
      }
    },
    "PatchingStatus": {
      "type": "string",
      "description": "PatchingStatus enum for Maintenance Run",
      "enum": [
        "Patching",
        "Waiting",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "PatchingStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Patching",
            "value": "Patching",
            "description": "Patching value"
          },
          {
            "name": "Waiting",
            "value": "Waiting",
            "description": "Waiting value"
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "Scheduled value"
          }
        ]
      }
    },
    "Preference": {
      "type": "string",
      "description": "Preference enum",
      "enum": [
        "NoPreference",
        "CustomPreference"
      ],
      "x-ms-enum": {
        "name": "Preference",
        "modelAsString": true,
        "values": [
          {
            "name": "NoPreference",
            "value": "NoPreference",
            "description": "NoPreference value"
          },
          {
            "name": "CustomPreference",
            "value": "CustomPreference",
            "description": "CustomPreference value"
          }
        ]
      }
    },
    "SubnetId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks/subnets"
          }
        ]
      }
    },
    "ValidationError": {
      "type": "object",
      "description": "validation error",
      "properties": {
        "code": {
          "type": "string",
          "description": "error code"
        },
        "message": {
          "type": "string",
          "description": "error message"
        }
      },
      "required": [
        "code",
        "message"
      ]
    },
    "ValidationResult": {
      "type": "object",
      "description": "validation result",
      "properties": {
        "status": {
          "$ref": "#/definitions/ValidationStatus",
          "description": "validation status"
        },
        "error": {
          "$ref": "#/definitions/ValidationError",
          "description": "validation error"
        }
      },
      "required": [
        "status",
        "error"
      ]
    },
    "ValidationStatus": {
      "type": "string",
      "description": "validation status",
      "enum": [
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "ValidationStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Succeeded value"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Failed value"
          }
        ]
      }
    },
    "Versions": {
      "type": "string",
      "description": "Versions for API",
      "enum": [
        "2023-09-01-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v20230701",
            "value": "2023-09-01-preview",
            "description": "2023-09-01-preview"
          }
        ]
      }
    },
    "VirtualMachine": {
      "type": "object",
      "description": "The virtual machine resource belonging to vmCluster",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualMachineListResult": {
      "type": "object",
      "description": "The response of a VirtualMachine list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualMachine items on this page",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualMachineProperties": {
      "type": "object",
      "description": "The properties of VirtualMachineResource",
      "properties": {
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Virtual machine OCID",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ocpuCount": {
          "type": "integer",
          "format": "uint32",
          "description": "Virtual machine ocpu count",
          "readOnly": true
        },
        "memory": {
          "type": "integer",
          "format": "uint32",
          "description": "Virtual machine memory",
          "readOnly": true
        },
        "localStorage": {
          "type": "integer",
          "format": "uint32",
          "description": "Local storage",
          "readOnly": true
        },
        "floatingAddress": {
          "$ref": "#/definitions/Azure.Core.ipV4Address",
          "description": "Floating address",
          "readOnly": true
        },
        "privateIpAddress": {
          "$ref": "#/definitions/Azure.Core.ipV4Address",
          "description": "Private Ip address",
          "readOnly": true
        },
        "dnsName": {
          "type": "string",
          "description": "Virtual machine dns name",
          "readOnly": true
        },
        "dbServerName": {
          "type": "string",
          "description": "DB Server name",
          "readOnly": true
        },
        "dbServerUrl": {
          "type": "string",
          "description": "DB Server link",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/VirtualMachineProvisioningState",
          "description": "Provisioning state"
        }
      },
      "required": [
        "ocid",
        "ocpuCount",
        "memory",
        "localStorage",
        "dbServerName",
        "dbServerUrl"
      ]
    },
    "VirtualMachineProvisioningState": {
      "type": "string",
      "description": "VirtualMachine provisioning state enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Available",
        "Updating",
        "Terminating",
        "Terminated",
        "Stopping",
        "Stopped",
        "Starting"
      ],
      "x-ms-enum": {
        "name": "VirtualMachineProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning value"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available value"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Updating value"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Terminating value"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Terminated value"
          },
          {
            "name": "Stopping",
            "value": "Stopping",
            "description": "Stopping value"
          },
          {
            "name": "Stopped",
            "value": "Stopped",
            "description": "Stopped value"
          },
          {
            "name": "Starting",
            "value": "Starting",
            "description": "Starting value"
          }
        ]
      }
    },
    "VirtualNetworkAddress": {
      "type": "object",
      "description": "Virtual IP resource belonging to a vm cluster resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkAddressProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "VirtualNetworkAddressListResult": {
      "type": "object",
      "description": "The response of a VirtualNetworkAddress list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The VirtualNetworkAddress items on this page",
          "items": {
            "$ref": "#/definitions/VirtualNetworkAddress"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "VirtualNetworkAddressProperties": {
      "type": "object",
      "description": "virtualNetworkAddress resource properties",
      "properties": {
        "ipAddress": {
          "$ref": "#/definitions/Azure.Core.ipV4Address",
          "description": "Virtual network Address address.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "vmOcid": {
          "$ref": "#/definitions/Ocid",
          "description": "Virtual Machine OCID.",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "ocid": {
          "$ref": "#/definitions/Ocid",
          "description": "Application VIP OCID.",
          "readOnly": true
        },
        "domain": {
          "type": "string",
          "description": "Virtual network address fully qualified domain name.",
          "readOnly": true
        },
        "lifecycleDetails": {
          "type": "string",
          "description": "Additional information about the current lifecycle state of the application virtual IP (VIP) address.",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/VirtualNetworkAddressProvisioningState",
          "description": "virtual network address provisioning state.",
          "readOnly": true
        },
        "timeAssigned": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the create operation for the application virtual IP (VIP) address completed.",
          "readOnly": true
        }
      },
      "required": [
        "ocid"
      ]
    },
    "VirtualNetworkAddressProvisioningState": {
      "type": "string",
      "description": "VirtualNetworkAddressProvisioningState enum",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Available",
        "Terminating",
        "Terminated"
      ],
      "x-ms-enum": {
        "name": "VirtualNetworkAddressProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "Provisioning value"
          },
          {
            "name": "Available",
            "value": "Available",
            "description": "Available value"
          },
          {
            "name": "Terminating",
            "value": "Terminating",
            "description": "Terminating value"
          },
          {
            "name": "Terminated",
            "value": "Terminated",
            "description": "Terminated value"
          }
        ]
      }
    },
    "VnetId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/virtualNetworks"
          }
        ]
      }
    }
  },
  "parameters": {}
}
