{
  "swagger": "2.0",
  "info": {
    "version": "2022-04-22-privatepreview",
    "title": "cleanroomservice",
    "description": "Description of the new service",
    "x-ms-code-generation-settings": {
      "name": "cleanroomserviceClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CleanRoom/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available RP operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "BatchAccountDelete": {
            "$ref": "./examples/ListOperationsByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResultList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CleanRoom/cleanrooms/{cleanroomName}": {
      "put": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_Create",
        "description": "Create Or Update Cleanroom.",
        "summary": "Implements Cleanroom PUT method.",
        "x-ms-examples": {
          "CreateCleanroom": {
            "$ref": "./examples/CreateCleanroom.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "cleanroomName",
            "required": true,
            "type": "string",
            "description": "Name of the Cleanroom."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/Cleanroom"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cleanroom"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Cleanroom"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_Get",
        "summary": "Gets a Cleanroom.",
        "description": "Implements Cleanroom GET method.",
        "x-ms-examples": {
          "GetCleanroom": {
            "$ref": "./examples/GetCleanroom.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "cleanroomName",
            "required": true,
            "type": "string",
            "description": "Name of the Cleanroom."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cleanroom"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_Update",
        "summary": "Updates a Cleanroom.",
        "description": "API to update certain properties of the Cleanroom resource.",
        "x-ms-examples": {
          "UpdateCleanroom": {
            "$ref": "./examples/UpdateCleanroom.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "cleanroomName",
            "required": true,
            "type": "string",
            "description": "Name of the Cleanroom."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "$ref": "#/definitions/ResourcePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Cleanroom"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_Delete",
        "summary": "Deletes an Cleanroom.",
        "description": "Implements Cleanroom DELETE method.",
        "x-ms-examples": {
          "DeleteCleanroom": {
            "$ref": "./examples/DeleteCleanroom.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "cleanroomName",
            "required": true,
            "type": "string",
            "description": "Name of the Cleanroom."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CleanRoom/cleanrooms": {
      "get": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_List",
        "summary": "Implements GET Cleanrooms in a subscription.",
        "description": "List of Cleanrooms in a subscription.",
        "x-ms-examples": {
          "ListCleanrooms": {
            "$ref": "./examples/ListCleanrooms.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CleanroomsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CleanRoom/cleanrooms": {
      "get": {
        "tags": [
          "Cleanrooms"
        ],
        "operationId": "Cleanrooms_ListByResourceGroup",
        "summary": "Implements GET Cleanrooms in a resource group.",
        "description": "List of Cleanrooms in a resource group.",
        "x-ms-examples": {
          "ListCleanroomsByResourceGroup": {
            "$ref": "./examples/ListCleanroomsByResourceGroup.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CleanroomsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CleanRoom/microservices/{microserviceName}": {
      "put": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_Create",
        "description": "Create Or Update Microservice.",
        "summary": "Implements Microservice PUT method.",
        "x-ms-examples": {
          "CreateMicroservice": {
            "$ref": "./examples/CreateMicroservice.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "microserviceName",
            "required": true,
            "type": "string",
            "description": "Name of the Microservice."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/Microservice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microservice"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Microservice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_Get",
        "summary": "Gets a Microservice.",
        "description": "Implements Microservice GET method.",
        "x-ms-examples": {
          "GetMicroservice": {
            "$ref": "./examples/GetMicroservice.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "microserviceName",
            "required": true,
            "type": "string",
            "description": "Name of the Microservice."
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microservice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_Update",
        "summary": "Updates a Microservice.",
        "description": "API to update certain properties of the Microservice resource.",
        "x-ms-examples": {
          "UpdateMicroservice": {
            "$ref": "./examples/UpdateMicroservice.json"
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "microserviceName",
            "required": true,
            "type": "string",
            "description": "Name of the Microservice."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Resource properties to update.",
            "schema": {
              "$ref": "#/definitions/ResourcePatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Microservice"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_Delete",
        "summary": "Deletes an Microservice.",
        "description": "Implements Microservice DELETE method.",
        "x-ms-examples": {
          "DeleteMicroservice": {
            "$ref": "./examples/DeleteMicroservice.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "in": "path",
            "name": "microserviceName",
            "required": true,
            "type": "string",
            "description": "Name of the Microservice."
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "query",
            "name": "force",
            "description": "Whether force delete was specified.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "description": "The URL of the resource used to check the status of the asynchronous operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.CleanRoom/microservices": {
      "get": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_List",
        "summary": "Implements GET Microservices in a subscription.",
        "description": "List of Microservices in a subscription.",
        "x-ms-examples": {
          "ListMicroservices": {
            "$ref": "./examples/ListMicroservices.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MicroservicesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.CleanRoom/microservices": {
      "get": {
        "tags": [
          "Microservices"
        ],
        "operationId": "Microservices_ListByResourceGroup",
        "summary": "Implements GET Microservices in a resource group.",
        "description": "List of Microservices in a resource group.",
        "x-ms-examples": {
          "ListMicroservicesByResourceGroup": {
            "$ref": "./examples/ListMicroservicesByResourceGroup.json"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MicroservicesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "ResourcePatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      },
      "description": "Object containing updates for patch operations."
    },
    "ResultList": {
      "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Result"
          },
          "description": "List of Resource Provider operations supported by the Resource Provider resource provider.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "Result": {
      "type": "object",
      "description": "Sample result definition",
      "properties": {
        "sampleProperty": {
          "type": "string",
          "description": "Sample property of type string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition.",
      "properties": {
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "Cleanroom": {
      "description": "Defines the clean room.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/CleanroomProperties"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "CleanroomsList": {
      "description": "List of Cleanrooms.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of Cleanrooms.",
          "type": "string"
        },
        "value": {
          "description": "Array of Cleanrooms",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cleanroom"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "CleanroomProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "providerType": {
          "description": "Gets or sets the infrastructure provider for the clean room.",
          "type": "string"
        },
        "specification": {
          "description": "Gets or sets the specification of the clean room to be deployed.",
          "$ref": "#/definitions/CleanRoomSpecification"
        },
        "provisioningState": {
          "description": "Gets or sets the provisioning state.",
          "type": "string",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "description": "Gets or sets the managed resoure group configuration.",
          "$ref": "#/definitions/ManagedResourceGroupConfiguration"
        }
      }
    },
    "ManagedResourceGroupConfiguration": {
      "description": "Defines the managed resoure group configuration.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the managed resource group.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location of the managed resource group.",
          "type": "string"
        }
      }
    },
    "CleanRoomSpecification": {
      "description": "Defines the clean room specification.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the deployment name of the clean room.",
          "type": "string"
        },
        "networkAddress": {
          "description": "Gets or sets the IP address to be used for the clean room.",
          "type": "string"
        },
        "networkAddressType": {
          "description": "Gets or sets the type of IP address to be used for the service endpoint.",
          "type": "string",
          "enum": [
            "Private",
            "Public"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "networkAddressType"
          }
        },
        "ports": {
          "description": "Gets or sets the collection of ports to be exposed on the clean room.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPort"
          },
          "x-ms-identifiers": []
        }
      }
    },
    "Microservice": {
      "description": "Defines the Microservice.",
      "required": [
        "location",
        "properties"
      ],
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/MicroserviceProperties"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Gets or sets the Id.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the type of the resource.",
          "type": "string",
          "readOnly": true
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        }
      }
    },
    "MicroservicesList": {
      "description": "List of Microservices.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of Microservices.",
          "type": "string"
        },
        "value": {
          "description": "Array of Microservices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Microservice"
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "value"
      ]
    },
    "MicroserviceProperties": {
      "description": "Defines the resource properties.",
      "type": "object",
      "properties": {
        "cleanRoomId": {
          "description": "Gets or sets the ID of the clean room in which the microservice should be deployed.",
          "type": "string"
        },
        "specification": {
          "description": "Gets or sets the specification of the microservice to be deployed.",
          "$ref": "#/definitions/MicroServiceSpecification"
        },
        "provisioningState": {
          "description": "Gets or sets the provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "MicroServiceSpecification": {
      "description": "Defines the micro service specification.",
      "type": "object",
      "properties": {
        "sandboxConfiguration": {
          "$ref": "#/definitions/SandboxConfiguration"
        },
        "networkAddressType": {
          "description": "Gets or sets the type of IP address to be used for the service endpoint.",
          "type": "string",
          "enum": [
            "Private",
            "Public"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "networkAddressType"
          }
        },
        "networkAddress": {
          "description": "Gets or sets the IP address to be used for the service endpoint.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port to be used for the service endpoint.",
          "$ref": "#/definitions/NetworkPort"
        },
        "applicationContainers": {
          "description": "Gets or sets the set of application containers that make up one instance of the service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecification"
          },
          "x-ms-identifiers": []
        },
        "privilegedContainers": {
          "description": "Gets or sets the set of privileged containers that make up one instance of the service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerSpecification"
          },
          "x-ms-identifiers": []
        },
        "instanceCount": {
          "description": "Gets or sets the number of instances of the service to be brought up.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SandboxConfiguration": {
      "description": "Configuration details for the sandbox infrastructure preventing data exfiltration from the micro service.",
      "type": "object",
      "properties": {
        "scenario": {
          "description": "Gets or sets the scenario for which the sandbox is to be configured.",
          "type": "string",
          "enum": [
            "None",
            "SahamatiLending",
            "Generic"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "scenario"
          }
        },
        "scenarioVersion": {
          "description": "Gets or sets the version of the scenario for which the sandbox is to be configured.",
          "type": "string"
        },
        "policyUrl": {
          "description": "Gets or sets the URL of the policy to be applied for preventing data exfiltration from the micro service.",
          "type": "string"
        },
        "policyDataJson": {
          "description": "Gets or sets any additional data required for applying the policy (JSON serialized).",
          "type": "string"
        }
      }
    },
    "NetworkPort": {
      "description": "Describes the ports to be used in the container.",
      "type": "object",
      "properties": {
        "port": {
          "description": "Gets or sets the port.",
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "description": "Gets or sets the protocol.",
          "type": "string",
          "enum": [
            "TCP",
            "UDP"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "protocol"
          }
        }
      }
    },
    "ContainerSpecification": {
      "description": "Describes properties of a container instance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the name of the container.",
          "type": "string"
        },
        "image": {
          "description": "Gets or sets the name of the image to be used for creating the container instance.",
          "type": "string"
        },
        "command": {
          "description": "Gets or sets the commands to execute within the container instance in exec form.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "environmentVariables": {
          "description": "Gets or sets the collection of environment variables to be set in the container instance.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ports": {
          "description": "Gets or sets the collection of ports to be exposed on the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkPort"
          },
          "x-ms-identifiers": []
        },
        "resourceRequirement": {
          "description": "Gets or sets the resource requirements of the container.",
          "$ref": "#/definitions/ResourceRequirement"
        }
      }
    },
    "ResourceRequirement": {
      "description": "Describes the resource requirements of a container.",
      "type": "object",
      "properties": {
        "requests": {
          "description": "Gets or sets the requests for the resources.",
          "$ref": "#/definitions/ContainerResource"
        },
        "limits": {
          "description": "Gets or sets the limits for the resources.",
          "$ref": "#/definitions/ContainerResource",
          "x-nullable": true
        }
      }
    },
    "ContainerResource": {
      "description": "Describes the resource for a container.",
      "type": "object",
      "properties": {
        "cpu": {
          "description": "Gets or sets the number of CPUs required.",
          "type": "number",
          "format": "decimal"
        },
        "memoryInGb": {
          "description": "Gets or sets the memory in GB.",
          "type": "number",
          "format": "decimal"
        }
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request."
    }
  }
}
