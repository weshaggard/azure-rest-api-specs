{
  "swagger": "2.0",
  "info": {
    "title": "IoT Workspaces Assets Resource Provider",
    "version": "2022-05-21-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTWorkspaces/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "List_Assets_Subscription",
        "description": "List all assets in a subscription.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Assets.",
            "schema": {
              "$ref": "#/definitions/AssetResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTWorkspaces/assets": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "List_Assets_In_ResourceGroup",
        "description": "List all assets in a resource group.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Assets.",
            "schema": {
              "$ref": "#/definitions/AssetResponseList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTWorkspaces/assets/{assetName}": {
      "put": {
        "tags": [
          "Assets"
        ],
        "operationId": "Create_Or_Update_Asset",
        "description": "Create a new asset or update an existing asset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetNameParameter"
          },
          {
            "name": "asset",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/AssetCreateOrUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "Created or updated Asset.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "201": {
            "x-nullable": false,
            "description": "Async operation to create or update the Asset.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Assets"
        ],
        "operationId": "Update_Asset",
        "description": "Update specific asset properties.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetNameParameter"
          },
          {
            "name": "asset",
            "in": "body",
            "required": true,
            "description": "Resource Patch parameters.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Patched Asset.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "201": {
            "x-nullable": false,
            "description": "Async operation to patch the Asset.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Assets"
        ],
        "operationId": "Delete_Asset",
        "description": "Delete an asset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Async operation to delete the Asset."
          },
          "204": {
            "description": "Asset delete successful."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "Read_Asset.",
        "description": "Retrieve a single asset.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/assetNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Asset.",
            "schema": {
              "$ref": "#/definitions/Asset"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.IoTWorkspaces/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "tags": [
          "Assets"
        ],
        "operationId": "Get_Operation_Status",
        "description": "Returns the current status of an async operation.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Requested operation status.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.IoTWorkspaces/operations": {
      "get": {
        "description": "Returns list of operations.",
        "operationId": "Operation_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Operations returned if request was successful.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response returned if request was unsuccessful.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "parameters": {
    "assetNameParameter": {
      "name": "assetName",
      "description": "Asset name parameter.",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3
    }
  },
  "definitions": {
    "AssetResponseList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "List of Assets."
    },
    "Asset": {
      "type": "object",
      "required": [
        "extendedLocation"
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/AssetProperties",
          "description": "Asset resource properties."
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetCreateOrUpdate": {
      "type": "object",
      "required": [
        "extendedLocation"
      ],
      "properties": {
        "properties": {
          "required": [
            "connectivityProfileUri"
          ],
          "$ref": "#/definitions/AssetProperties",
          "description": "Asset resource properties."
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "AssetProperties": {
      "description": "Defines the asset properties.",
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Globally unique, immutable, non-reusable id.",
          "format": "uuid",
          "readOnly": true
        },
        "assetType": {
          "type": "string",
          "description": "Resource path to asset type (model) definition."
        },
        "enabled": {
          "type": "boolean",
          "description": "Enabled/Disabled status of the asset."
        },
        "externalAssetId": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "Asset id provided by the customer."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable display name."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the asset."
        },
        "connectivityProfileUri": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "A reference to the connectivity profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format <ModuleCR.metadata.namespace>/<ModuleCR.metadata.name>."
        },
        "version": {
          "type": "integer",
          "description": "An integer that is incremented each time the resource is modified.",
          "readOnly": true
        },
        "manufacturer": {
          "type": "string",
          "description": "Asset manufacturer name."
        },
        "manufacturerUri": {
          "type": "string",
          "description": "Asset manufacturer URI."
        },
        "model": {
          "type": "string",
          "description": "Asset model name."
        },
        "productCode": {
          "type": "string",
          "description": "Asset product code."
        },
        "hardwareRevision": {
          "type": "string",
          "description": "Revision number of the hardware."
        },
        "softwareRevision": {
          "type": "string",
          "description": "Revision number of the software."
        },
        "documentationUri": {
          "type": "string",
          "description": "Reference to the documentation."
        },
        "serialNumber": {
          "type": "string",
          "description": "Asset serial number."
        },
        "defaultDataPointsConfiguration": {
          "type": "object",
          "additionalProperties": { },
          "description": "Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol."
        },
        "defaultEventsConfiguration": {
          "type": "object",
          "additionalProperties": { },
          "description": "Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol."
        },
        "dataPoints": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "dataSource"
            ],
            "properties": {
              "dataSource": {
                "type": "string",
                "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset."
              },
              "capabilityId": {
                "type": "string",
                "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1."
              },
              "observabilityMode": {
                "type": "string",
                "enum": [
                  "none",
                  "counter",
                  "gauge",
                  "histogram"
                ],
                "description": "An indication of how the data point should be mapped to OpenTelemetry (none, histogram, gauge, counter, etc.)."
              },
              "dataPointConfiguration": {
                "type": "object",
                "additionalProperties": { },
                "description": "Protocol-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
              }
            }
          },
          "description": "Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element."
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "eventSource"
            ],
            "properties": {
              "eventSource": {
                "type": "string",
                "description": "The address of the source of the event in the asset (e.g. URL) so that a client can access the event on the asset."
              },
              "capabilityId": {
                "type": "string",
                "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1."
              },
              "observabilityMode": {
                "type": "string",
                "enum": [
                  "none",
                  "counter",
                  "gauge",
                  "histogram"
                ],
                "description": "An indication of how the event should be mapped to OpenTelemetry (none, histogram, gauge, counter, etc.)."
              },
              "eventConfiguration": {
                "type": "object",
                "additionalProperties": { },
                "description": "Protocol-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize."
              }
            }
          },
          "description": "Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element."
        },
        "status": {
          "type": "object",
          "readOnly": true,
          "properties": {
            "errors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "integer",
                    "description": "Error code for classification of errors (ex: 400, 404, 500, etc.)."
                  },
                  "message": {
                    "type": "string",
                    "description": "Human readable helpful error message to provide additional context for error (ex: “capability Id 'foo' does not exist”)."
                  }
                }
              },
              "description": "Array object to transfer and persist errors that originate from the Edge."
            },
            "version": {
              "type": "integer",
              "description": "A read only incremental counter indicating the number of times the configuration has been modified from the perspective of the current actual (Edge) state of the Asset. Edge would be the only writer of this value and would sync back up to the cloud. In steady state, this should equal version."
            }
          },
          "description": "Read only object to reflect changes that have occurred on the Edge. Similar to Kubernetes status property for custom resources."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the resource.",
          "readOnly": true
        }
      }
    }
  }
}