{
  "swagger": "2.0",
  "info": {
      "title": "Asset Schema Resource Provider",
      "description": "Asset schema definition.",
      "version": "2023-09-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
      "https"
  ],
  "consumes": [
      "application/json"
  ],
  "produces": [
      "application/json"
  ],
  "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.DeviceRegistry/schemaRegistries/{resourceId}/assetSchemas": {
      "get": {
          "tags": [
          "AssetSchemas"
          ],
          "operationId": "AssetSchemas_ListBySchemaRegistry",
          "description": "List all asset schemas in a schema registry.",
          "parameters": [
          {
              "$ref": "#/parameters/api-version"
          },
          {
              "$ref": "#/parameters/subscriptionId"
          },
          {
              "$ref": "#/parameters/resourceGroupName"
          },
          {
              "$ref": "#/parameters/resourceId"
          }
          ],
          "responses": {
          "200": {
              "description": "List of Asset Schemas.",
              "schema": {
              "$ref": "#/definitions/AssetSchemaResponseList"
              }
          },
          "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
          }
          },
          "x-ms-pageable": {
          "nextLinkName": "nextLink"
          }
      }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.DeviceRegistry/schemaRegistries/{schemaRegistryId}/assetSchemas/{resourceId}": {
      "get": {
          "tags": [
          "AssetSchemas"
          ],
          "operationId": "AssetSchemas_GetById",
          "description": "Get asset schema in a schema registry by id.",
          "parameters": [
          {
              "$ref": "#/parameters/api-version"
          },
          {
              "$ref": "#/parameters/subscriptionId"
          },
          {
              "$ref": "#/parameters/resourceGroupName"
          },
          {
              "$ref": "#/parameters/resourceId"
          },
          {
              "$ref": "#/parameters/schemaRegistryId"
          }
          ],
          "responses": {
          "200": {
              "description": "The Asset Schema with id.",
              "schema": {
              "$ref": "#/definitions/AssetSchema"
              }
          },
          "default": {
              "description": "Error response describing why the operation failed.",
              "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
          }
          }
      },
      "put": {
          "tags": [
          "AssetSchemas"
          ],
          "description": "Create an asset schema definition.",
          "operationId": "AssetSchemas_Create",
          "parameters": [
          {
              "$ref": "#/parameters/api-version"
          },
          {
              "$ref": "#/parameters/subscriptionId"
          },
          {
              "$ref": "#/parameters/resourceGroupName"
          },
          {
              "$ref": "#/parameters/resourceId"
          },
          {
              "$ref": "#/parameters/schemaRegistryId"
          },
          {
              "name": "AssetSchema",
              "in": "body",
              "description": "The asset schema definition metadata.",
              "required": true,
              "schema": {
              "$ref": "#/definitions/AssetSchema"
              }
          }
          ],
          "responses": {
          "201": {
              "description": "Create request is being processed. The body contains the resource representation that indicates a transitional provisioning state.",
              "headers": {
              "Azure-AsyncOperation": {
                  "description": "URL to query for status of the operation. Returns current state, progress, and error metadata for the operation.",
                  "type": "string"
              },
              "Retry-After": {
                  "description": "How long the user should wait before making a follow-up request.",
                  "type": "string"
              }
              },
              "schema": {
              "$ref": "#/definitions/AssetSchema"
              }
          },
          "default": {
              "description": "DefaultErrorResponse",
              "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
          }
          },
          "deprecated": false,
          "x-ms-long-running-operation": true
      },
      "delete": {
          "tags": [
          "AssetSchemas"
          ],
          "description": "Delete an asset schema definition.",
          "operationId": "AssetSchemas_Delete",
          "parameters": [
          {
              "$ref": "#/parameters/api-version"
          },
          {
              "$ref": "#/parameters/subscriptionId"
          },
          {
              "$ref": "#/parameters/resourceGroupName"
          },
          {
              "$ref": "#/parameters/resourceId"
          },
          {
              "$ref": "#/parameters/schemaRegistryId"
          }
          ],
          "responses": {
          "202": {
              "description": "Accepted - Delete request accepted; the operation will complete asynchronously.",
              "headers": {
              "Location": {
                  "description": "URL to query for status of the operation. Returns 202 Accepted while the operation is in progress.",
                  "type": "string"
              }
              }
          },
          "204": {
              "description": "If the resource does not exist, a 204 No Content status code is returned."
          },
          "default": {
              "description": "DefaultErrorResponse",
              "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
              }
          }
          },
          "deprecated": false,
          "x-ms-long-running-operation": true
      }
      }
  },
  "definitions": {
      "AssetSchemaResponseList": {
      "type": "object",
      "properties": {
          "value": {
          "type": "array",
          "items": {
              "$ref": "#/definitions/AssetSchema"
          }
          },
          "nextLink": {
          "type": "string"
          }
      },
      "description": "List of AssetSchemas."
      },
      "AssetSchema": {
      "type": "object",
      "properties": {
          "properties": {
          "$ref": "#/definitions/AssetSchemaProperties",
          "description": "Asset Type Resource properties."
          }
      },
      "allOf": [
          {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
          }
      ]
      },
      "AssetSchemaProperties": {
      "description": "Defines the Asset Type properties.",
      "type": "object",
      "properties": {
          "uuid": {
          "description": "Globally unique, immutable, non-reusable id for the asset type.",
          "type": "string",
          "readOnly": true
          },
          "name": {
          "description": "Name of the asset type.",
          "type": "string"
          },
          "schema": {
          "type": "string",
          "description": "An string containing all user-defined properties of the asset type."
          }
      }
      }
  },
  "parameters": {
      "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "The subscription identifier.",
      "required": true,
      "type": "string"
      },
      "api-version": {
      "name": "api-version",
      "in": "query",
      "description": "The version of the API.",
      "required": true,
      "type": "string"
      },
      "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group that contains the schema registry definition.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
      },
      "resourceId": {
      "name": "resourceId",
      "in": "path",
      "description": "The resource id of the asset schema definition.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
      },
      "schemaRegistryId": {
      "name": "schemaRegistryId",
      "in": "path",
      "description": "The id of the schema registry definition.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
      }
  }
}