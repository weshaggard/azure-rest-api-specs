{
    "swagger": "2.0",
    "info": {
      "title": "Crossplane",
      "description": "The Microsoft.Crossplane Rest API spec.",
      "version": "2021-06-01-preview",
      "x-ms-code-generation-settings": {
        "name": "CrossplaneClient"
      }
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Crossplane/virtualMachines/{virtualMachinesName}": {
        "get": {
          "operationId": "virtualMachines_Retrieve",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/virtualMachinesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Retrieves the virtualMachines resource.",
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            }
          }
        },
        "put": {
          "operationId": "virtualMachines_CreateOrUpdate",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/virtualMachinesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "name": "virtualMachines",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the virtualMachines resource.",
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            },
            "201": {
              "description": "Creates the virtualMachines resource.",
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            }
          }
        },
        "delete": {
          "operationId": "virtualMachines_Delete",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/virtualMachinesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Deletes the virtualMachines resource."
            }
          }
        },
        "patch": {
          "operationId": "virtualMachines_Update",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/virtualMachinesNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "name": "virtualMachines",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/virtualMachinesPatch"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Updates the virtualMachines resource.",
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            },
            "201": {
              "description": "Updates the virtualMachines resource.",
              "schema": {
                "$ref": "#/definitions/virtualMachines"
              }
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Crossplane/virtualMachines": {
        "get": {
          "operationId": "virtualMachines_ListByResourceGroup",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists all virtualMachines under the resouce group.",
              "schema": {
                "$ref": "#/definitions/virtualMachinesListResult"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.Crossplane/virtualMachines": {
        "get": {
          "operationId": "virtualMachines_ListBySubscription",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Lists all virtualMachines under the subscription.",
              "schema": {
                "$ref": "#/definitions/virtualMachinesListResult"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      },
      "/providers/Microsoft.Crossplane/operations": {
        "get": {
          "operationId": "Operations_List",
          "parameters": [
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "Describe the result of a successful operation.",
              "schema": {
                "$ref": "#/definitions/ResourceProviderOperationList"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          }
        }
      }
    },
    "definitions": {
      "virtualMachinesProperties": {
        "type": "object",
        "properties": {
          "deletionPolicy": {
            "type": "string",
            "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource.",
            "default": "Delete",
            "enum": [
              "Orphan",
              "Delete"
            ]
          },
          "forProvider": {
            "type": "object",
            "properties": {
              "ElasticGpuSpecification": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "The type of Elastic Graphics accelerator. For more information about the values to specify for Type, see Elastic Graphics Basics (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html#elastic-graphics-basics), specifically the Elastic Graphics accelerator column, in the Amazon Elastic Compute Cloud User Guide for Windows Instances. \n Type is a required field"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "description": "ElasticGPUSpecification is a specification for an Elastic Graphics accelerator."
                },
                "description": "An elastic GPU to associate with the instance. An Elastic GPU is a GPU resource that you can attach to your Windows instance to accelerate the graphics performance of your applications. For more information, see Amazon EC2 Elastic GPUs (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/elastic-graphics.html) in the Amazon Elastic Compute Cloud User Guide."
              },
              "blockDeviceMappings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "deviceName": {
                      "type": "string",
                      "description": "The device name (for example, /dev/sdh or xvdh)."
                    },
                    "ebs": {
                      "type": "object",
                      "properties": {
                        "deleteOnTermination": {
                          "type": "boolean",
                          "description": "Indicates whether the EBS volume is deleted on instance termination. For more information, see Preserving Amazon EBS Volumes on Instance Termination (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#preserving-volumes-on-termination) in the Amazon Elastic Compute Cloud User Guide."
                        },
                        "encrypted": {
                          "type": "boolean",
                          "description": "Indicates whether the encryption state of an EBS volume is changed while being restored from a backing snapshot. The effect of setting the encryption state to true depends on the volume origin (new or from a snapshot), starting encryption state, ownership, and whether encryption by default is enabled. For more information, see Amazon EBS Encryption (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-parameters) in the Amazon Elastic Compute Cloud User Guide. \n In no case can you remove encryption from an encrypted volume. \n Encrypted volumes can only be attached to instances that support Amazon EBS encryption. For more information, see Supported Instance Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances). \n This parameter is not returned by ."
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The number of I/O operations per second (IOPS) that the volume supports. For io1 volumes, this represents the number of IOPS that are provisioned for the volume. For gp2 volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information, see Amazon EBS Volume Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon Elastic Compute Cloud User Guide. \n Constraints: Range is 100-16,000 IOPS for gp2 volumes and 100 to 64,000IOPS for io1 volumes in most Regions. Maximum io1 IOPS of 64,000 is guaranteed only on Nitro-based instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). Other instance families guarantee performance up to 32,000 IOPS. For more information, see Amazon EBS Volume Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the Amazon Elastic Compute Cloud User Guide. \n Condition: This parameter is required for requests to create io1 volumes; it is not used in requests to create gp2, st1, sc1, or standard volumes."
                        },
                        "kmsKeyId": {
                          "type": "string",
                          "description": "Identifier (key ID, key alias, ID ARN, or alias ARN) for a customer managed CMK under which the EBS volume is encrypted. \n This parameter is only supported on BlockDeviceMapping objects called by RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html), RequestSpotFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotFleet.html), and RequestSpotInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RequestSpotInstances.html)."
                        },
                        "kmsKeyIdRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the referenced object."
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "description": "KMSKeyIDRef is a reference to a KMS Key used to set KMSKeyID."
                        },
                        "kmsKeyIdSelector": {
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "type": "boolean",
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected."
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "description": "MatchLabels ensures an object with matching labels is selected."
                            }
                          },
                          "description": "KMSKeyIDSelector selects a reference to a KMS Key used to set KMSKeyID."
                        },
                        "snapshotId": {
                          "type": "string",
                          "description": "The ID of the snapshot."
                        },
                        "volumeSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The size of the volume, in GiB. \n Default: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size. \n Constraints: 1-16384 for General Purpose SSD (gp2), 4-16384 for Provisioned IOPS SSD (io1), 500-16384 for Throughput Optimized HDD (st1), 500-16384 for Cold HDD (sc1), and 1-1024 for Magnetic (standard) volumes. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size."
                        },
                        "volumeType": {
                          "type": "string",
                          "description": "The volume type. If you set the type to io1, you must also specify the Iops parameter. If you set the type to gp2, st1, sc1, or standard, you must omit the Iops parameter. \n Default: gp2"
                        }
                      },
                      "required": [
                        "volumeSize"
                      ],
                      "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
                    },
                    "noDevice": {
                      "type": "string",
                      "description": "Suppresses the specified device included in the block device mapping of the AMI."
                    },
                    "virtualName": {
                      "type": "string",
                      "description": "The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for ephemeral0 and ephemeral1. The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume. \n NVMe instance store volumes are automatically enumerated and assigned a device name. Including them in your block device mapping has no effect. \n Constraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI."
                    }
                  },
                  "required": [
                    "deviceName",
                    "ebs"
                  ],
                  "description": "BlockDeviceMapping describes a block device mapping."
                },
                "description": "The block device mapping entries."
              },
              "capacityReservationSpecification": {
                "type": "object",
                "properties": {
                  "capacityReservationTarget": {
                    "type": "object",
                    "properties": {
                      "capacityReservationId": {
                        "type": "string",
                        "description": "The ID of the Capacity Reservation."
                      }
                    },
                    "description": "Information about the target Capacity Reservation."
                  },
                  "capacityReservationsPreference": {
                    "type": "string",
                    "description": "Indicates the instance's Capacity Reservation preferences. Possible preferences include: \n * open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). \n * none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs as an On-Demand Instance.",
                    "enum": [
                      "open",
                      "none"
                    ]
                  }
                },
                "required": [
                  "capacityReservationsPreference"
                ],
                "description": "Information about the Capacity Reservation targeting option. If you do not specify this parameter, the instance's Capacity Reservation preference defaults to open, which enables it to run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone)."
              },
              "clientToken": {
                "type": "string",
                "description": "Unique, case-sensitive identifier you provide to ensure the idempotency of the request. If you do not specify a client token, a randomly generated token is used for the request to ensure idempotency. \n For more information, see Ensuring Idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html). \n Constraints: Maximum 64 ASCII characters"
              },
              "cpuOptions": {
                "type": "object",
                "properties": {
                  "coreCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of CPU cores for the instance."
                  },
                  "threadsPerCore": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2."
                  }
                },
                "required": [
                  "coreCount",
                  "threadsPerCore"
                ],
                "description": "The CPU options for the instance. For more information, see Optimizing CPU Options (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html) in the Amazon Elastic Compute Cloud User Guide."
              },
              "creditSpecification": {
                "type": "object",
                "properties": {
                  "cpuCredits": {
                    "type": "string",
                    "description": "The credit option for CPU usage of a T2 or T3 instance. Valid values are standard and unlimited. \n CPUCredits is a required field"
                  }
                },
                "required": [
                  "cpuCredits"
                ],
                "description": "The credit option for CPU usage of the burstable performance instance. Valid values are standard and unlimited. To change this attribute after launch, use ModifyInstanceCreditSpecification (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceCreditSpecification.html). For more information, see Burstable Performance Instances (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html) in the Amazon Elastic Compute Cloud User Guide. \n Default: standard (T2 instances) or unlimited (T3/T3a instances)"
              },
              "disableAPITermination": {
                "type": "boolean",
                "description": "If you set this parameter to true, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. To change this attribute after launch, use ModifyInstanceAttribute (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceAttribute.html). Alternatively, if you set InstanceInitiatedShutdownBehavior to terminate, you can terminate the instance by running the shutdown command from the instance. \n Default: false"
              },
              "ebsOptimized": {
                "type": "boolean",
                "description": "Indicates whether the instance is optimized for Amazon EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance. \n Default: false"
              },
              "elasticInferenceAccelerators": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of elastic inference accelerators to attach to the instance. \n Default: 1"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of elastic inference accelerator. The possible values are eia1.medium, eia1.large, and eia1.xlarge. \n Type is a required field"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "description": "ElasticInferenceAccelerator describes an elastic inference accelerator."
                },
                "description": "An elastic inference accelerator to associate with the instance. Elastic inference accelerators are a resource you can attach to your Amazon EC2 instances to accelerate your Deep Learning (DL) inference workloads. \n You cannot specify accelerators from different generations in the same request."
              },
              "hibernationOptions": {
                "type": "object",
                "properties": {
                  "configured": {
                    "type": "boolean",
                    "description": "If you set this parameter to true, your instance is enabled for hibernation. \n Default: false"
                  }
                },
                "description": "Indicates whether an instance is enabled for hibernation. For more information, see Hibernate Your Instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide."
              },
              "iamInstanceProfile": {
                "type": "object",
                "properties": {
                  "arn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the instance profile."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the instance profile."
                  }
                },
                "description": "The IAM instance profile."
              },
              "imageId": {
                "type": "string",
                "description": "The ID of the AMI. An AMI ID is required to launch an instance and must be specified here or in a launch template."
              },
              "instanceInitiatedShutdownBehavior": {
                "type": "string",
                "description": "Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown). \n Default: stop"
              },
              "instanceMarketOptions": {
                "type": "object",
                "properties": {
                  "marketType": {
                    "type": "string",
                    "description": "The market type."
                  },
                  "spotOptions": {
                    "type": "object",
                    "properties": {
                      "blockDurationMinutes": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The required duration for the Spot Instances (also known as Spot blocks), in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360)."
                      },
                      "instanceInterruptionBehavior": {
                        "type": "string",
                        "description": "The behavior when a Spot Instance is interrupted. The default is terminate.",
                        "enum": [
                          "hibernate",
                          "stop",
                          "terminate"
                        ]
                      },
                      "maxPrice": {
                        "type": "string",
                        "description": "The maximum hourly price you're willing to pay for the Spot Instances. The default is the On-Demand price."
                      },
                      "spotInstanceType": {
                        "type": "string",
                        "description": "The Spot Instance request type. For RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances), persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop.",
                        "enum": [
                          "one-time",
                          "persistent"
                        ]
                      },
                      "validUntil": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The end date of the request. For a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached. The default end date is 7 days from the current date. Must be in UTC format (YYYY-MM-DDTHH:MM:SSZ)"
                      }
                    },
                    "required": [
                      "instanceInterruptionBehavior",
                      "spotInstanceType"
                    ],
                    "description": "The options for Spot Instances."
                  }
                },
                "required": [
                  "marketType",
                  "spotOptions"
                ],
                "description": "The market (purchasing) option for the instances. \n For RunInstances, persistent Spot Instance requests are only supported when InstanceInterruptionBehavior is set to either hibernate or stop."
              },
              "instanceType": {
                "type": "string",
                "description": "The instance type. For more information, see Instance Types (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the Amazon Elastic Compute Cloud User Guide. \n Default: m1.small"
              },
              "ipv6AddressCount": {
                "type": "integer",
                "format": "int32",
                "description": "[EC2-VPC] The number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch. \n You cannot specify this option and the network interfaces option in the same request."
              },
              "ipv6Addresses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ipv6Address": {
                      "type": "string",
                      "description": "The IPv6 address."
                    }
                  },
                  "required": [
                    "ipv6Address"
                  ],
                  "description": "InstanceIPv6Address describes an IPv6 address."
                },
                "description": "[EC2-VPC] The IPv6 addresses from the range of the subnet to associate with the primary network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch. \n You cannot specify this option and the network interfaces option in the same request."
              },
              "kernelId": {
                "type": "string",
                "description": "The ID of the kernel. \n AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide."
              },
              "keyName": {
                "type": "string",
                "description": "The name of the key pair. You can create a key pair using CreateKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html) or ImportKeyPair (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html). \n If you do not specify a key pair, you can't connect to the instance unless you choose an AMI that is configured to allow users another way to log in."
              },
              "launchTemplate": {
                "type": "object",
                "properties": {
                  "launchTemplateId": {
                    "type": "string",
                    "description": "The ID of the launch template."
                  },
                  "launchTemplateName": {
                    "type": "string",
                    "description": "The name of the launch template."
                  },
                  "version": {
                    "type": "string",
                    "description": "The version number of the launch template. \n Default: The default version for the launch template."
                  }
                },
                "required": [
                  "launchTemplateId",
                  "launchTemplateName"
                ],
                "description": "The launch template to use to launch the instances. Any parameters that you specify in RunInstances override the same parameters in the launch template. You can specify either the name or ID of a launch template, but not both."
              },
              "licenseSpecifications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "licenseConfigurationArn": {
                      "type": "string",
                      "description": "Amazon Resource Name (ARN) of the license configuration"
                    }
                  },
                  "required": [
                    "licenseConfigurationArn"
                  ],
                  "description": "LicenseConfigurationRequest describes a license configuration"
                },
                "description": "The Amazon Resource Name (ARN) of the license configuration"
              },
              "metadataOptions": {
                "type": "object",
                "properties": {
                  "httpEndpoint": {
                    "type": "string",
                    "description": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled. \n If you specify a value of disabled, you will not be able to access your instance metadata.",
                    "enum": [
                      "enabled",
                      "disabled"
                    ]
                  },
                  "httpPutResponseHopLimit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. \n Default: 1 \n Possible values: Integers from 1 to 64"
                  },
                  "httpTokens": {
                    "type": "string",
                    "description": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional. \n If the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned. \n If the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.",
                    "enum": [
                      "optional",
                      "required"
                    ]
                  }
                },
                "required": [
                  "httpTokens"
                ],
                "description": "The metadata options for the instance. For more information, see Instance Metadata and User Data (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html)."
              },
              "monitoring": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled. \n Enabled is a required field"
                  }
                },
                "required": [
                  "enabled"
                ],
                "description": "Specifies whether detailed monitoring is enabled for the instance."
              },
              "networkInterfaces": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "associatePublicIpAddress": {
                      "type": "boolean",
                      "description": "Indicates whether to assign a public IPv4 address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If launching into a default subnet, the default value is true."
                    },
                    "deleteOnTermination": {
                      "type": "boolean",
                      "description": "If set to true, the interface is deleted when the instance is terminated. You can specify true only if creating a new network interface when launching an instance."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the network interface. Applies only if creating a network interface when launching an instance."
                    },
                    "deviceIndex": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The position of the network interface in the attachment order. A primary network interface has a device index of 0. \n If you specify a network interface when launching an instance, you must specify the device index."
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance."
                    },
                    "interfaceType": {
                      "type": "string",
                      "description": "The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa. For more information, see Elastic Fabric Adapter (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/efa.html) in the Amazon Elastic Compute Cloud User Guide. \n If you are not creating an EFA, specify interface or omit this parameter. \n Valid values: interface | efa",
                      "enum": [
                        "interface",
                        "efa"
                      ]
                    },
                    "ipv6AddressCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "A number of IPv6 addresses to assign to the network interface. Amazon EC2 chooses the IPv6 addresses from the range of the subnet. You cannot specify this option and the option to assign specific IPv6 addresses in the same request. You can specify this option if you've specified a minimum number of instances to launch."
                    },
                    "ipv6Addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipv6Address": {
                            "type": "string",
                            "description": "The IPv6 address."
                          }
                        },
                        "required": [
                          "ipv6Address"
                        ],
                        "description": "InstanceIPv6Address describes an IPv6 address."
                      },
                      "description": "One or more IPv6 addresses to assign to the network interface. You cannot specify this option and the option to assign a number of IPv6 addresses in the same request. You cannot specify this option if you've specified a minimum number of instances to launch."
                    },
                    "networkInterfaceId": {
                      "type": "string",
                      "description": "The ID of the network interface. \n If you are creating a Spot Fleet, omit this parameter because you canΓÇÖt specify a network interface ID in a launch specification."
                    },
                    "privateIpAddress": {
                      "type": "string",
                      "description": "The private IPv4 address of the network interface. Applies only if creating a network interface when launching an instance. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request."
                    },
                    "privateIpAddresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "primary": {
                            "type": "boolean",
                            "description": "Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary."
                          },
                          "privateIPAddress": {
                            "type": "string",
                            "description": "The private IPv4 addresses."
                          }
                        },
                        "required": [
                          "privateIPAddress"
                        ],
                        "description": "PrivateIPAddressSpecification describes a secondary private IPv4 address for a network interface."
                      },
                      "description": "One or more private IPv4 addresses to assign to the network interface. Only one private IPv4 address can be designated as primary. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request."
                    },
                    "secondaryPrivateIpAddressCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of secondary private IPv4 addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option. You cannot specify this option if you're launching more than one instance in a RunInstances (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html) request."
                    },
                    "subnetId": {
                      "type": "string",
                      "description": "The ID of the subnet associated with the network interface. Applies only if creating a network interface when launching an instance."
                    }
                  },
                  "required": [
                    "deviceIndex",
                    "groups",
                    "interfaceType"
                  ],
                  "description": "InstanceNetworkInterfaceSpecification describes a network interface."
                },
                "description": "The network interfaces to associate with the instance. If you specify a network interface, you must specify any security groups and subnets as part of the network interface."
              },
              "placement": {
                "type": "object",
                "properties": {
                  "affinity": {
                    "type": "string",
                    "description": "The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "availabilityZone": {
                    "type": "string",
                    "description": "The Availability Zone of the instance. \n If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "groupName": {
                    "type": "string",
                    "description": "The name of the placement group the instance is in."
                  },
                  "hostId": {
                    "type": "string",
                    "description": "The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "hostResourceGroupArn": {
                    "type": "string",
                    "description": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "partitionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of the partition the instance is in. Valid only if the placement group strategy is set to partition. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "spreadDomain": {
                    "type": "string",
                    "description": "Reserved for future use. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  },
                  "tenancy": {
                    "type": "string",
                    "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                  }
                },
                "required": [
                  "groupName"
                ],
                "description": "The placement for the instance."
              },
              "privateIpAddress": {
                "type": "string",
                "description": "[EC2-VPC] The primary IPv4 address. You must specify a value from the IPv4 address range of the subnet. \n Only one private IP address can be designated as primary. You can't specify this option if you've specified the option to designate a private IP address as the primary IP address in a network interface specification. You cannot specify this option if you're launching more than one instance in the request. \n You cannot specify this option and the network interfaces option in the same request."
              },
              "ramDiskId": {
                "type": "string",
                "description": "The ID of the RAM disk to select. Some kernels require additional drivers at launch. Check the kernel requirements for information about whether you need to specify a RAM disk. To find kernel requirements, go to the AWS Resource Center and search for the kernel ID. \n AWS recommends that you use PV-GRUB instead of kernels and RAM disks. For more information, see PV-GRUB (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html) in the Amazon Elastic Compute Cloud User Guide."
              },
              "region": {
                "type": "string",
                "description": "Region is the region you'd like your Instance to be created in."
              },
              "securityGroupIds": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The IDs of the security groups. You can create a security group using CreateSecurityGroup (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateSecurityGroup.html). \n If you specify a network interface, you must specify any security groups as part of the network interface."
              },
              "securityGroupRefs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the referenced object."
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "description": "A Reference to a named object."
                },
                "description": "SecurityGroupsRefs is a list of references to SecurityGroups used to set the SecurityGroupIDs."
              },
              "securityGroupSelector": {
                "type": "object",
                "properties": {
                  "matchControllerRef": {
                    "type": "boolean",
                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected."
                  },
                  "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "MatchLabels ensures an object with matching labels is selected."
                  }
                },
                "description": "SecurityGroupsSelector selects references to SecurityGroups used to set the SecurityGroupIDs."
              },
              "subnetId": {
                "type": "string",
                "description": "[EC2-VPC] The ID of the subnet to launch the instance into. \n If you specify a network interface, you must specify any subnets as part of the network interface."
              },
              "subnetIdRef": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the referenced object."
                  }
                },
                "required": [
                  "name"
                ],
                "description": "SubnetIDRef is a reference to a Subnet used to set the SubnetID."
              },
              "subnetIdSelector": {
                "type": "object",
                "properties": {
                  "matchControllerRef": {
                    "type": "boolean",
                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected."
                  },
                  "matchLabels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "MatchLabels ensures an object with matching labels is selected."
                  }
                },
                "description": "SubnetIDSelector selects a reference to a Subnet used to set the SubnetID."
              },
              "tagSpecifications": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "description": "The type of resource to tag. Currently, the resource types that support tagging on creation are: capacity-reservation | client-vpn-endpoint | dedicated-host | fleet | fpga-image | instance | ipv4pool-ec2 | ipv6pool-ec2 | key-pair | launch-template | natgateway | spot-fleet-request | placement-group | snapshot | traffic-mirror-filter | traffic-mirror-session | traffic-mirror-target | transit-gateway | transit-gateway-attachment | transit-gateway-route-table | vpc-endpoint (for interface VPC endpoints)| vpc-endpoint-service (for gateway VPC endpoints) | volume | vpc-flow-log. \n To tag a resource after it has been created, see CreateTags (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).",
                      "enum": [
                        "capacity-reservation",
                        "client-vpn-endpoint",
                        "dedicated-host",
                        "fleet",
                        "fpga-image",
                        "instance",
                        "ipv4pool-ec2",
                        "ipv6pool-ec2",
                        "key-pair",
                        "launch-template",
                        "natgateway",
                        "spot-fleet-request",
                        "placement-group",
                        "snapshot",
                        "traffic-mirror-filter",
                        "traffic-mirror-session",
                        "traffic-mirror-target",
                        "transit-gateway",
                        "transit-gateway-attachment",
                        "transit-gateway-route-table",
                        "vpc-endpoint",
                        "vpc-endpoint-service",
                        "volume",
                        "vpc-flow-log"
                      ]
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Key is the name of the tag."
                          },
                          "value": {
                            "type": "string",
                            "description": "Value is the value of the tag."
                          }
                        },
                        "required": [
                          "key",
                          "value"
                        ],
                        "description": "Tag defines a tag"
                      },
                      "description": "The tags to apply to the resource"
                    }
                  },
                  "required": [
                    "resourceType",
                    "tags"
                  ],
                  "description": "TagSpecification defines the tags to apply to a resource when the resource is being created."
                },
                "description": "The tags to apply to the resources during launch. You can only tag instances and volumes on launch. The specified tags are applied to all instances or volumes that are created during launch. To tag a resource after it has been created, see CreateTags (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html)."
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key is the name of the tag."
                    },
                    "value": {
                      "type": "string",
                      "description": "Value is the value of the tag."
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ],
                  "description": "Tag defines a tag"
                },
                "description": "Tags are used as identification helpers between AWS resources."
              },
              "userData": {
                "type": "string",
                "description": "The user data to make available to the instance. For more information, see Running Commands on Your Linux Instance at Launch (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/user-data.html) (Linux) and Adding User Data (https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-instance-metadata.html#instancedata-add-user-data) (Windows). If you are using a command line tool, base64-encoding is performed for you, and you can load the text from a file. Otherwise, you must provide base64-encoded text. User data is limited to 16 KB.",
                "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
              }
            },
            "required": [
              "imageId",
              "region"
            ],
            "description": "InstanceParameters define the desired state of the Instances"
          },
          "providerConfigRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the referenced object."
              }
            },
            "required": [
              "name"
            ],
            "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
            "default": {
              "name": "default"
            }
          },
          "providerRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the referenced object."
              }
            },
            "required": [
              "name"
            ],
            "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`"
          },
          "publishConnectionDetailsTo": {
            "type": "object",
            "properties": {
              "configRef": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the referenced object."
                  }
                },
                "required": [
                  "name"
                ],
                "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                "default": {
                  "name": "default"
                }
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types."
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores."
                  }
                },
                "description": "Metadata is the metadata for connection secret."
              },
              "name": {
                "type": "string",
                "description": "Name is the name of the connection secret."
              }
            },
            "required": [
              "name"
            ],
            "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource."
          },
          "writeConnectionSecretToRef": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the secret."
              },
              "namespace": {
                "type": "string",
                "description": "Namespace of the secret."
              }
            },
            "required": [
              "name",
              "namespace"
            ],
            "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other."
          },
          "provisioningState": {
            "type": "string"
          },
          "status": {
            "type": "object",
            "properties": {
              "atProvider": {
                "type": "object",
                "properties": {
                  "amiLaunchIndex": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "architecture": {
                    "type": "string"
                  },
                  "blockDeviceMapping": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deviceName": {
                          "type": "string",
                          "description": "The device name (for example, /dev/sdh or xvdh)."
                        },
                        "ebs": {
                          "type": "object",
                          "properties": {
                            "attachTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time stamp when the attachment initiated."
                            },
                            "deleteOnTermination": {
                              "type": "boolean",
                              "description": "Indicates whether the volume is deleted on instance termination."
                            },
                            "status": {
                              "type": "string",
                              "description": "The attachment state."
                            },
                            "volumeId": {
                              "type": "string",
                              "description": "The ID of the EBS volume."
                            }
                          },
                          "required": [
                            "attachTime",
                            "deleteOnTermination",
                            "status",
                            "volumeId"
                          ],
                          "description": "Parameters used to automatically set up EBS volumes when the instance is launched."
                        }
                      },
                      "required": [
                        "deviceName",
                        "ebs"
                      ],
                      "description": "InstanceBlockDeviceMapping describes a block device mapping."
                    }
                  },
                  "capacityReservationId": {
                    "type": "string"
                  },
                  "capacityReservationSpecification": {
                    "type": "object",
                    "properties": {
                      "capacityReservationPreference": {
                        "type": "string",
                        "description": "Describes the instance's Capacity Reservation preferences. Possible preferences include: \n * open - The instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). \n * none - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity."
                      },
                      "capacityReservationTarget": {
                        "type": "object",
                        "properties": {
                          "capacityReservationId": {
                            "type": "string",
                            "description": "The ID of the Capacity Reservation."
                          }
                        },
                        "description": "Information about the targeted Capacity Reservation."
                      }
                    },
                    "required": [
                      "capacityReservationPreference"
                    ],
                    "description": "CapacityReservationSpecificationResponse describes the instance's Capacity Reservation targeting preferences. The action returns the capacityReservationPreference response element if the instance is configured to run in On-Demand capacity, or if it is configured in run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). The action returns the capacityReservationTarget response element if the instance explicily targets a specific Capacity Reservation."
                  },
                  "clientToken": {
                    "type": "string"
                  },
                  "cpuOptions": {
                    "type": "object",
                    "properties": {
                      "coreCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of CPU cores for the instance."
                      },
                      "threadsPerCore": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of threads per CPU core. To disable multithreading for the instance, specify a value of 1. Otherwise, specify the default value of 2."
                      }
                    },
                    "required": [
                      "coreCount",
                      "threadsPerCore"
                    ],
                    "description": "CPUOptionsRequest defines the options for the instance. Both the core count and threads per core must be specified in the request."
                  },
                  "ebs": {
                    "type": "string"
                  },
                  "ebsOptimized": {
                    "type": "boolean"
                  },
                  "elasticGpuAssociation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "elasticGpuAssociationId": {
                          "type": "string",
                          "description": "The ID of the association."
                        },
                        "elasticGpuAssociationState": {
                          "type": "string",
                          "description": "The state of the association between the instance and the Elastic Graphics accelerator."
                        },
                        "elasticGpuAssociationTime": {
                          "type": "string",
                          "description": "The time the Elastic Graphics accelerator was associated with the instance."
                        },
                        "elasticGpuId": {
                          "type": "string",
                          "description": "The ID of the Elastic Graphics accelerator."
                        }
                      },
                      "required": [
                        "elasticGpuAssociationId",
                        "elasticGpuAssociationState",
                        "elasticGpuAssociationTime",
                        "elasticGpuId"
                      ],
                      "description": "ElasticGPUAssociation describes the association between an instance and an Elastic Graphics accelerator."
                    }
                  },
                  "elasticInferenceAcceleratorAssociations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "elasticInferenceAcceleratorArn": {
                          "type": "string",
                          "description": "The Amazon Resource Name (ARN) of the elastic inference accelerator."
                        },
                        "elasticInferenceAcceleratorAssociationId": {
                          "type": "string",
                          "description": "The ID of the association."
                        },
                        "elasticInferenceAcceleratorAssociationState": {
                          "type": "string",
                          "description": "The state of the elastic inference accelerator."
                        },
                        "elasticInferenceAcceleratorAssociationTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time at which the elastic inference accelerator is associated with an instance."
                        }
                      },
                      "required": [
                        "elasticInferenceAcceleratorArn",
                        "elasticInferenceAcceleratorAssociationId",
                        "elasticInferenceAcceleratorAssociationState",
                        "elasticInferenceAcceleratorAssociationTime"
                      ],
                      "description": "ElasticInferenceAcceleratorAssociation describes the association between an instance and an elastic inference accelerator."
                    }
                  },
                  "enaSupport": {
                    "type": "boolean"
                  },
                  "hibernationOptions": {
                    "type": "object",
                    "properties": {
                      "configured": {
                        "type": "boolean",
                        "description": "If you set this parameter to true, your instance is enabled for hibernation. \n Default: false"
                      }
                    },
                    "description": "HibernationOptionsRequest indicates whether your instance is configured for hibernation. This parameter is valid only if the instance meets the hibernation prerequisites (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html#hibernating-prerequisites). For more information, see Hibernate Your Instance (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html) in the Amazon Elastic Compute Cloud User Guide."
                  },
                  "hypervisor": {
                    "type": "string"
                  },
                  "iamInstanceProfile": {
                    "type": "object",
                    "properties": {
                      "arn": {
                        "type": "string",
                        "description": "The Amazon Resource Name (ARN) of the instance profile."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the instance profile."
                      }
                    },
                    "required": [
                      "arn",
                      "id"
                    ],
                    "description": "IAMInstanceProfile Describes an IAM instance profile."
                  },
                  "imageId": {
                    "type": "string"
                  },
                  "instanceId": {
                    "type": "string"
                  },
                  "instanceLifecyle": {
                    "type": "string"
                  },
                  "instanceType": {
                    "type": "string",
                    "description": "Supported instance family when set instanceInterruptionBehavior to hibernate C3, C4, C5, M4, M5, R3, R4"
                  },
                  "kernelId": {
                    "type": "string"
                  },
                  "launchTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "licenseSet": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "licenseConfigurationArn": {
                          "type": "string",
                          "description": "Amazon Resource Name (ARN) of the license configuration"
                        }
                      },
                      "required": [
                        "licenseConfigurationArn"
                      ],
                      "description": "LicenseConfigurationRequest describes a license configuration"
                    }
                  },
                  "metadataOptions": {
                    "type": "object",
                    "properties": {
                      "httpEndpoint": {
                        "type": "string",
                        "description": "This parameter enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled. \n If you specify a value of disabled, you will not be able to access your instance metadata.",
                        "enum": [
                          "enabled",
                          "disabled"
                        ]
                      },
                      "httpPutResponseHopLimit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. \n Default: 1 \n Possible values: Integers from 1 to 64"
                      },
                      "httpTokens": {
                        "type": "string",
                        "description": "The state of token usage for your instance metadata requests. If the parameter is not specified in the request, the default state is optional. \n If the state is optional, you can choose to retrieve instance metadata with or without a signed token header on your request. If you retrieve the IAM role credentials without a token, the version 1.0 role credentials are returned. If you retrieve the IAM role credentials using a valid signed token, the version 2.0 role credentials are returned. \n If the state is required, you must send a signed token header with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns the version 2.0 credentials; the version 1.0 credentials are not available.",
                        "enum": [
                          "optional",
                          "required"
                        ]
                      }
                    },
                    "required": [
                      "httpTokens"
                    ],
                    "description": "InstanceMetadataOptionsRequest defines the metadata options for the instance."
                  },
                  "monitoring": {
                    "type": "object",
                    "properties": {
                      "state": {
                        "type": "string",
                        "description": "Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled."
                      }
                    },
                    "required": [
                      "state"
                    ],
                    "description": "Monitoring describes the monitoring of an instance."
                  },
                  "networkInterfaces": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "association": {
                          "type": "object",
                          "properties": {
                            "ipOwnerId": {
                              "type": "string",
                              "description": "The ID of the owner of the Elastic IP address."
                            },
                            "publicDnsName": {
                              "type": "string",
                              "description": "The public DNS name."
                            },
                            "publicIp": {
                              "type": "string",
                              "description": "The public IP address or Elastic IP address bound to the network interface."
                            }
                          },
                          "description": "The association information for an Elastic IPv4 associated with the network interface."
                        },
                        "attachment": {
                          "type": "object",
                          "properties": {
                            "attachTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The time stamp when the attachment initiated."
                            },
                            "attachmentId": {
                              "type": "string",
                              "description": "The ID of the network interface attachment."
                            },
                            "deleteOnTermination": {
                              "type": "boolean",
                              "description": "Indicates whether the network interface is deleted when the instance is terminated."
                            },
                            "deviceIndex": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The index of the device on the instance for the network interface attachment."
                            },
                            "status": {
                              "type": "string",
                              "description": "The attachment state."
                            }
                          },
                          "description": "The network interface attachment."
                        },
                        "description": {
                          "type": "string",
                          "description": "The description."
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "groupId": {
                                "type": "string",
                                "description": "GroupID is the security group identifier"
                              },
                              "groupName": {
                                "type": "string",
                                "description": "GroupName is the name of the security group"
                              }
                            },
                            "required": [
                              "groupId",
                              "groupName"
                            ],
                            "description": "GroupIdentifier describes a security group"
                          },
                          "description": "One or more security groups."
                        },
                        "interfaceType": {
                          "type": "string",
                          "description": "Describes the type of network interface. \n Valid values: interface | efa"
                        },
                        "ipv6Addresses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipv6Address": {
                                "type": "string",
                                "description": "The IPv6 address."
                              }
                            },
                            "required": [
                              "ipv6Address"
                            ],
                            "description": "InstanceIPv6Address describes an IPv6 address."
                          },
                          "description": "One or more IPv6 addresses associated with the network interface."
                        },
                        "macAddress": {
                          "type": "string",
                          "description": "The MAC address."
                        },
                        "networkInterfaceId": {
                          "type": "string",
                          "description": "The ID of the network interface."
                        },
                        "ownerId": {
                          "type": "string",
                          "description": "The ID of the AWS account that created the network interface."
                        },
                        "privateDnsName": {
                          "type": "string",
                          "description": "The private DNS name."
                        },
                        "privateIpAddress": {
                          "type": "string",
                          "description": "The IPv4 address of the network interface within the subnet."
                        },
                        "privateIpAddresses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "association": {
                                "type": "object",
                                "properties": {
                                  "ipOwnerId": {
                                    "type": "string",
                                    "description": "The ID of the owner of the Elastic IP address."
                                  },
                                  "publicDnsName": {
                                    "type": "string",
                                    "description": "The public DNS name."
                                  },
                                  "publicIp": {
                                    "type": "string",
                                    "description": "The public IP address or Elastic IP address bound to the network interface."
                                  }
                                },
                                "description": "The association information for an Elastic IP address for the network interface."
                              },
                              "primary": {
                                "type": "boolean",
                                "description": "Indicates whether this IPv4 address is the primary private IP address of the network interface."
                              },
                              "privateDnsName": {
                                "type": "string",
                                "description": "The private IPv4 DNS name."
                              },
                              "privateIpAddress": {
                                "type": "string",
                                "description": "The private IPv4 address of the network interface."
                              }
                            },
                            "required": [
                              "association",
                              "primary",
                              "privateDnsName",
                              "privateIpAddress"
                            ],
                            "description": "InstancePrivateIPAddress describes a private IPv4 address."
                          },
                          "description": "One or more private IPv4 addresses associated with the network interface."
                        },
                        "sourceDestCheck": {
                          "type": "boolean",
                          "description": "Indicates whether to validate network traffic to or from this network interface."
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the network interface."
                        },
                        "subnetId": {
                          "type": "string",
                          "description": "The ID of the subnet."
                        },
                        "vpcId": {
                          "type": "string",
                          "description": "The ID of the VPC."
                        }
                      },
                      "required": [
                        "status"
                      ],
                      "description": "InstanceNetworkInterface describes a network interface."
                    }
                  },
                  "outpostArn": {
                    "type": "string"
                  },
                  "placement": {
                    "type": "object",
                    "properties": {
                      "affinity": {
                        "type": "string",
                        "description": "The affinity setting for the instance on the Dedicated Host. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "availabilityZone": {
                        "type": "string",
                        "description": "The Availability Zone of the instance. \n If not specified, an Availability Zone will be automatically chosen for you based on the load balancing criteria for the Region. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "groupName": {
                        "type": "string",
                        "description": "The name of the placement group the instance is in."
                      },
                      "hostId": {
                        "type": "string",
                        "description": "The ID of the Dedicated Host on which the instance resides. This parameter is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "hostResourceGroupArn": {
                        "type": "string",
                        "description": "The ARN of the host resource group in which to launch the instances. If you specify a host resource group ARN, omit the Tenancy parameter or set it to host. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "partitionNumber": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of the partition the instance is in. Valid only if the placement group strategy is set to partition. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "spreadDomain": {
                        "type": "string",
                        "description": "Reserved for future use. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      },
                      "tenancy": {
                        "type": "string",
                        "description": "The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the ImportInstance (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportInstance.html) command. \n This parameter is not supported by CreateFleet (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateFleet)."
                      }
                    },
                    "required": [
                      "groupName"
                    ],
                    "description": "Placement describes the placement of an instance."
                  },
                  "platform": {
                    "type": "string"
                  },
                  "privateDnsName": {
                    "type": "string"
                  },
                  "privateIpAddress": {
                    "type": "string"
                  },
                  "productCodes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "productCodeId": {
                          "type": "string",
                          "description": "The product code."
                        },
                        "productCodeType": {
                          "type": "string",
                          "description": "The type of product code."
                        }
                      },
                      "required": [
                        "productCodeId",
                        "productCodeType"
                      ],
                      "description": "ProductCode describes a product code."
                    }
                  },
                  "publicDnsName": {
                    "type": "string"
                  },
                  "publicIpAddress": {
                    "type": "string"
                  },
                  "ramDiskId": {
                    "type": "string"
                  },
                  "rootDeviceType": {
                    "type": "string"
                  },
                  "securityGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "groupId": {
                          "type": "string",
                          "description": "GroupID is the security group identifier"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "GroupName is the name of the security group"
                        }
                      },
                      "required": [
                        "groupId",
                        "groupName"
                      ],
                      "description": "GroupIdentifier describes a security group"
                    }
                  },
                  "sourceDestCheck": {
                    "type": "boolean"
                  },
                  "spotInstanceId": {
                    "type": "string"
                  },
                  "sriovNetSupport": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "stateReason": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The reason code for the state change."
                      },
                      "message": {
                        "type": "string",
                        "description": "The message for the state change. \n * Server.InsufficientInstanceCapacity: There was insufficient capacity available to satisfy the launch request. \n * Server.InternalError: An internal error caused the instance to terminate during launch. \n * Server.ScheduledStop: The instance was stopped due to a scheduled retirement. \n * Server.SpotInstanceShutdown: The instance was stopped because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price. \n * Server.SpotInstanceTermination: The instance was terminated because the number of Spot requests with a maximum price equal to or higher than the Spot price exceeded available capacity or because of an increase in the Spot price. \n * Client.InstanceInitiatedShutdown: The instance was shut down using the shutdown -h command from the instance. \n * Client.InstanceTerminated: The instance was terminated or rebooted during AMI creation. \n * Client.InternalError: A client error caused the instance to terminate during launch. \n * Client.InvalidSnapshot.NotFound: The specified snapshot was not found. \n * Client.UserInitiatedHibernate: Hibernation was initiated on the instance. \n * Client.UserInitiatedShutdown: The instance was shut down using the Amazon EC2 API. \n * Client.VolumeLimitExceeded: The limit on the number of EBS volumes or total storage was exceeded. Decrease usage or request an increase in your account limits."
                      }
                    },
                    "required": [
                      "code",
                      "message"
                    ],
                    "description": "StateReason describes a state change."
                  },
                  "stateTransitionReason": {
                    "type": "string"
                  },
                  "subnetId": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key is the name of the tag."
                        },
                        "value": {
                          "type": "string",
                          "description": "Value is the value of the tag."
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ],
                      "description": "Tag defines a tag"
                    }
                  },
                  "virualizationType": {
                    "type": "string"
                  },
                  "vpcId": {
                    "type": "string"
                  }
                },
                "required": [
                  "architecture",
                  "instanceType",
                  "platform",
                  "rootDeviceType",
                  "state",
                  "virualizationType"
                ],
                "description": "InstanceObservation keeps the state for the external resource. The below fields follow the Instance response object as closely as possible."
              },
              "conditions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "LastTransitionTime is the last time this condition transitioned from one status to another."
                    },
                    "message": {
                      "type": "string",
                      "description": "A Message containing details about this condition's last transition from one status to another, if any."
                    },
                    "reason": {
                      "type": "string",
                      "description": "A Reason for this condition's last transition from one status to another."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of this condition; is it currently True, False, or Unknown?"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time."
                    }
                  },
                  "required": [
                    "lastTransitionTime",
                    "reason",
                    "status",
                    "type"
                  ],
                  "description": "A Condition that may apply to a resource."
                },
                "description": "Conditions of the resource."
              }
            },
            "description": "An InstanceStatus represents the observed state of Instances."
          }
        },
        "required": [
          "forProvider"
        ],
        "description": "An InstanceSpec defines the desired state of Instances."
      },
      "virtualMachines": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/definitions/virtualMachinesProperties"
          },
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Id"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Name"
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "Resource Type"
          },
          "location": {
            "type": "string",
            "description": "The resource location"
          },
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          },
          "extendedLocation": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "The extended location type."
              },
              "name": {
                "type": "string",
                "description": "The extended location name."
              }
            }
          }
        },
        "required": [
          "location"
        ],
        "description": "The virtualMachines resource definition."
      },
      "virtualMachinesPatch": {
        "type": "object",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Resource tags"
          }
        },
        "description": "The virtualMachines resource patch definition."
      },
      "virtualMachinesListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/virtualMachines"
            }
          },
          "nextLink": {
            "type": "string"
          }
        }
      },
      "ResourceProviderOperationList": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceProviderOperation"
            }
          },
          "nextLink": {
            "type": "string"
          }
        },
        "description": "Results of the request to list operations."
      },
      "ResourceProviderOperation": {
        "type": "object",
        "properties": {
          "isDataAction": {
            "type": "string",
            "description": "Indicates whether the operation applies to data-plane."
          },
          "name": {
            "type": "string",
            "description": "Operation name, in format of {provider}/{resource}/{operation}"
          },
          "display": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "The resource provider."
              },
              "resource": {
                "type": "string",
                "description": "Resource on which the operation is performed."
              },
              "operation": {
                "type": "string",
                "description": "Type of operation: get, read, delete, etc."
              },
              "description": {
                "type": "string",
                "description": "Description of this operation."
              }
            },
            "description": "Display metadata associated with the operation."
          }
        },
        "description": "Results of the request to list operations."
      }
    },
    "parameters": {
      "virtualMachinesNameParameter": {
        "name": "virtualMachinesName",
        "in": "path",
        "required": true,
        "type": "string",
        "maxLength": 64,
        "minLength": 3
      },
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
      },
      "ResourceGroupNameParameter": {
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the resource group."
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
      }
    }
  }