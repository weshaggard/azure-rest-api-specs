{
  "swagger": "2.0",
  "info": {
    "title": "Private.BBeeDev1",
    "version": "2023-12-01-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "ProvisioningResources"
    },
    {
      "name": "ProvisioningPolicies"
    },
    {
      "name": "DeviceProvisioningStates"
    }
  ],
  "paths": {
    "/{resourceUri}/providers/Private.BBeeDev1/deviceProvisioningStates": {
      "get": {
        "operationId": "DeviceProvisioningStates_List",
        "tags": [
          "DeviceProvisioningStates"
        ],
        "description": "List DeviceProvisioningState resources by parent",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningStateListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Private.BBeeDev1/deviceProvisioningStates/default": {
      "get": {
        "operationId": "DeviceProvisioningStates_Get",
        "tags": [
          "DeviceProvisioningStates"
        ],
        "description": "Get a DeviceProvisioningState",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "DeviceProvisioningStates_CreateOrUpdate",
        "tags": [
          "DeviceProvisioningStates"
        ],
        "description": "Create a DeviceProvisioningState",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource create or update operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningState"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningState"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "DeviceProvisioningStates_Update",
        "tags": [
          "DeviceProvisioningStates"
        ],
        "description": "Update a DeviceProvisioningState",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningStateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeviceProvisioningState"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "DeviceProvisioningStates_Delete",
        "tags": [
          "DeviceProvisioningStates"
        ],
        "description": "Delete a DeviceProvisioningState",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/Azure.ResourceManager.ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Private.BBeeDev1/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Private.BBeeDev1/provisioningResources": {
      "get": {
        "operationId": "ProvisioningResources_ListBySubscription",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "List ProvisioningResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.BBeeDev1/provisioningResources": {
      "get": {
        "operationId": "ProvisioningResources_ListByResourceGroup",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "List ProvisioningResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResourceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.BBeeDev1/provisioningResources/{provisioningResourceName}": {
      "get": {
        "operationId": "ProvisioningResources_Get",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "Get a ProvisioningResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ProvisioningResources_CreateOrUpdate",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "Create a ProvisioningResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource create or update operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResource"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ProvisioningResources_Update",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "Update a ProvisioningResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningResource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ProvisioningResources_Delete",
        "tags": [
          "ProvisioningResources"
        ],
        "description": "Delete a ProvisioningResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.BBeeDev1/provisioningResources/{provisioningResourceName}/provisioningPolicies": {
      "get": {
        "operationId": "ProvisioningPolicies_ListByProvisioningResource",
        "tags": [
          "ProvisioningPolicies"
        ],
        "description": "List ProvisioningPolicy resources by ProvisioningResource",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Private.BBeeDev1/provisioningResources/{provisioningResourceName}/provisioningPolicies/{provisioningPolicyName}": {
      "get": {
        "operationId": "ProvisioningPolicies_Get",
        "tags": [
          "ProvisioningPolicies"
        ],
        "description": "Get a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "provisioningPolicyName",
            "in": "path",
            "description": "The name of the Provisioning Policy tracked resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "ProvisioningPolicies_CreateOrUpdate",
        "tags": [
          "ProvisioningPolicies"
        ],
        "description": "Create a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "provisioningPolicyName",
            "in": "path",
            "description": "The name of the Provisioning Policy tracked resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource create or update operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "ProvisioningPolicies_Update",
        "tags": [
          "ProvisioningPolicies"
        ],
        "description": "Update a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "provisioningPolicyName",
            "in": "path",
            "description": "The name of the Provisioning Policy tracked resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "ProvisioningPolicies_Delete",
        "tags": [
          "ProvisioningPolicies"
        ],
        "description": "Delete a ProvisioningPolicy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "provisioningResourceName",
            "in": "path",
            "description": "The name of the Provisioning Resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "provisioningPolicyName",
            "in": "path",
            "description": "The name of the Provisioning Policy tracked resource.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AllocationRule": {
      "type": "object",
      "description": "The allocation rule.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the allocation rule."
        },
        "endpointType": {
          "$ref": "#/definitions/EndpointType",
          "description": "Type of endpoint."
        },
        "type": {
          "$ref": "#/definitions/AllocationType",
          "description": "Type of the allocation rule."
        }
      },
      "discriminator": "type",
      "required": [
        "name",
        "endpointType",
        "type"
      ]
    },
    "AllocationType": {
      "type": "string",
      "description": "Type of allocation rule.",
      "enum": [
        "Static",
        "GeoBased",
        "Weighted"
      ],
      "x-ms-enum": {
        "name": "AllocationType",
        "modelAsString": true,
        "values": [
          {
            "name": "Static",
            "value": "Static",
            "description": "Static allocation of a single endpoint."
          },
          {
            "name": "GeoBased",
            "value": "GeoBased",
            "description": "Allocation based on geo-location."
          },
          {
            "name": "Weighted",
            "value": "Weighted",
            "description": "Allocation based on weight."
          }
        ]
      }
    },
    "Azure.ResourceManager.ResourceProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource type.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ResourceProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          }
        ]
      }
    },
    "BootstrapAuthenticationRule": {
      "type": "object",
      "description": "The authentication rule for bootstrap.",
      "properties": {
        "type": {
          "$ref": "#/definitions/BootstrapAuthenticationType",
          "description": "The type of authentication rule."
        }
      },
      "discriminator": "type",
      "required": [
        "type"
      ]
    },
    "BootstrapAuthenticationRuleUpdate": {
      "type": "object",
      "description": "The authentication rule for bootstrap.",
      "properties": {
        "type": {
          "$ref": "#/definitions/BootstrapAuthenticationType",
          "description": "The type of authentication rule."
        }
      },
      "discriminator": "type"
    },
    "BootstrapAuthenticationType": {
      "type": "string",
      "description": "The authentication type for bootstrap.",
      "enum": [
        "X509",
        "Discovery"
      ],
      "x-ms-enum": {
        "name": "BootstrapAuthenticationType",
        "modelAsString": true,
        "values": [
          {
            "name": "X509",
            "value": "X509",
            "description": "The X509 authentication type."
          },
          {
            "name": "Discovery",
            "value": "Discovery",
            "description": "The discovery authentication type."
          }
        ]
      }
    },
    "CaConfig": {
      "type": "object",
      "description": "The configuration for setting up a CA.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the CA."
        },
        "properties": {
          "$ref": "#/definitions/CertificateProperties",
          "description": "Certificate properties."
        }
      },
      "required": [
        "name",
        "properties"
      ]
    },
    "CertPolicyConfig": {
      "type": "object",
      "description": "The configuration for setting up a policy.",
      "properties": {
        "validityPeriod": {
          "$ref": "#/definitions/ValidityPeriod",
          "description": "The validity period."
        }
      },
      "required": [
        "validityPeriod"
      ]
    },
    "CertificateIssuanceRule": {
      "type": "object",
      "description": "Certificate issuance configurations.",
      "properties": {
        "issuingAuthority": {
          "$ref": "#/definitions/SupportedIssuingAuthority",
          "description": "The type of authority for cert issuance."
        },
        "certificateAuthorityConfiguration": {
          "$ref": "#/definitions/CaConfig",
          "description": "The configuration to set up an ICA."
        },
        "certificatePolicyConfiguration": {
          "$ref": "#/definitions/CertPolicyConfig",
          "description": "The enrollment policy configuration."
        },
        "renewalInterval": {
          "type": "integer",
          "format": "int32",
          "description": "Cert renewal interval."
        }
      },
      "required": [
        "issuingAuthority",
        "certificateAuthorityConfiguration",
        "certificatePolicyConfiguration",
        "renewalInterval"
      ]
    },
    "CertificateProperties": {
      "type": "object",
      "description": "Certificate properties.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/SupportedKeyType",
          "description": "Key type: RSA or EC."
        },
        "keySize": {
          "type": "integer",
          "format": "int32",
          "description": "Key size for RSA key type."
        },
        "subject": {
          "type": "string",
          "description": "Certificate subject."
        },
        "validityNotBefore": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate is valid not before this date. Format ISO8601"
        },
        "validityNotAfter": {
          "type": "string",
          "format": "date-time",
          "description": "Certificate is valid not after this date. Format ISO8601"
        },
        "extendedKeyUsage": {
          "type": "array",
          "description": "Extended key usage.",
          "items": {
            "$ref": "#/definitions/SupportedExtendedKeyUsage"
          }
        },
        "curveType": {
          "$ref": "#/definitions/SupportedCurveType",
          "description": "Curve type of EC."
        }
      },
      "required": [
        "keyType",
        "subject",
        "validityNotBefore",
        "validityNotAfter"
      ]
    },
    "DeviceEndpoint": {
      "type": "object",
      "description": "The device endpoint.",
      "properties": {
        "hostname": {
          "type": "string",
          "description": "Hostname of the Endpoint.",
          "readOnly": true
        }
      },
      "required": [
        "hostname"
      ]
    },
    "DeviceEndpoints": {
      "type": "object",
      "description": "Device endpoints.",
      "properties": {
        "default": {
          "$ref": "#/definitions/DeviceEndpoint",
          "description": "The default endpoint."
        }
      },
      "required": [
        "default"
      ]
    },
    "DeviceIdentityInfo": {
      "type": "object",
      "description": "The identity info to return to device.",
      "properties": {
        "uuid": {
          "type": "boolean",
          "description": "If uuid need to be returned."
        },
        "accessTokenUrl": {
          "type": "boolean",
          "description": "If accessTokenUrl need to be returned."
        },
        "externalDeviceId": {
          "type": "boolean",
          "description": "If externalDeviceId need to be returned."
        }
      },
      "required": [
        "uuid",
        "accessTokenUrl",
        "externalDeviceId"
      ]
    },
    "DeviceProvisioningState": {
      "type": "object",
      "description": "The provisioning state of a device.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProvisioningStateProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DeviceProvisioningStateListResult": {
      "type": "object",
      "description": "The response of a DeviceProvisioningState list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeviceProvisioningState items on this page",
          "items": {
            "$ref": "#/definitions/DeviceProvisioningState"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeviceProvisioningStateProperties": {
      "type": "object",
      "description": "Details of the DeviceProvisioningState",
      "properties": {
        "registrationId": {
          "type": "string",
          "description": "Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-'",
          "maxLength": 128,
          "pattern": "^([a-z0-9-._:]{0,127}[a-z0-9-])$"
        },
        "onboardingStatus": {
          "$ref": "#/definitions/OnboardingStatus",
          "description": "Onboarding status of the resource this DeviceProvisioningState extends",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "discoveryEnabled": {
          "type": "boolean",
          "description": "Indicates if the device is enabled for discovery",
          "default": false
        },
        "provisioningPolicyResourceId": {
          "$ref": "#/definitions/ProvisioningPolicyResourceId",
          "description": "The provisioning policy resource id"
        },
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "registrationId",
        "onboardingStatus",
        "provisioningPolicyResourceId"
      ]
    },
    "DeviceProvisioningStateUpdate": {
      "type": "object",
      "description": "The type used for update operations of the DeviceProvisioningState.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeviceProvisioningStateUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "DeviceProvisioningStateUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the DeviceProvisioningState.",
      "properties": {
        "registrationId": {
          "type": "string",
          "description": "Unique identifier for the device. Allow alphanumeric and '-', '.', '_', ':' only. Last character can only be alphanumeric and '-'",
          "maxLength": 128,
          "pattern": "^([a-z0-9-._:]{0,127}[a-z0-9-])$"
        },
        "onboardingStatus": {
          "$ref": "#/definitions/OnboardingStatus",
          "description": "Onboarding status of the resource this DeviceProvisioningState extends",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "discoveryEnabled": {
          "type": "boolean",
          "description": "Indicates if the device is enabled for discovery",
          "default": false
        },
        "provisioningPolicyResourceId": {
          "$ref": "#/definitions/ProvisioningPolicyResourceId",
          "description": "The provisioning policy resource id"
        }
      }
    },
    "DeviceRegistryProvisioningPolicyResourceDetails": {
      "type": "object",
      "description": "Details of the ProvisioningService Device Registry ProvisioningPolicy.",
      "properties": {
        "operationalIdentityInfo": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information."
        },
        "resourceMetadata": {
          "type": "string",
          "description": "Resource metadata.",
          "maxLength": 200
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetails"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.DeviceRegistry/devices"
    },
    "DeviceRegistryProvisioningPolicyResourceDetailsUpdate": {
      "type": "object",
      "description": "Details of the ProvisioningService Device Registry ProvisioningPolicy.",
      "properties": {
        "operationalIdentityInfo": {
          "$ref": "#/definitions/IdentityInfoUpdate",
          "description": "Identity information."
        },
        "resourceMetadata": {
          "type": "string",
          "description": "Resource metadata.",
          "maxLength": 200
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetailsUpdate"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.DeviceRegistry/devices"
    },
    "DiscoveryBootstrapAuthenticationRule": {
      "type": "object",
      "description": "The Discovery-based authentication rule for bootstrapping.",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/BootstrapAuthenticationRule"
        }
      ],
      "x-ms-discriminator-value": "Discovery"
    },
    "DiscoveryBootstrapAuthenticationRuleUpdate": {
      "type": "object",
      "description": "The Discovery-based authentication rule for bootstrapping.",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/BootstrapAuthenticationRuleUpdate"
        }
      ],
      "x-ms-discriminator-value": "Discovery"
    },
    "DiscoveryProvisioningPolicyResourceDetails": {
      "type": "object",
      "description": "Details of the ProvisioningService Discovery ProvisioningPolicy.",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetails"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.HybridCompute/machines"
    },
    "DiscoveryProvisioningPolicyResourceDetailsUpdate": {
      "type": "object",
      "description": "Details of the ProvisioningService Discovery ProvisioningPolicy.",
      "properties": {},
      "allOf": [
        {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetailsUpdate"
        }
      ],
      "x-ms-discriminator-value": "Microsoft.HybridCompute/machines"
    },
    "EndpointType": {
      "type": "string",
      "description": "Type of the endpoint.",
      "enum": [
        "Microsoft.EventGrid/namespaces"
      ],
      "x-ms-enum": {
        "name": "EndpointType",
        "modelAsString": true,
        "values": [
          {
            "name": "MicrosoftEventGridNamespace",
            "value": "Microsoft.EventGrid/namespaces",
            "description": "Azure event grid broker."
          }
        ]
      }
    },
    "GeoBasedAllocationEndpoint": {
      "type": "object",
      "description": "GeoBased allocation endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the endpoint."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource id of the endpoint."
        },
        "hostName": {
          "type": "string",
          "description": "host name of the endpoint."
        },
        "region": {
          "type": "string",
          "description": "Region of the endpoint."
        }
      },
      "required": [
        "name",
        "resourceId",
        "hostName",
        "region"
      ]
    },
    "GeoBasedAllocationRule": {
      "type": "object",
      "description": "The allocation rule for geoBased allocation type.",
      "properties": {
        "endpoints": {
          "type": "array",
          "description": "List of endpoints for geoBased allocation type.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/GeoBasedAllocationEndpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "endpoints"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AllocationRule"
        }
      ],
      "x-ms-discriminator-value": "GeoBased"
    },
    "IdentityInfo": {
      "type": "object",
      "description": "The information related to device identity.",
      "properties": {
        "deviceTemplateId": {
          "type": "string",
          "description": "Device template id."
        },
        "staticGroup": {
          "type": "string",
          "description": "AAD group name for static group."
        },
        "deviceTenantId": {
          "type": "string",
          "description": "The id of the devices Tenant."
        }
      },
      "required": [
        "deviceTenantId"
      ]
    },
    "IdentityInfoUpdate": {
      "type": "object",
      "description": "The information related to device identity.",
      "properties": {
        "deviceTemplateId": {
          "type": "string",
          "description": "Device template id."
        },
        "staticGroup": {
          "type": "string",
          "description": "AAD group name for static group."
        },
        "deviceTenantId": {
          "type": "string",
          "description": "The id of the devices Tenant."
        }
      }
    },
    "JitRule": {
      "type": "object",
      "description": "The rule for Just-in-time connection.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the policy. Should be greater than 0."
        },
        "region": {
          "type": "string",
          "description": "The region.",
          "minLength": 1
        },
        "subscriptionId": {
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        "resourceGroupName": {
          "type": "string",
          "description": "The case insensitive name of the target resource group.",
          "minLength": 1,
          "maxLength": 90,
          "pattern": "^[-\\w\\._\\(\\)]+$"
        }
      },
      "required": [
        "priority",
        "region",
        "subscriptionId",
        "resourceGroupName"
      ]
    },
    "JitRuleUpdate": {
      "type": "object",
      "description": "The rule for Just-in-time connection.",
      "properties": {
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the policy. Should be greater than 0."
        },
        "region": {
          "type": "string",
          "description": "The region.",
          "minLength": 1
        },
        "subscriptionId": {
          "type": "string",
          "description": "The ID of the target subscription.",
          "minLength": 1
        },
        "resourceGroupName": {
          "type": "string",
          "description": "The case insensitive name of the target resource group.",
          "minLength": 1,
          "maxLength": 90,
          "pattern": "^[-\\w\\._\\(\\)]+$"
        }
      }
    },
    "OnboardingStatus": {
      "type": "string",
      "description": "The current onboarding status.",
      "enum": [
        "Pending",
        "Provisioned",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "OnboardingStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Pending",
            "value": "Pending",
            "description": "Onboarding is still pending"
          },
          {
            "name": "Provisioned",
            "value": "Provisioned",
            "description": "The resource has been onboarded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Onboarding has failed"
          }
        ]
      }
    },
    "ProvisioningPolicy": {
      "type": "object",
      "description": "A provisioning policy resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProvisioningPolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningPolicyListResult": {
      "type": "object",
      "description": "The response of a ProvisioningPolicy list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProvisioningPolicy items on this page",
          "items": {
            "$ref": "#/definitions/ProvisioningPolicy"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningPolicyProperties": {
      "type": "object",
      "description": "Details of the ProvisioningService ProvisioningPolicy.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "bootstrapAuthentication": {
          "$ref": "#/definitions/BootstrapAuthenticationRule",
          "description": "The bootstrap authentication rule."
        },
        "allocations": {
          "type": "array",
          "description": "Allocation rules.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/AllocationRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "jit": {
          "$ref": "#/definitions/JitRule",
          "description": "Just-in-time rule to create the device resource."
        },
        "resourceDetails": {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetails",
          "description": "Further details about the policy resource"
        }
      },
      "required": [
        "bootstrapAuthentication",
        "resourceDetails"
      ]
    },
    "ProvisioningPolicyResourceDetails": {
      "type": "object",
      "description": "Common further details about the policy resource",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/ProvisioningResourceType",
          "description": "Type of the resource being provisioned."
        }
      },
      "discriminator": "resourceType",
      "required": [
        "resourceType"
      ]
    },
    "ProvisioningPolicyResourceDetailsUpdate": {
      "type": "object",
      "description": "Common further details about the policy resource",
      "properties": {
        "resourceType": {
          "$ref": "#/definitions/ProvisioningResourceType",
          "description": "Type of the resource being provisioned."
        }
      },
      "discriminator": "resourceType"
    },
    "ProvisioningPolicyResourceId": {
      "type": "string",
      "format": "arm-id",
      "description": "A type definition that refers the id to an ARM resource.",
      "pattern": "^/subscriptions/(.+?)/resourceGroups/(.+?)/providers/(.+?)/provisioningResources/(.+?)/provisioningPolicies/(.+)$",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Private.BBeeDev1/ProvisioningResources/ProvisioningPolicies"
          }
        ]
      }
    },
    "ProvisioningPolicyUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ProvisioningPolicy.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningPolicyUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "ProvisioningPolicyUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the ProvisioningPolicy.",
      "properties": {
        "bootstrapAuthentication": {
          "$ref": "#/definitions/BootstrapAuthenticationRuleUpdate",
          "description": "The bootstrap authentication rule."
        },
        "allocations": {
          "type": "array",
          "description": "Allocation rules.",
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/AllocationRule"
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "jit": {
          "$ref": "#/definitions/JitRuleUpdate",
          "description": "Just-in-time rule to create the device resource."
        },
        "resourceDetails": {
          "$ref": "#/definitions/ProvisioningPolicyResourceDetailsUpdate",
          "description": "Further details about the policy resource"
        }
      }
    },
    "ProvisioningResource": {
      "type": "object",
      "description": "A provisioning resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProvisioningResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningResourceListResult": {
      "type": "object",
      "description": "The response of a ProvisioningResource list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ProvisioningResource items on this page",
          "items": {
            "$ref": "#/definitions/ProvisioningResource"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ProvisioningResourceProperties": {
      "type": "object",
      "description": "Details of the EdgeProvisioning ProvisioningResource.",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/Azure.ResourceManager.ResourceProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        },
        "deviceEndpoints": {
          "$ref": "#/definitions/DeviceEndpoints",
          "description": "The provisioning service endpoints.",
          "readOnly": true
        }
      }
    },
    "ProvisioningResourceType": {
      "type": "string",
      "description": "Type of resource being provisioned.",
      "enum": [
        "Microsoft.DeviceRegistry/devices",
        "Microsoft.HybridCompute/machines"
      ],
      "x-ms-enum": {
        "name": "ProvisioningResourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "DeviceRegistryDevice",
            "value": "Microsoft.DeviceRegistry/devices",
            "description": "Azure device registry device. Microsoft.DeviceRegistry/devices"
          },
          {
            "name": "HybridComputeMachine",
            "value": "Microsoft.HybridCompute/machines",
            "description": "Arc enabled device. Microsoft.HybridCompute/machines"
          }
        ]
      }
    },
    "ProvisioningResourceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the ProvisioningResource.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ProvisioningRule": {
      "type": "object",
      "description": "The provisioning rule.",
      "properties": {
        "type": {
          "$ref": "#/definitions/ProvisioningResourceType",
          "description": "Type of the resource being provisioned."
        },
        "jit": {
          "$ref": "#/definitions/JitRule",
          "description": "Just-in-time rule to create the device resource."
        },
        "operationalIdentityInfo": {
          "$ref": "#/definitions/IdentityInfo",
          "description": "Identity information."
        },
        "resourceMetadata": {
          "type": "string",
          "description": "Resource metadata.",
          "maxLength": 200
        }
      },
      "required": [
        "type"
      ]
    },
    "SourceType": {
      "type": "string",
      "description": "Potential sources for cert issuance config.",
      "enum": [
        "CSR",
        "Policy",
        "Substitute"
      ],
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true,
        "values": [
          {
            "name": "CSR",
            "value": "CSR",
            "description": "From certificate signing request."
          },
          {
            "name": "Policy",
            "value": "Policy",
            "description": "From the enrollment policy."
          },
          {
            "name": "Substitute",
            "value": "Substitute",
            "description": "From the substitute."
          }
        ]
      }
    },
    "StaticAllocationEndpoint": {
      "type": "object",
      "description": "Static allocation endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the endpoint."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource id of the endpoint."
        },
        "hostName": {
          "type": "string",
          "description": "host name of the endpoint."
        }
      },
      "required": [
        "name",
        "resourceId",
        "hostName"
      ]
    },
    "StaticAllocationRule": {
      "type": "object",
      "description": "The allocation rule for static allocation type.",
      "properties": {
        "endpoints": {
          "type": "array",
          "description": "List of endpoints for static allocation type.",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "$ref": "#/definitions/StaticAllocationEndpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "endpoints"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AllocationRule"
        }
      ],
      "x-ms-discriminator-value": "Static"
    },
    "SupportedCurveType": {
      "type": "string",
      "description": "Supported curve types.",
      "enum": [
        "NistP256",
        "NistP384",
        "NistP521",
        "Secp256K1"
      ],
      "x-ms-enum": {
        "name": "SupportedCurveType",
        "modelAsString": true,
        "values": [
          {
            "name": "NistP256",
            "value": "NistP256",
            "description": "Indicate the NistP256 Curve Type."
          },
          {
            "name": "NistP384",
            "value": "NistP384",
            "description": "Indicate the NistP384 Curve Type."
          },
          {
            "name": "NistP521",
            "value": "NistP521",
            "description": "Indicate the NistP521 Curve Type."
          },
          {
            "name": "Secp256K1",
            "value": "Secp256K1",
            "description": "Indicate the Secp256K1 Curve Type."
          }
        ]
      }
    },
    "SupportedExtendedKeyUsage": {
      "type": "string",
      "description": "Supported extended key usages.",
      "enum": [
        "ClientAuth",
        "CodeSigning",
        "EmailProtection",
        "IpsecEndSystem",
        "IpsecTunnel",
        "IpsecUser",
        "MacAddress",
        "OcspSigning",
        "ServerAuth",
        "SmartcardLogon",
        "TimeStamping"
      ],
      "x-ms-enum": {
        "name": "SupportedExtendedKeyUsage",
        "modelAsString": true,
        "values": [
          {
            "name": "ClientAuth",
            "value": "ClientAuth",
            "description": "Client auth."
          },
          {
            "name": "CodeSigning",
            "value": "CodeSigning",
            "description": "Code signing."
          },
          {
            "name": "EmailProtection",
            "value": "EmailProtection",
            "description": "Email protection."
          },
          {
            "name": "IpsecEndSystem",
            "value": "IpsecEndSystem",
            "description": "Ipsec end system."
          },
          {
            "name": "IpsecTunnel",
            "value": "IpsecTunnel",
            "description": "Ipsec tunnel."
          },
          {
            "name": "IpsecUser",
            "value": "IpsecUser",
            "description": "Ipsec user."
          },
          {
            "name": "MacAddress",
            "value": "MacAddress",
            "description": "Mac address."
          },
          {
            "name": "OcspSigning",
            "value": "OcspSigning",
            "description": "Ocsp signing."
          },
          {
            "name": "ServerAuth",
            "value": "ServerAuth",
            "description": "Server auth."
          },
          {
            "name": "SmartcardLogon",
            "value": "SmartcardLogon",
            "description": "Smartcard logon."
          },
          {
            "name": "TimeStamping",
            "value": "TimeStamping",
            "description": "Time stamping."
          }
        ]
      }
    },
    "SupportedIssuingAuthority": {
      "type": "string",
      "description": "Supported issuing authority.",
      "enum": [
        "FirstParty"
      ],
      "x-ms-enum": {
        "name": "SupportedIssuingAuthority",
        "modelAsString": true,
        "values": [
          {
            "name": "FirstParty",
            "value": "FirstParty",
            "description": "First party cert issuance."
          }
        ]
      }
    },
    "SupportedKeyType": {
      "type": "string",
      "description": "Supported key types.",
      "enum": [
        "RSA",
        "EC"
      ],
      "x-ms-enum": {
        "name": "SupportedKeyType",
        "modelAsString": true,
        "values": [
          {
            "name": "RSA",
            "value": "RSA",
            "description": "Indicate the RSA key type."
          },
          {
            "name": "EC",
            "value": "EC",
            "description": "Indicate the EC key type."
          }
        ]
      }
    },
    "ValidityPeriod": {
      "type": "object",
      "description": "The validity period for an enrollment policy.",
      "properties": {
        "source": {
          "$ref": "#/definitions/SourceType",
          "description": "Source of the value."
        },
        "notBeforeSkewMinutes": {
          "type": "integer",
          "format": "int32",
          "description": "Skew in minutes to account for the time on different computers not being in sync."
        },
        "valueNotBeforeOffSetDays": {
          "type": "integer",
          "format": "int32",
          "description": "For calculation of the NotBefore date."
        },
        "valueValidityPeriodDays": {
          "type": "integer",
          "format": "int32",
          "description": "For calculation of the NotAfter date."
        },
        "allowedNotBeforeOffSetDays": {
          "type": "integer",
          "format": "int32",
          "description": "Allowed not before offset in days."
        },
        "allowedValidityPeriodDays": {
          "type": "integer",
          "format": "int32",
          "description": "Allowed validity period in days."
        }
      },
      "required": [
        "source",
        "notBeforeSkewMinutes"
      ]
    },
    "WeightedAllocationEndpoint": {
      "type": "object",
      "description": "Weighted allocation endpoint.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the endpoint."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource id of the endpoint."
        },
        "hostName": {
          "type": "string",
          "description": "host name of the endpoint."
        },
        "weight": {
          "type": "number",
          "format": "double",
          "description": "Weight of the endpoint."
        }
      },
      "required": [
        "name",
        "resourceId",
        "hostName",
        "weight"
      ]
    },
    "WeightedAllocationRule": {
      "type": "object",
      "description": "The allocation rule for weighted allocation type.",
      "properties": {
        "endpoints": {
          "type": "array",
          "description": "List of endpoints for weighted allocation type.",
          "minItems": 1,
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/WeightedAllocationEndpoint"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      },
      "required": [
        "endpoints"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AllocationRule"
        }
      ],
      "x-ms-discriminator-value": "Weighted"
    },
    "X509BootstrapAuthenticationRule": {
      "type": "object",
      "description": "The x509-based authentication rule for bootstrapping.",
      "properties": {
        "primaryCertificate": {
          "type": "string",
          "description": "The primary certificate. B64 x509 cert"
        },
        "secondaryCertificate": {
          "type": "string",
          "description": "The secondary certificate."
        }
      },
      "required": [
        "primaryCertificate"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BootstrapAuthenticationRule"
        }
      ],
      "x-ms-discriminator-value": "X509"
    },
    "X509BootstrapAuthenticationRuleUpdate": {
      "type": "object",
      "description": "The x509-based authentication rule for bootstrapping.",
      "properties": {
        "primaryCertificate": {
          "type": "string",
          "description": "The primary certificate. B64 x509 cert"
        },
        "secondaryCertificate": {
          "type": "string",
          "description": "The secondary certificate."
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/BootstrapAuthenticationRuleUpdate"
        }
      ],
      "x-ms-discriminator-value": "X509"
    }
  },
  "parameters": {
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    }
  }
}
