// Definitions for the TeamsCallingResource

import "@cadl-lang/openapi";
import "@cadl-lang/rest";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";

namespace Microsoft.Impact;

using Cadl.Http;
using Cadl.Rest;
using OpenAPI;
using Azure.ResourceManager;

@doc("WorkloadImpacts resource")
model WorkloadImpact is ProxyResource<WorkloadImpactsProperties> {
  @pattern("^[a-zA-Z0-9-]{3,40}$")
  @key("workloadImpactName")
  @segment("workloadImpacts")
  @doc("workloadImpact resource ")
  @visibility("Read")
  @path
  name: string;
}

@doc("Details about impacted performance metrics. Applicable for performance related impact")
model Performance {
  @doc("The name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API" )
	metricName?: string;
	@doc("threshold value for the metric")
	expected?: float64;
	@doc("what is the observed value")
	actual?: float64;
}

@doc("Details about the connectivity issue. Applicable only for connectivity type of impacts.")
model Connectivity {
  @doc("The protocol used for the connection")
	protocol?: Protocol;
	@doc("The port number for the connection")
	port?: int32;
	@doc("The source of the connection")
	source?: SourceOrDest;
  @doc("The destination of the connection")
  destination?: SourceOrDest;
}

@doc("Addition fields related to impact, The list of allowed values can be found from /impactCategories API")
model AdditionalProperties {
  @doc("ARM Error code associated with the impact.")
	errorCode?: string;
	@doc("ARM Error Message associated with the impact")
	errorMessage?: string;
}

@doc("Customer workload details")
model Workload {
	@doc("Customer workload identifier i.e name")
	context: string;
	@doc("Tool used to interact with Azure. SDK, AzPortal, etc.., Other")
	toolset?: Toolset;
}


@doc("Details of the workloadImpact resource.")
model WorkloadImpactsProperties is ResourceProperties{

  @doc("Time at which impact was observed ")
  startDateTime: zonedDateTime;

  @doc("Time at which impact has ended ")
  endDateTime?: zonedDateTime;

  @doc("Unique id of the impact (uuid)")
  @visibility("read")
  @pattern("[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}")
  impactUniqueId?: string;

  @doc("Time at which impact is reported")
  @visibility("read")
  reportedTimeUtc? :zonedDateTime;

  @doc("Category of the impact,  details can found from /impactCategories API")
  impactCategory: string;

  @doc("A detailed description of the impact")
  impactDescription?: string;

  @doc("The ARM correlation ids, this is important field for control plane related impacts")
  @extension("x-ms-identifiers", [])
  armCorrelationIds?: string[];

  @doc("The fully qualified ARM id of the impacted azure resource")
  impactedResourceUri: string;

  @doc("Addition fields related to impact, The list of allowed values can be found from /impactCategories API")
  additionalProperties?: AdditionalProperties;

  @doc("Details about the connectivity issue. Applicable only for connectivity type of impacts.")
  connectivity?: Connectivity;

  @doc("Details about impacted performance metrics. Applicable for performance impacts.")
  @extension("x-ms-identifiers", [])
  performance?: Performance[];
  
  @doc("Information about the customerâ€™s workload")
  workload: Workload;

  @doc("Used to correlate multiple impacts together")
  impactGroupId?: string;

  @doc("System that is reporting")
  reportedSource?: reportedSourceEnum;

  @doc("Degree of confidence reporter has on the impact being a platform issue")
  confidence?: confidenceEnum;
  
}

@doc("List of azure interfaces.")
enum Toolset {
  TERRAFORM,
	PUPPET,
	CHEF,
  SDK,
	ANSIBLE,
	ARM,
	PORTAL,
	SHELL,
	OTHER
}
@doc("System that is reporting")
enum reportedSourceEnum {
  OTHER , MANUAL, AUTOMATED, AZURE_MONITOR
}

@doc("Degree of confidence reporter has on the impact being a platform issue.")
enum confidenceEnum {
  LOW, MEDIUM, HIGH
}

@doc("List of protocols")
enum Protocol {
  TCP, UDP
}

@doc("Resource details")
model SourceOrDest {
  @doc("URI of the entity , example: https://microsoft.com ")
  uri?: string;

  @doc("Azure resource uri example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}")
  azureResourceUri?: string,

  @doc("Ipaddress of  server/host")
  ipAddress?: string,
}




@armResourceOperations
interface WorkloadImpacts extends  ResourceCreate<WorkloadImpact>,ResourceRead<WorkloadImpact> , ResourceDelete<WorkloadImpact>,
ResourceListBySubscription<WorkloadImpact>, ResourceListByParent<WorkloadImpact> {
}

