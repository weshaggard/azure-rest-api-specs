{
  "openapi": "3.0.0",
  "info": {
    "title": "Microsoft.Impact",
    "version": "2022-10-15-preview"
  },
  "tags": [
    {
      "name": "RootCauseAttribution"
    },
    {
      "name": "Workloadimpact"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Impact/workloadimpacts/{workloadimpactsName}/rootCauseAttributions/{rootCauseAttributionsName}": {
      "get": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_get",
        "description": "Get a RootCauseAttributions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          },
          {
            "$ref": "#/components/parameters/RootCauseAttributions.rootCauseAttributionsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributions"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_createOrUpdate",
        "description": "Create a RootCauseAttributions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          },
          {
            "$ref": "#/components/parameters/RootCauseAttributions.rootCauseAttributionsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributions"
                }
              }
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributions"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Resource create parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RootCauseAttributions"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_update",
        "description": "Update a RootCauseAttributions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          },
          {
            "$ref": "#/components/parameters/RootCauseAttributions.rootCauseAttributionsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributions"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "The resource properties to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RootCauseAttributionsUpdate"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_delete",
        "description": "Delete a RootCauseAttributions",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          },
          {
            "$ref": "#/components/parameters/RootCauseAttributions.rootCauseAttributionsName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Impact/workloadimpacts/{workloadimpactsName}/rootCauseAttributions": {
      "get": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_ListByWorkloadimpacts",
        "description": "List RootCauseAttributions resources by Workloadimpacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributionsListResult"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadimpacts/{workloadimpactsName}/rootCauseAttributions": {
      "get": {
        "tags": [
          "RootCauseAttribution"
        ],
        "operationId": "RootCauseAttribution_listBySubscription",
        "description": "List RootCauseAttributions resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootCauseAttributionsListResult"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Impact/workloadimpacts/{workloadimpactsName}": {
      "get": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_get",
        "description": "Get a Workloadimpacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workloadimpacts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_createOrUpdate",
        "description": "Create a Workloadimpacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workloadimpacts"
                }
              }
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workloadimpacts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Resource create parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workloadimpacts"
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_update",
        "description": "Update a Workloadimpacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workloadimpacts"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "The resource properties to be updated.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkloadimpactsUpdate"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_delete",
        "description": "Delete a Workloadimpacts",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          },
          {
            "$ref": "#/components/parameters/Workloadimpacts.workloadimpactsName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Impact/workloadimpacts": {
      "get": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_ListByResourceGroup",
        "description": "List Workloadimpacts resources by resource group",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ResourceGroupParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadimpactsListResult"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadimpacts": {
      "get": {
        "tags": [
          "Workloadimpact"
        ],
        "operationId": "Workloadimpact_listBySubscription",
        "description": "List Workloadimpacts resources by subscription ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          },
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkloadimpactsListResult"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.Impact/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_list",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "#/components/parameters/Azure.ResourceManager.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedOperation"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Azure.ResourceManager.ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "components": {
    "parameters": {
      "Azure.ResourceManager.ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "description": "The API version to use for this operation.",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      },
      "Azure.ResourceManager.SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "description": "The ID of the target subscription.",
        "schema": {
          "type": "string",
          "minLength": 1
        }
      },
      "Azure.ResourceManager.ResourceGroupParameter": {
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "description": "The name of the resource group. The name is case insensitive.",
        "schema": {
          "type": "string",
          "pattern": "^[-\\w\\._\\(\\)]+$",
          "minLength": 1,
          "maxLength": 90
        }
      },
      "Workloadimpacts.workloadimpactsName": {
        "name": "workloadimpactsName",
        "in": "path",
        "required": true,
        "description": "Some documentation",
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-]{3,40}$"
        }
      },
      "RootCauseAttributions.rootCauseAttributionsName": {
        "name": "rootCauseAttributionsName",
        "in": "path",
        "required": true,
        "description": "Some documentation",
        "schema": {
          "type": "string",
          "pattern": "^[a-zA-Z0-9-]{3,40}$"
        }
      }
    },
    "schemas": {
      "RootCauseAttributions": {
        "type": "object",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RootCauseAttributionsProperties"
              }
            ],
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true
          }
        },
        "description": "A Contact resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/Azure.ResourceManager.ProxyResourceBase"
          }
        ]
      },
      "Azure.ResourceManager.ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.ErrorDetail"
              }
            ],
            "description": "The error object."
          }
        },
        "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations."
      },
      "RootCauseAttributionsUpdate": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/RootCauseAttributionsUpdateProperties"
          }
        },
        "description": "The type used for update operations of the RootCauseAttributions."
      },
      "RootCauseAttributionsListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RootCauseAttributions"
            },
            "x-cadl-name": "RootCauseAttributions[]",
            "description": "The RootCauseAttributions items on this page"
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page of items",
            "x-cadl-name": "Rest.ResourceLocation<RootCauseAttributions>"
          }
        },
        "description": "The response of a RootCauseAttributions list operation.",
        "required": [
          "value"
        ]
      },
      "Workloadimpacts": {
        "type": "object",
        "properties": {
          "properties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkloadimpactsProperties"
              }
            ],
            "description": "The resource-specific properties for this resource.",
            "x-ms-client-flatten": true
          }
        },
        "description": "A Workloadimpacts resource",
        "allOf": [
          {
            "$ref": "#/components/schemas/Azure.ResourceManager.ProxyResourceBase"
          }
        ]
      },
      "WorkloadimpactsUpdate": {
        "type": "object",
        "properties": {
          "properties": {
            "$ref": "#/components/schemas/WorkloadimpactsUpdateProperties"
          }
        },
        "description": "The type used for update operations of the Workloadimpacts."
      },
      "WorkloadimpactsListResult": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Workloadimpacts"
            },
            "x-cadl-name": "Workloadimpacts[]",
            "description": "The Workloadimpacts items on this page"
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page of items",
            "x-cadl-name": "Rest.ResourceLocation<Workloadimpacts>"
          }
        },
        "description": "The response of a Workloadimpacts list operation.",
        "required": [
          "value"
        ]
      },
      "PagedOperation": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Azure.ResourceManager.Operation"
            },
            "x-cadl-name": "Azure.ResourceManager.Operation[]",
            "description": "The Operation items on this page"
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page of items",
            "x-cadl-name": "Rest.ResourceLocation<Azure.ResourceManager.Operation>"
          }
        },
        "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
        "required": [
          "value"
        ]
      },
      "RootCauseAttributionsProperties": {
        "type": "object",
        "properties": {
          "impactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImpactDetails"
              }
            ],
            "description": "impact details"
          },
          "attributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attributions"
            },
            "x-cadl-name": "Attributions[]",
            "description": "attribution details",
            "x-ms-identifiers": []
          }
        },
        "description": "Details of the Contact resource.",
        "required": [
          "impactDetails",
          "attributions"
        ]
      },
      "Azure.ResourceManager.ProxyResourceBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
            "readOnly": true
          },
          "systemData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.SystemData"
              }
            ],
            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
            "readOnly": true
          }
        },
        "description": "The base proxy resource.",
        "required": [
          "id",
          "type"
        ]
      },
      "Azure.ResourceManager.ErrorDetail": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The error code.",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "The error message.",
            "readOnly": true
          },
          "target": {
            "type": "string",
            "description": "The error target.",
            "readOnly": true
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Azure.ResourceManager.ErrorDetail"
            },
            "x-cadl-name": "Azure.ResourceManager.ErrorDetail[]",
            "description": "The error details.",
            "readOnly": true,
            "x-ms-identifiers": [
              "message",
              "target"
            ]
          },
          "additionalInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Azure.ResourceManager.ErrorAdditionalInfo"
            },
            "x-cadl-name": "Azure.ResourceManager.ErrorAdditionalInfo[]",
            "description": "The error additional info.",
            "readOnly": true,
            "x-ms-identifiers": [
              "message",
              "target"
            ]
          }
        },
        "description": "The error detail."
      },
      "RootCauseAttributionsUpdateProperties": {
        "type": "object",
        "properties": {
          "impactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImpactDetails"
              }
            ],
            "description": "impact details"
          },
          "attributions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attributions"
            },
            "x-cadl-name": "Attributions[]",
            "description": "attribution details",
            "x-ms-identifiers": []
          }
        },
        "description": "The updatable properties of the RootCauseAttributions."
      },
      "WorkloadimpactsProperties": {
        "type": "object",
        "properties": {
          "startDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Details of the workloadimpact"
          },
          "endDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Time the impact has ended in UTC"
          },
          "impactUniqueId": {
            "type": "string",
            "description": "unique id of the impact (uuid)",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
            "readOnly": true
          },
          "reportedTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "time at which impact is reported",
            "readOnly": true
          },
          "impactCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImpactCategories"
              }
            ],
            "description": "The categorization of the impact. This will be resource type specific. Up to 3 levels of category hierarchy will be supported with dot delemeter i.e. <category1>.<category2>.<category3>"
          },
          "impactDescription": {
            "type": "string",
            "description": "A detailed description of the impact"
          },
          "armCorrelationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]",
            "description": "The ARM correlation ids",
            "x-ms-identifiers": []
          },
          "impactedResourceUri": {
            "type": "string",
            "description": "The fully qualified ARM id of the impacted azure resource"
          },
          "additionalProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalProperties"
              }
            ],
            "description": "way to pass information domain specific to resource type/impact category. The list of allowed values will be documented"
          },
          "connectivity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Connectivity"
              }
            ],
            "description": "Details about the connectivity issue. Applicable only for connectivity type of impacts."
          },
          "performance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Performance"
            },
            "x-cadl-name": "Performance[]",
            "description": "Details about impacted performance metrics. Applicable for performance impacts.",
            "x-ms-identifiers": []
          },
          "workload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Workload"
              }
            ],
            "description": "Information about the customer’s workload"
          },
          "impactGroupId": {
            "type": "string",
            "description": "Used to correlate multiple impacts together"
          },
          "impactProps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Widget"
              }
            ],
            "description": "impactDetails"
          }
        },
        "description": "Details of the workloadimpact resource.",
        "required": [
          "startDateTimeUtc",
          "impactCategory",
          "impactedResourceUri",
          "additionalProperties",
          "workload",
          "impactProps"
        ]
      },
      "WorkloadimpactsUpdateProperties": {
        "type": "object",
        "properties": {
          "startDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Details of the workloadimpact"
          },
          "endDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Time the impact has ended in UTC"
          },
          "impactCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImpactCategories"
              }
            ],
            "description": "The categorization of the impact. This will be resource type specific. Up to 3 levels of category hierarchy will be supported with dot delemeter i.e. <category1>.<category2>.<category3>"
          },
          "impactDescription": {
            "type": "string",
            "description": "A detailed description of the impact"
          },
          "armCorrelationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "string[]",
            "description": "The ARM correlation ids",
            "x-ms-identifiers": []
          },
          "impactedResourceUri": {
            "type": "string",
            "description": "The fully qualified ARM id of the impacted azure resource"
          },
          "additionalProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AdditionalProperties"
              }
            ],
            "description": "way to pass information domain specific to resource type/impact category. The list of allowed values will be documented"
          },
          "connectivity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Connectivity"
              }
            ],
            "description": "Details about the connectivity issue. Applicable only for connectivity type of impacts."
          },
          "performance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Performance"
            },
            "x-cadl-name": "Performance[]",
            "description": "Details about impacted performance metrics. Applicable for performance impacts.",
            "x-ms-identifiers": []
          },
          "workload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Workload"
              }
            ],
            "description": "Information about the customer’s workload"
          },
          "impactGroupId": {
            "type": "string",
            "description": "Used to correlate multiple impacts together"
          },
          "impactProps": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Widget"
              }
            ],
            "description": "impactDetails"
          }
        },
        "description": "The updatable properties of the Workloadimpacts."
      },
      "Azure.ResourceManager.Operation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
            "readOnly": true
          },
          "isDataAction": {
            "type": "boolean",
            "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
            "readOnly": true
          },
          "display": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.OperationDisplay"
              }
            ],
            "description": "Localized display information for this particular operation."
          },
          "origin": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.Origin"
              }
            ],
            "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
            "readOnly": true
          },
          "actionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.ActionType"
              }
            ],
            "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs."
          }
        },
        "description": "Details of a REST API operation, returned from the Resource Provider Operations API"
      },
      "ImpactDetails": {
        "type": "object",
        "properties": {
          "impactUniqueId": {
            "type": "string",
            "description": "The unique id of the impact",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          },
          "reportedTimeUtc": {
            "type": "string",
            "format": "date-time",
            "description": "The time the impact was reported"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The start time of the impact"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "The end time of the impact"
          },
          "impactCategory": {
            "type": "string",
            "description": "The category of the impact",
            "pattern": "([A-Za-z]+.)+[A-Za-z]+"
          },
          "impactGroupId": {
            "type": "string",
            "description": "Group id used to correlate multiple impacts"
          }
        },
        "description": "details of impact associated with this attribution",
        "required": [
          "impactUniqueId",
          "reportedTimeUtc",
          "startDateTime",
          "impactCategory"
        ]
      },
      "Attributions": {
        "type": "object",
        "properties": {
          "rcaUniqueId": {
            "type": "string",
            "description": "Unique Id to identify the RCA in RCA engines",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
          },
          "resourceUri": {
            "type": "string",
            "description": "Unique Id to identify the RCA in RCA engines"
          },
          "rootCauseAttributionTime": {
            "type": "string",
            "format": "date-time",
            "description": "time at which attribution was generated"
          },
          "rootCauseAttributionCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RootCauseAttributionCategory"
              }
            ],
            "description": "attribution category"
          },
          "processingStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/processingStatus"
              }
            ],
            "description": "status of rca"
          },
          "summary": {
            "type": "string",
            "description": "Short Summary of the RCA. This will be a customer ready content derived from the category."
          }
        },
        "description": "attribution details",
        "required": [
          "rcaUniqueId",
          "resourceUri",
          "rootCauseAttributionCategory",
          "processingStatus"
        ]
      },
      "Azure.ResourceManager.SystemData": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "description": "The identity that created the resource.",
            "readOnly": true
          },
          "createdByType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.createdByType"
              }
            ],
            "description": "The type of identity that created the resource.",
            "readOnly": true
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "description": "The type of identity that created the resource.",
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "The identity that last modified the resource.",
            "readOnly": true
          },
          "lastModifiedByType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Azure.ResourceManager.createdByType"
              }
            ],
            "description": "The type of identity that last modified the resource.",
            "readOnly": true
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date",
            "description": "The timestamp of resource last modification (UTC)",
            "readOnly": true
          }
        },
        "description": "Metadata pertaining to creation and last modification of the resource."
      },
      "Azure.ResourceManager.ErrorAdditionalInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The additional info type.",
            "readOnly": true
          },
          "info": {
            "type": "object",
            "properties": {},
            "description": "The additional info.",
            "x-cadl-name": "{}",
            "readOnly": true
          }
        },
        "description": "The resource management error additional info."
      },
      "ImpactCategories": {
        "type": "string",
        "description": "enum of categories VM - createVM, SQL - SQLCreate",
        "enum": [
          "CONTROL_PLANE",
          "DATA_PLANE",
          "VM_CREATE",
          "VM_DELETE",
          "SQL_CREATE",
          "SQL_DELETE"
        ]
      },
      "AdditionalProperties": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Error code associated with the impact."
          },
          "errorMessage": {
            "type": "string",
            "description": "Error Message associated with the impact"
          }
        },
        "description": "way to pass information domain specific to resource type/impact category. The list of allowed values will be documented)."
      },
      "Connectivity": {
        "type": "object",
        "properties": {
          "protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Protocol"
              }
            ],
            "description": "The protocol used for the connection"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "description": "The port number for the connection"
          },
          "direction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Direction"
              }
            ],
            "description": "The direction of the connection"
          },
          "source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceOrDest"
              }
            ],
            "description": "The source of the connection"
          },
          "destination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceOrDest"
              }
            ],
            "description": "The destination of the connection"
          }
        },
        "description": "Details about the connectivity issue. Applicable only for connectivity type of impacts."
      },
      "Performance": {
        "type": "object",
        "properties": {
          "metricName": {
            "type": "string",
            "description": "The name of the region in which the resources needed for Teams Calling will be deployed."
          },
          "expected": {
            "type": "number",
            "format": "double",
            "description": "IP address to use to contact the operator network from this region"
          },
          "actual": {
            "type": "number",
            "format": "double",
            "description": "IP address to use to contact the ESRPs from this region"
          }
        },
        "description": "Details about impacted performance metrics. Applicable for performance impacts.."
      },
      "Workload": {
        "type": "object",
        "properties": {
          "context": {
            "type": "string",
            "description": "Information about the customer’s workload."
          },
          "toolset": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Toolset"
              }
            ],
            "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other"
          }
        },
        "description": "customer worload details",
        "required": [
          "context"
        ]
      },
      "Widget": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/HeavyWidget"
          },
          {
            "$ref": "#/components/schemas/LightWidget"
          }
        ],
        "discriminator": {
          "propertyName": "kind",
          "mapping": {
            "Heavy": "#/components/schemas/HeavyWidget",
            "Light": "#/components/schemas/LightWidget"
          }
        }
      },
      "Azure.ResourceManager.OperationDisplay": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\"."
          },
          "resource": {
            "type": "string",
            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\"."
          },
          "operation": {
            "type": "string",
            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\"."
          },
          "description": {
            "type": "string",
            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views."
          }
        },
        "description": "Localized display information for and operation."
      },
      "Azure.ResourceManager.Origin": {
        "oneOf": [
          {
            "type": "string",
            "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\""
          },
          {
            "type": "string",
            "enum": [
              "user",
              "system",
              "user,system"
            ]
          }
        ]
      },
      "Azure.ResourceManager.ActionType": {
        "oneOf": [
          {
            "type": "string",
            "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs."
          },
          {
            "type": "string",
            "enum": [
              "Internal"
            ]
          }
        ]
      },
      "RootCauseAttributionCategory": {
        "type": "string",
        "description": "list of protocols",
        "enum": [
          "KNOWN_ISSUE",
          "NO_ISSUE_DETECTED",
          "ROLLOUT_ISSUE",
          "RCA_IN_PROGRESS",
          "OTHER_ISSUE"
        ]
      },
      "processingStatus": {
        "type": "string",
        "description": "list of protocols",
        "enum": [
          "ACTIVE",
          "RESOLVED"
        ]
      },
      "Azure.ResourceManager.createdByType": {
        "oneOf": [
          {
            "type": "string",
            "description": "The kind of entity that created the resource."
          },
          {
            "type": "string",
            "enum": [
              "User",
              "Application",
              "ManagedIdentity",
              "Key"
            ]
          }
        ]
      },
      "Protocol": {
        "type": "string",
        "description": "list of protocols",
        "enum": [
          "TCP",
          "UDP"
        ]
      },
      "Direction": {
        "type": "string",
        "description": "direction of communication",
        "enum": [
          "INBOUND",
          "OUTBOUND"
        ]
      },
      "SourceOrDest": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "description": "URI of the entity  "
          },
          "azureResourceUri": {
            "type": "string",
            "description": "azure resource uri"
          },
          "ipAddress": {
            "type": "string",
            "description": "ipaddress of  server/host"
          }
        },
        "description": "resource details",
        "required": [
          "uri"
        ]
      },
      "Toolset": {
        "type": "string",
        "description": "list of azure interfaces.",
        "enum": [
          "TERRAFORM",
          "PUPPET",
          "CHEF",
          "SDK",
          "ANSILE",
          "ARM",
          "PORTAL",
          "SHELL",
          "OTHER"
        ]
      },
      "HeavyWidget": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Heavy"
            ]
          }
        },
        "required": [
          "kind"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/WidgetBase"
          }
        ]
      },
      "LightWidget": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "enum": [
              "Light"
            ]
          }
        },
        "required": [
          "kind"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/WidgetBase"
          }
        ]
      },
      "WidgetBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string",
            "enum": [
              "red",
              "blue"
            ],
            "x-cadl-name": "red | blue"
          }
        },
        "required": [
          "id",
          "weight",
          "color"
        ]
      }
    },
    "securitySchemes": {
      "azure_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "scopes": {
              "user_impersonation": "impersonate your user account"
            }
          }
        },
        "description": "Azure Active Directory OAuth2 Flow."
      }
    }
  },
  "servers": [
    {
      "url": "https://management.azure.com",
      "description": "Azure Resource Manager url.",
      "variables": {}
    }
  ]
}
