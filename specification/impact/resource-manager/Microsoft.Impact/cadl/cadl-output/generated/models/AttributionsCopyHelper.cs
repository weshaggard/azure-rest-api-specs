// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated />

using System;
using System.ComponentModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Microsoft.Cadl.ProviderHub.Controller;

namespace Microsoft.Impact.Service.Models
{
    /// <summary>
    /// Helper for merging canonical Attributions models as part of a PUT or PATCH operation
    /// </summary>
    public partial class AttributionsCopyHelper
    {
        /// <summary>
        /// Extensibility point: perform actions before data is copied
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        partial void OnBeginCopyForPatch(Attributions source, Attributions target);

        /// <summary>
        /// Extensibility point: perform actions after data is copied
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        partial void OnEndCopyForPatch(Attributions source, Attributions target);

        /// <summary>
        /// Copy the properties of a source Attributions to a target Attributions, using PATCH semantics
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        public void CopyForPatch(Attributions source, Attributions target)
        {
            var serialization = source.SerializationInfo;
            OnBeginCopyForPatch(source, target);
            if (serialization.IsSerializedProperty(nameof(source.RcaUniqueId)))
                target.RcaUniqueId = source.RcaUniqueId;
            if (serialization.IsSerializedProperty(nameof(source.ResourceUri)))
                target.ResourceUri = source.ResourceUri;
            if (serialization.IsSerializedProperty(nameof(source.RootCauseAttributionTime)))
                target.RootCauseAttributionTime = source.RootCauseAttributionTime;
            if (serialization.IsSerializedProperty(nameof(source.RootCauseAttributionCategory)))
                target.RootCauseAttributionCategory = source.RootCauseAttributionCategory;
            if (serialization.IsSerializedProperty(nameof(source.ProcessingStatus)))
                target.ProcessingStatus = source.ProcessingStatus;
            if (serialization.IsSerializedProperty(nameof(source.Summary)))
                target.Summary = source.Summary;
            OnEndCopyForPatch(source, target);
        }

        /// <summary>
        /// Extensibility point: perform actions before data is copied
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        partial void OnBeginCopyForPut(Attributions source, Attributions target);

        /// <summary>
        /// Extensibility point: perform actions after data is copied
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        partial void OnEndCopyForPut(Attributions source, Attributions target);

        /// <summary>
        /// Copy the properties of a source Attributions to a target Attributions, using PUT semantics
        /// </summary>
        /// <param name="source">The source Attributions</param>
        /// <param name="target">The target Attributions</param>
        public void CopyForPut(Attributions source, Attributions target)
        {
            var serialization = source.SerializationInfo;
            OnBeginCopyForPut(source, target);
            target.RcaUniqueId = source.RcaUniqueId;
            target.ResourceUri = source.ResourceUri;
            target.RootCauseAttributionTime = source.RootCauseAttributionTime;
            target.RootCauseAttributionCategory = source.RootCauseAttributionCategory;
            target.ProcessingStatus = source.ProcessingStatus;
            target.Summary = source.Summary;
            OnEndCopyForPut(source, target);
        }
    }
}
