{
  "swagger": "2.0",
  "info": {
    "title": "AksEdge",
    "description": "The Microsoft.AksEdge Rest API spec.",
    "version": "2021-06-01-preview",
    "x-ms-code-generation-settings": {
      "name": "AksEdgeClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AksEdge/clusters/{clustersName}": {
      "get": {
        "operationId": "clusters_Retrieve",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clustersNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the clusters resource.",
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          }
        }
      },
      "put": {
        "operationId": "clusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clustersNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "clusters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the clusters resource.",
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          },
          "201": {
            "description": "Creates the clusters resource.",
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          }
        }
      },
      "delete": {
        "operationId": "clusters_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clustersNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the clusters resource."
          }
        }
      },
      "patch": {
        "operationId": "clusters_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/clustersNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "clusters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/clustersPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the clusters resource.",
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          },
          "201": {
            "description": "Updates the clusters resource.",
            "schema": {
              "$ref": "#/definitions/clusters"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AksEdge/clusters": {
      "get": {
        "operationId": "clusters_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all clusters under the resouce group.",
            "schema": {
              "$ref": "#/definitions/clustersListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AksEdge/clusters": {
      "get": {
        "operationId": "clusters_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all clusters under the subscription.",
            "schema": {
              "$ref": "#/definitions/clustersListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.AksEdge/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "clustersProperties": {
      "type": "object",
      "properties": {
        "addon": {
          "type": "object",
          "additionalProperties": {
            "properties": {
              "config": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Config - Key-value pairs for configuring an add-on.",
                "type": "object"
              },
              "enabled": {
                "description": "Enabled - Whether the add-on is enabled or not.",
                "type": "boolean"
              }
            },
            "required": [
              "config"
            ],
            "type": "object"
          },
          "description": "AddonProfiles - Profile of managed cluster add-on."
        },
        "controlPlane": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
            },
            "hardwareConfig": {
              "type": "object",
              "properties": {
                "customSize": {
                  "type": "object",
                  "properties": {
                    "cpucount": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "memorymb": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "description": "CustomSize Specifies cpu/memory information for custom VMSize types."
                },
                "vmSize": {
                  "type": "string",
                  "description": "VMSize - Size of agent VMs. Possible values"
                }
              },
              "description": "HardwareConfig -  Specifies cpu/memory information for custom VMSize types."
            },
            "linuxProfile": {
              "type": "object",
              "properties": {
                "adminUsername": {
                  "type": "string",
                  "description": "AdminUsername - The administrator username to use for Linux VMs."
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
                    }
                  },
                  "description": "SSH - SSH configuration for Linux-based VMs running on Azure."
                }
              },
              "description": "LinuxProfile - Profile for Linux VMs in the container service cluster."
            },
            "mode": {
              "type": "string",
              "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'AgentPoolModeSystem', 'AgentPoolModeUser'"
            },
            "nodeLabels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
            },
            "nodeTaints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
            },
            "osDiskSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "OsDiskSizeGB - OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
            },
            "osType": {
              "type": "string",
              "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags - Agent pool tags to be persisted on the agent pool virtual machine scale set."
            },
            "windowsProfile": {
              "type": "object",
              "properties": {
                "adminPassword": {
                  "type": "string",
                  "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
                },
                "adminUsername": {
                  "type": "string",
                  "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
                },
                "enableCSIProxy": {
                  "type": "boolean",
                  "description": "EnableCSIProxy - Whether to enable CSI proxy."
                },
                "licenseType": {
                  "type": "string",
                  "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'LicenseTypeNone', 'LicenseTypeWindowsServer'"
                }
              },
              "description": "WindowsProfile - Profile for Windows VMs in the container service cluster."
            }
          },
          "required": [
            "nodeLabels",
            "tags"
          ],
          "description": "ControlPlane - ControlPlane Configuration"
        },
        "kubernetesVersion": {
          "type": "string",
          "description": "KubernetesVersion - Version of Kubernetes specified when creating the managed cluster."
        },
        "loadBalancer": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "format": "int32",
              "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
            },
            "hardwareConfig": {
              "type": "object",
              "properties": {
                "customSize": {
                  "type": "object",
                  "properties": {
                    "cpucount": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "memorymb": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "description": "CustomSize Specifies cpu/memory information for custom VMSize types."
                },
                "vmSize": {
                  "type": "string",
                  "description": "VMSize - Size of agent VMs. Possible values"
                }
              },
              "description": "HardwareConfig -  Specifies cpu/memory information for custom VMSize types."
            },
            "linuxProfile": {
              "type": "object",
              "properties": {
                "adminUsername": {
                  "type": "string",
                  "description": "AdminUsername - The administrator username to use for Linux VMs."
                },
                "ssh": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "keyData": {
                            "type": "string",
                            "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                          }
                        }
                      },
                      "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
                    }
                  },
                  "description": "SSH - SSH configuration for Linux-based VMs running on Azure."
                }
              },
              "description": "LinuxProfile - Profile for Linux VMs in the container service cluster."
            },
            "mode": {
              "type": "string",
              "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'AgentPoolModeSystem', 'AgentPoolModeUser'"
            },
            "nodeLabels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
            },
            "nodeTaints": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
            },
            "osDiskSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "OsDiskSizeGB - OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
            },
            "osType": {
              "type": "string",
              "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
            },
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags - Agent pool tags to be persisted on the agent pool virtual machine scale set."
            },
            "windowsProfile": {
              "type": "object",
              "properties": {
                "adminPassword": {
                  "type": "string",
                  "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
                },
                "adminUsername": {
                  "type": "string",
                  "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
                },
                "enableCSIProxy": {
                  "type": "boolean",
                  "description": "EnableCSIProxy - Whether to enable CSI proxy."
                },
                "licenseType": {
                  "type": "string",
                  "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'LicenseTypeNone', 'LicenseTypeWindowsServer'"
                }
              },
              "description": "WindowsProfile - Profile for Windows VMs in the container service cluster."
            }
          },
          "required": [
            "nodeLabels",
            "tags"
          ],
          "description": "LoadBalancer - LoadBalancer Configuration"
        },
        "networkProfile": {
          "type": "object",
          "properties": {
            "dnsServiceIP": {
              "type": "string",
              "description": "DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
            },
            "dockerBridgeCidr": {
              "type": "string",
              "description": "DockerBridgeCidr - A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
            },
            "networkPlugin": {
              "type": "string",
              "description": "NetworkPlugin - Network plugin used for building Kubernetes network. Possible values include: 'Azure', 'Kubenet'"
            },
            "podCidr": {
              "type": "string",
              "description": "PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used."
            },
            "serviceCidr": {
              "type": "string",
              "description": "ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
            }
          },
          "description": "NetworkProfile - Profile of network configuration."
        },
        "nodeResourceGroup": {
          "type": "string",
          "description": "NodeResourceGroup - Name of the resource group containing agent pool nodes."
        },
        "vnetSubnetID": {
          "type": "string",
          "description": "VnetSubnetID - VNet SubnetID specifies the VNet's subnet identifier."
        },
        "workerPool": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32",
                "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
              },
              "hardwareConfig": {
                "type": "object",
                "properties": {
                  "customSize": {
                    "type": "object",
                    "properties": {
                      "cpucount": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "memorymb": {
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "description": "CustomSize Specifies cpu/memory information for custom VMSize types."
                  },
                  "vmSize": {
                    "type": "string",
                    "description": "VMSize - Size of agent VMs. Possible values"
                  }
                },
                "description": "HardwareConfig -  Specifies cpu/memory information for custom VMSize types."
              },
              "linuxProfile": {
                "type": "object",
                "properties": {
                  "adminUsername": {
                    "type": "string",
                    "description": "AdminUsername - The administrator username to use for Linux VMs."
                  },
                  "ssh": {
                    "type": "object",
                    "properties": {
                      "publicKeys": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyData": {
                              "type": "string",
                              "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                            }
                          }
                        },
                        "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
                      }
                    },
                    "description": "SSH - SSH configuration for Linux-based VMs running on Azure."
                  }
                },
                "description": "LinuxProfile - Profile for Linux VMs in the container service cluster."
              },
              "mode": {
                "type": "string",
                "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'AgentPoolModeSystem', 'AgentPoolModeUser'"
              },
              "nodeLabels": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
              },
              "nodeTaints": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
              },
              "osDiskSizeGB": {
                "type": "integer",
                "format": "int32",
                "description": "OsDiskSizeGB - OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
              },
              "osType": {
                "type": "string",
                "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags - Agent pool tags to be persisted on the agent pool virtual machine scale set."
              },
              "windowsProfile": {
                "type": "object",
                "properties": {
                  "adminPassword": {
                    "type": "string",
                    "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
                  },
                  "adminUsername": {
                    "type": "string",
                    "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
                  },
                  "enableCSIProxy": {
                    "type": "boolean",
                    "description": "EnableCSIProxy - Whether to enable CSI proxy."
                  },
                  "licenseType": {
                    "type": "string",
                    "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'LicenseTypeNone', 'LicenseTypeWindowsServer'"
                  }
                },
                "description": "WindowsProfile - Profile for Windows VMs in the container service cluster."
              }
            },
            "required": [
              "nodeLabels",
              "tags"
            ]
          },
          "description": "WorkerPool -Worker pool References"
        },
        "provisioningState": {
          "type": "string"
        },
        "status": {
          "type": "object",
          "properties": {
            "addonStatus": {
              "type": "object",
              "additionalProperties": {
                "properties": {
                  "errorMessage": {
                    "description": "ErrorMessage will be set in the event that there is a terminal problem reconciling the AddOn and will contain a more verbose string suitable for logging and human consumption.",
                    "type": "string"
                  },
                  "phase": {
                    "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.",
                    "type": "string"
                  },
                  "ready": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "description": "AddonStatus - Status of Addons"
            },
            "errorMessage": {
              "type": "string",
              "description": "ErrorMessage - Error messsages during creation of cluster"
            },
            "powerState": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Code - Tells whether the cluster is Running or Stopped. Possible values include: 'CodeRunning', 'CodeStopped'"
                }
              },
              "description": "PowerState - Represents the Power State of the cluster"
            },
            "provisioningStatus": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "phase": {
                  "type": "string",
                  "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
                },
                "status": {
                  "type": "string"
                }
              },
              "description": "Contains Provisioning errors"
            }
          },
          "description": "AKSEdgeClusterStatus defines the observed state of AKSEdgeCluster"
        }
      },
      "required": [
        "addon"
      ],
      "description": "AKSEdgeClusterSpec defines the desired state of AKSEdgeCluster"
    },
    "clusters": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/clustersProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The clusters resource definition."
    },
    "clustersPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The clusters resource patch definition."
    },
    "clustersListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/clusters"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Results of the request to list operations."
    },
    "ResourceProviderOperation": {
      "type": "object",
      "properties": {
        "isDataAction": {
          "type": "string",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          },
          "description": "Display metadata associated with the operation."
        }
      },
      "description": "Results of the request to list operations."
    }
  },
  "parameters": {
    "clustersNameParameter": {
      "name": "clustersName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
    }
  }
}