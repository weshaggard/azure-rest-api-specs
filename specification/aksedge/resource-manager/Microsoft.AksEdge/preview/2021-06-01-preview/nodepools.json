{
  "swagger": "2.0",
  "info": {
    "title": "AKSEdge",
    "description": "The Microsoft.AKSEdge Rest API spec.",
    "version": "2021-06-01-preview",
    "x-ms-code-generation-settings": {
      "name": "AKSEdgeClient"
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AKSEdge/nodepools/{nodepoolsName}": {
      "get": {
        "operationId": "nodepools_Retrieve",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/nodepoolsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the nodepools resource.",
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          }
        }
      },
      "put": {
        "operationId": "nodepools_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/nodepoolsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "nodepools",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the nodepools resource.",
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          },
          "201": {
            "description": "Creates the nodepools resource.",
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          }
        }
      },
      "delete": {
        "operationId": "nodepools_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/nodepoolsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the nodepools resource."
          }
        }
      },
      "patch": {
        "operationId": "nodepools_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/nodepoolsNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "nodepools",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodepoolsPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the nodepools resource.",
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          },
          "201": {
            "description": "Updates the nodepools resource.",
            "schema": {
              "$ref": "#/definitions/nodepools"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AKSEdge/nodepools": {
      "get": {
        "operationId": "nodepools_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all nodepools under the resouce group.",
            "schema": {
              "$ref": "#/definitions/nodepoolsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AKSEdge/nodepools": {
      "get": {
        "operationId": "nodepools_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all nodepools under the subscription.",
            "schema": {
              "$ref": "#/definitions/nodepoolsListResult"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/providers/Microsoft.AKSEdge/operations": {
      "get": {
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "nodepoolsProperties": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1."
        },
        "hardwareConfig": {
          "type": "object",
          "properties": {
            "customSize": {
              "type": "object",
              "properties": {
                "cpucount": {
                  "type": "integer",
                  "format": "int32"
                },
                "memorymb": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "description": "CustomSize Specifies cpu/memory information for custom VMSize types."
            },
            "vmSize": {
              "type": "string",
              "description": "VMSize - Size of agent VMs. Possible values"
            }
          },
          "description": "HardwareConfig -  Specifies cpu/memory information for custom VMSize types."
        },
        "linuxProfile": {
          "type": "object",
          "properties": {
            "adminUsername": {
              "type": "string",
              "description": "AdminUsername - The administrator username to use for Linux VMs."
            },
            "ssh": {
              "type": "object",
              "properties": {
                "publicKeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "keyData": {
                        "type": "string",
                        "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers."
                      }
                    }
                  },
                  "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified."
                }
              },
              "description": "SSH - SSH configuration for Linux-based VMs running on Azure."
            }
          },
          "description": "LinuxProfile - Profile for Linux VMs in the container service cluster."
        },
        "mode": {
          "type": "string",
          "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'AgentPoolModeSystem', 'AgentPoolModeUser'"
        },
        "nodeImageVersion": {
          "type": "string",
          "description": "NodeImageVersion - READ-ONLY; Version of node image"
        },
        "nodeLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool."
        },
        "nodeTaints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."
        },
        "orchestratorVersion": {
          "type": "string",
          "description": "OrchestratorVersion - Version of orchestrator specified when creating the managed cluster."
        },
        "osDiskSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "OsDiskSizeGB - OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."
        },
        "osType": {
          "type": "string",
          "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'"
        },
        "upgradeSettings": {
          "type": "object",
          "properties": {
            "maxSurge": {
              "type": "string",
              "description": "MaxSurge - Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default"
            }
          },
          "description": "UpgradeSettings - Settings for upgrading the agentpool"
        },
        "windowsProfile": {
          "type": "object",
          "properties": {
            "adminPassword": {
              "type": "string",
              "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\""
            },
            "adminUsername": {
              "type": "string",
              "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters"
            },
            "enableCSIProxy": {
              "type": "boolean",
              "description": "EnableCSIProxy - Whether to enable CSI proxy."
            },
            "licenseType": {
              "type": "string",
              "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'LicenseTypeNone', 'LicenseTypeWindowsServer'"
            }
          },
          "description": "WindowsProfile - Profile for Windows VMs in the container service cluster."
        },
        "provisioningState": {
          "type": "string"
        },
        "status": {
          "type": "object",
          "properties": {
            "errorMessage": {
              "type": "string",
              "description": "ErrorMessage - Error messsages during creation of cluster"
            },
            "powerState": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "Code - Tells whether the cluster is Running or Stopped. Possible values include: 'CodeRunning', 'CodeStopped'"
                }
              },
              "description": "PowerState Describes whether the Agent Pool is Running or Stopped"
            },
            "provisioningStatus": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "phase": {
                  "type": "string",
                  "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc."
                },
                "status": {
                  "type": "string"
                }
              },
              "description": "Contains Provisioning errors"
            },
            "readyReplicas": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of ready machines targeted by this deployment."
            },
            "replicas": {
              "type": "integer",
              "format": "int32",
              "description": "Total number of non-terminated machines targeted by this deployment"
            }
          },
          "description": "AKSEdgeNodePoolStatus defines the observed state of AKSEdgeNodePool"
        }
      },
      "required": [
        "nodeLabels"
      ],
      "description": "AKSEdgeNodePoolSpec defines the desired state of AKSEdgeNodePool"
    },
    "nodepools": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/nodepoolsProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "extendedLocation": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The nodepools resource definition."
    },
    "nodepoolsPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The nodepools resource patch definition."
    },
    "nodepoolsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nodepools"
          }
        },
        "nextLink": {
          "type": "string"
        }
      }
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          }
        },
        "nextLink": {
          "type": "string"
        }
      },
      "description": "Results of the request to list operations."
    },
    "ResourceProviderOperation": {
      "type": "object",
      "properties": {
        "isDataAction": {
          "type": "string",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          },
          "description": "Display metadata associated with the operation."
        }
      },
      "description": "Results of the request to list operations."
    }
  },
  "parameters": {
    "nodepoolsNameParameter": {
      "name": "nodepoolsName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request (e.g. YYYY-MM-DD)."
    }
  }
}