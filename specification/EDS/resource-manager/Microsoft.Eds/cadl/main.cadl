import "@cadl-lang/rest";
import "@cadl-lang/versioning";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Versioning;
using Azure.ResourceManager;
using OpenAPI;

@armProviderNamespace("Microsoft.Eds")
@service({
  title: "Microsoft.Eds",
  version: "2023-03-02-preview",
})
@versionedDependency(Azure.ResourceManager.Versions.v1_0_Preview_1)
namespace Microsoft.Eds;
interface Operations extends Azure.ResourceManager.Operations {}

#suppress "@azure-tools/cadl-azure-resource-manager/arm-resource-path-segment-invalid-chars" "Existing Template"
#suppress "@azure-tools/cadl-azure-resource-manager/arm-resource-key-invalid-chars" "Existing template"

@doc("The status of the current operation.")
@Azure.Core.lroStatus
enum ProvisioningState {
  ...ResourceProvisioningState,
  Provisioning,
  Updating,
  Deleting,
  Accepted,
}

@minValue(1)
scalar ProductQuantity extends int32;

@doc("An Order request.")
model OrderRequest is TrackedResource<OrderRequestProperties> {
  @doc("Order request API details")
  @pattern("^[a-zA-Z0-9-]{36,38}$")
  @key("orderRequestId")
  @segment("orderRequests")
  @visibility("read")
  @path
  name: string;
}
  
@armResourceOperations
interface OrderRequests {
  get is ArmResourceRead<OrderRequest>;
  create is ArmResourceCreateOrUpdateAsync<OrderRequest>;
  update is ArmResourcePatchSync<OrderRequest, OrderRequestProperties>;
  delete is ArmResourceDeleteSync<OrderRequest>;
  listByResourceGroup is ArmResourceListByParent<OrderRequest>;
  listBySubscription is ArmListBySubscription<OrderRequest>;
}

@doc("Order request properties.")
model OrderRequestProperties {
  @visibility("read")
  @doc("The status of the last operation.")
  provisioningState?: ProvisioningState;  
  @doc("Big Catalog Products detail like product Id, SkuId, etc.")
  @extension("x-ms-identifiers",[])
  @minItems(1)
  orderLineItemRequests:OrderLineItemRequest[];       
}

@doc("Order Line Item details.")
model OrderLineItemRequest
{
    @doc("UPN associated with Big Catalog XDK product.")
    productCode:string;
	@doc("Big Catalog Product Identifier.")
	productId:string;
	@doc("SKU Identifier")
	skuId:string;
	@doc("Quantity being bought.")
	quantity:ProductQuantity;
	@visibility("read")
	@doc("Response Status Code.")
    lineitemPurchaseStatus: PurchaseStatus;
	@visibility("read")
	@doc("Purchase Status Message.")
    purchaseMessage: string;
	@visibility("read")
	@doc("Whether transaction if failed can be retried.")
    isRetriableError: boolean;
}

@doc("Purchase status.")
enum PurchaseStatus
{
    None,
	Success,
	Error,
}