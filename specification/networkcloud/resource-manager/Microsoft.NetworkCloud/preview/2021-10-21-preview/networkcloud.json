{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Network Cloud APIs provide management of the on-premises clusters and their resources, such as, racks, bare-metal hosts, virtual machines, workload networks and more.",
    "title": "NetworkCloud",
    "version": "2021-10-21-preview"
  },
  "host": "management.azure.com",
  "paths": {
    "/providers/Microsoft.NetworkCloud/operations": {
      "get": {
        "description": "Get a list of all available resource provider operations. It contains a URL link to get the next set of results.",
        "summary": "List resource provider operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List resource provider operations": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusterManagers": {
      "get": {
        "description": "Get a list of all cluster managers in a given subscription.",
        "summary": "List cluster managers in a subscription.",
        "operationId": "ClusterManagers_ListSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManagerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster manager for the subscription": {
            "$ref": "./examples/ClusterManagers_ListSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of all clusters in a given subscription.",
        "summary": "List clusters in a subscription.",
        "operationId": "Clusters_ListSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List clusters for subscription": {
            "$ref": "./examples/Clusters_ListSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/locations/{location}/operationStatuses/{operationId}": {
      "get": {
        "description": "Get the latest details of the long running operation.",
        "summary": "Get the long running operation status.",
        "operationId": "OperationStatuses_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/LocationParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/OperationIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationStatusResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get log running operation status": {
            "$ref": "./examples/OperationStatuses_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "Get a list of all virtual machines for a specific subscription. The API returns 200 OK when the API is successful.",
        "summary": "Retrieve all virtual machines for a specific subscription.",
        "operationId": "VirtualMachines_ListSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machines for subscription": {
            "$ref": "./examples/VirtualMachines_ListSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "Get a list of all workload networks in a given subscription.  The API returns 200 OK when the API is successful.",
        "summary": "List workload networks in a subscription.",
        "operationId": "WorkloadNetworks_ListSubscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List workload networks for subscription": {
            "$ref": "./examples/WorkloadNetworks_ListSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers": {
      "get": {
        "description": "Get a list of all cluster managers in a given resource group.",
        "summary": "List cluster managers from a specific resource group.",
        "operationId": "ClusterManagers_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManagerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List cluster manager for the resource group": {
            "$ref": "./examples/ClusterManagers_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterManagers/{clusterManagerName}": {
      "get": {
        "description": "Get the properties of a specific cluster manager.",
        "summary": "Retrieve a specific cluster manager.",
        "operationId": "ClusterManagers_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster manager": {
            "$ref": "./examples/ClusterManagers_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new cluster manager or update the properties of cluster manager if it exists. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update a specific cluster manager.",
        "operationId": "ClusterManagers_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterManagerParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update cluster manager": {
            "$ref": "./examples/ClusterManagers_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete a specific cluster manager.The API returns 200 OK when the cluster manager is deleted successfully. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete a specific cluster manager.",
        "operationId": "ClusterManagers_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete cluster manager": {
            "$ref": "./examples/ClusterManagers_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch the properties of a specific cluster manager, or update the tags assigned to the cluster manager. Properties and tag updates can be done independently. The API returns 200 OK when the API is successful.",
        "summary": "Patch a specific cluster manager.",
        "operationId": "ClusterManagers_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterManagerNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterManagerUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagsParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterManager"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch cluster manager": {
            "$ref": "./examples/ClusterManagers_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of all clusters in a given resource group.",
        "summary": "List clusters in a resource group.",
        "operationId": "Clusters_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List clusters for resource group": {
            "$ref": "./examples/Clusters_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}": {
      "get": {
        "description": "Get the properties of a specific cluster.",
        "summary": "Retrieve a specific cluster.",
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get cluster": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new cluster or update the properties of the cluster if it exists. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update a specific cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update cluster": {
            "$ref": "./examples/Clusters_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete a specific cluster. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete a specific cluster.",
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete cluster": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch the properties of a specific cluster, or update the tags assigned to the cluster. Properties and tag updates can be done independently. The API returns 200 OK when the API is successful.",
        "summary": "Patch a specific cluster.",
        "operationId": "Clusters_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterPatchParameters"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch cluster": {
            "$ref": "./examples/Clusters_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/applyRackManifests": {
      "post": {
        "description": "Apply rack manifests to a cluster. This would update the existing cluster by applying rack manifests that have no rack associated yet.\nThe API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Apply rack manifests to a cluster.",
        "operationId": "Clusters_ApplyRackManifests",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Apply rack manifests to cluster": {
            "$ref": "./examples/Clusters_ApplyRackManifests.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/deploy": {
      "post": {
        "description": "Deploy a cluster to a provided rack. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Deploy a cluster to a provided rack.",
        "operationId": "Clusters_Deploy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterDeployParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterDeployParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Deploy cluster": {
            "$ref": "./examples/Clusters_Deploy.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{clusterName}/updateVersion": {
      "post": {
        "description": "Update a version of a provided cluster to one of the available supported versions. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Update a cluster version.",
        "operationId": "Clusters_UpdateVersion",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ClusterNameParameter"
          },
          {
            "description": "The request body.",
            "name": "clusterUpdateVersionParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ClusterUpdateVersionParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Update cluster version": {
            "$ref": "./examples/Clusters_UpdateVersion.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "Get a list of all virtual machines in a given resource group. The API returns 200 OK when the API is successful.",
        "summary": "List virtual machines in a resource group.",
        "operationId": "VirtualMachines_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List virtual machines for resource group": {
            "$ref": "./examples/VirtualMachines_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}": {
      "get": {
        "description": "Get the properties of a specific virtual machine. The API returns 200 OK when the operation is successful.",
        "summary": "Retrieve a specific virtual machine.",
        "operationId": "VirtualMachines_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get virtual machine": {
            "$ref": "./examples/VirtualMachines_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new virtual machine or update the properties of the existing virtual machine. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Creates or updates a specific virtual machine.",
        "operationId": "VirtualMachines_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachineParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update virtual machine": {
            "$ref": "./examples/VirtualMachines_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete a provided virtual machine. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete a specific virtual machine.",
        "operationId": "VirtualMachines_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete virtual machine": {
            "$ref": "./examples/VirtualMachines_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch the properties of a specific virtual machine, or update the tags assigned to the virtual machine. Properties and tag updates can be done independently. The API returns 200 OK when the API is successful.",
        "summary": "Patch a specific virtual machine.",
        "operationId": "VirtualMachines_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachineUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagsParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch virtual machine": {
            "$ref": "./examples/VirtualMachines_Update.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/powerOff": {
      "post": {
        "description": "Power off a provided Network Cloud Virtual Machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Power off a specific Network Cloud Virtual Machine.",
        "operationId": "VirtualMachines_PowerOff",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          },
          {
            "description": "The request body.",
            "name": "virtualMachinePowerOffParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VirtualMachinePowerOffParameters"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Power off a virtual machine": {
            "$ref": "./examples/VirtualMachines_PowerOff.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/reimage": {
      "post": {
        "description": "Reimage a specific virtual Machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Reimage a specific virtual machine.",
        "operationId": "VirtualMachines_Reimage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Reimage a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Reimage.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/restart": {
      "post": {
        "description": "Restart a specific virtual machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Restart a specific virtual machine.",
        "operationId": "VirtualMachines_Restart",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Restart a virtual machine": {
            "$ref": "./examples/VirtualMachines_Restart.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{virtualMachineName}/start": {
      "post": {
        "description": "Start a provided Network Cloud Virtual Machine. The API returns 202 Accepted as the operation is performed asynchronously.",
        "summary": "Start a specific Network Cloud Virtual Machine.",
        "operationId": "VirtualMachines_Start",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualMachineNameParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Start a virtual machine": {
            "$ref": "./examples/VirtualMachines_Start.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "Get a list of all workload networks in a given resource group.  The API returns 200 OK when the API is successful.",
        "summary": "List workload networks in a resource group.",
        "operationId": "WorkloadNetworks_List",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "List workload networks for resource group": {
            "$ref": "./examples/WorkloadNetworks_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks/{workloadNetworkName}": {
      "get": {
        "description": "Get the properties of a specific workload network. The API returns 200 OK when the API operation is successful.",
        "summary": "Retrieve a specific workload network.",
        "operationId": "WorkloadNetworks_Get",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkloadNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get workload network": {
            "$ref": "./examples/WorkloadNetworks_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new workload network or update the properties of the existing workload network. The API returns 200 OK in case of the successful creation or update. 201 Created is returned when the operation is performed asynchronously.",
        "summary": "Create or update a specific workload network.",
        "operationId": "WorkloadNetworks_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkloadNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "workloadNetworkParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Create or update workload network": {
            "$ref": "./examples/WorkloadNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "Delete a provided workload network. The API returns 200 OK when the deletion is successful. 202 Accepted is returned when the operation is performed asynchronously.",
        "summary": "Delete a specific workload network.",
        "operationId": "WorkloadNetworks_Delete",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkloadNetworkNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete workload network": {
            "$ref": "./examples/WorkloadNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "description": "Patch the properties of a specific workload network, or update the tags assigned to the workload network. Properties and tag updates can be done independently. The API returns 200 OK when the API is successful.",
        "summary": "Patch a specific workload network.",
        "operationId": "WorkloadNetworks_Update",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/WorkloadNetworkNameParameter"
          },
          {
            "description": "The request body.",
            "name": "workloadNetworkUpdateParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/TagsParameter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch workload network": {
            "$ref": "./examples/WorkloadNetworks_Update.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AggregatorRackSkuSupported": {
      "description": "Note that this will only contain references to the aggregator rack.\nA secondary lookup of that aggregator rack SKU will provide the references to the Compute rack SKU information.",
      "type": "object",
      "title": "Aggregator rack SKU details supported by the cluster manager.",
      "properties": {
        "id": {
          "description": "Resource ID of the Rack SKU",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "A descriptive name of the rack sku",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BareMetalMachineProperties": {
      "type": "object",
      "title": "BareMetalMachineProperties represents the properties of a baremetal machine.",
      "required": [
        "bootMacAddress"
      ],
      "properties": {
        "adminStatus": {
          "description": "Admin status of the bare-metal machine.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AdminState"
          },
          "readOnly": true
        },
        "bmcConnectionString": {
          "description": "The connection string for the bare-metal controller on this bare-metal machine.",
          "type": "string",
          "readOnly": true
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bootMacAddress": {
          "description": "MAC address of a NIC connected to the PXE network.",
          "type": "string"
        },
        "clusterId": {
          "description": "A fully-qualified identifier of the cluster this bare-metal machine is associated with.",
          "type": "string",
          "readOnly": true
        },
        "cordonStatus": {
          "description": "Cordon status of the bare-metal machine.",
          "type": "string",
          "enum": [
            "Cordoned",
            "Uncordoned"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CordonStatus"
          },
          "readOnly": true
        },
        "hardwareInventory": {
          "$ref": "#/definitions/HardwareInventory"
        },
        "machineDetails": {
          "description": "Details provided by the customer during the creation of rack manifests\nthat allows for “custom data” to be associated with this machine",
          "type": "string",
          "readOnly": true
        },
        "machineLocation": {
          "description": "A user-friendly description of the bare-metal machine's location.",
          "type": "string"
        },
        "machineSkuId": {
          "description": "A unique internal identifier of the bare-metal machine SKU.",
          "type": "string",
          "readOnly": true
        },
        "powerState": {
          "description": "Power state of the bare-metal machine.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PowerState"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the bare-metal machine.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Pending",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BareMetalMachineProvisioningState"
          },
          "readOnly": true
        },
        "rackId": {
          "description": "Resource identifier of the rack where this bare-metal machine resides.",
          "type": "string",
          "readOnly": true
        },
        "rackSlot": {
          "description": "Rack slot in which this bare-metal machine is located, ordered from the bottom up i.e. the lowest slot is 1.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "readyState": {
          "description": "Indicator of whether the bare-metal machine is ready to receive workloads.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ReadyState"
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/BareMetalMachineStatus"
        },
        "tpmEndorsementKey": {
          "description": "A thumbprint or SHA of the TPM endorsement key that ensures authenticity of the bare-metal machine.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BareMetalMachineStatus": {
      "description": "BareMetalMachineStatus denotes the status of the bare-metal machine",
      "type": "object",
      "properties": {
        "detailedStatus": {
          "description": "A more detailed status of the bare-metal machine.",
          "type": "string",
          "enum": [
            "Preparing",
            "Error",
            "Available",
            "Provisioning",
            "Provisioned",
            "Deprovisioning"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DetailedStatus"
          },
          "readOnly": true
        },
        "detailedStatusMessage": {
          "description": "A descriptive message about the current detailed status.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "BareMetalMachineUserData": {
      "description": "Bare-metal machine user data",
      "type": "object",
      "required": [
        "rackSlot",
        "bootMacAddress",
        "bmcCredentials",
        "tpmEndorsementKey",
        "bmcMacAddress"
      ],
      "properties": {
        "bmcConnectionString": {
          "description": "The connection string for the bare-metal controller on this bare-metal machine.",
          "type": "string",
          "readOnly": true
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bmcMacAddress": {
          "description": "MAC address of the bare-metal controller on this machine.",
          "type": "string"
        },
        "bootMacAddress": {
          "description": "The MAC address of a NIC connected to the PXE network.",
          "type": "string"
        },
        "machineDetails": {
          "description": "Additional optional details such as SerialNumber, AssetTag, etc.",
          "type": "string"
        },
        "machineName": {
          "description": "A user provided name for the bare-metal machine created from this user data.\nIf not provided, a name will be generated programmatically.",
          "type": "string"
        },
        "rackSlot": {
          "description": "The slot in which this physical machine is located, ordered from the bottom up i.e. the lowest slot is 1.\nIt is positional, so the first machine at the bottom is rackSlot: 1, the second machine up is rackSlot: 2.",
          "type": "integer",
          "format": "int64"
        },
        "tpmEndorsementKey": {
          "description": "The thumbprint or SHA of the TPM Endorsement Key that allows the resource provider to ensure\nauthenticity of the machine.",
          "type": "string"
        }
      }
    },
    "BmcCredentials": {
      "type": "object",
      "title": "Credentials for the baseboard management controller device on this baremetal machine.",
      "properties": {
        "password": {
          "description": "The baseboard management controller device server password.",
          "type": "string",
          "readOnly": true
        },
        "username": {
          "description": "The baseboard management controller device user name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "description": "A cluster is the top level object for the on-premise environment.",
      "type": "object",
      "title": "Cluster represents an on-Premise Network Cloud cluster",
      "required": [
        "location",
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        },
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ClusterProperties"
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ClusterAvailableUpgradeVersion": {
      "description": "ClusterAvailableUpgradeVersion represents the various cluster upgrade parameters",
      "type": "object",
      "properties": {
        "controlImpact": {
          "description": "The indicator of whether the control plane will be impacted during the upgrade.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ControlImpact"
          },
          "readOnly": true
        },
        "expectedDuration": {
          "description": "The expected duration needed for this upgrade.",
          "type": "string",
          "readOnly": true
        },
        "impactDescription": {
          "description": "The impact description including the specific details and release notes.",
          "type": "string",
          "readOnly": true
        },
        "targetClusterVersion": {
          "description": "The target version this cluster will be upgraded to.",
          "type": "string",
          "readOnly": true
        },
        "workloadImpact": {
          "description": "The indicator of whether the workload will be impacted during the upgrade.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "WorkloadImpact"
          },
          "readOnly": true
        }
      }
    },
    "ClusterDeployParameters": {
      "type": "object",
      "title": "ClusterDeployParameters represents the body of the request to deploy cluster.",
      "properties": {
        "rackName": {
          "description": "The name of the rack (rack-manifest) to use for bootstrapping the deployment. The system will determine which rack to use if this is not provided.",
          "type": "string"
        }
      }
    },
    "ClusterList": {
      "type": "object",
      "title": "ClusterList represents a list of Clusters.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        }
      }
    },
    "ClusterManager": {
      "description": "A ClusterManager creates and  manages customer manager instances on demand.",
      "type": "object",
      "title": "ClusterManager represents a control-plane to manage one or more on-premises clusters.",
      "required": [
        "location",
        "properties"
      ],
      "properties": {
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/ClusterManagerProperties"
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "ClusterManagerList": {
      "description": "ClusterManagerList represents a list of cluster manager objects.",
      "type": "object",
      "title": "List of cluster manager objects.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of cluster managers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterManager"
          }
        }
      }
    },
    "ClusterManagerProperties": {
      "description": "ClusterManagerProperties represents the properties of a cluster manager",
      "type": "object",
      "required": [
        "fabricControllerId",
        "analyticsWorkspaceId"
      ],
      "properties": {
        "aggregatorRackSkusSupported": {
          "description": "A list of the aggregator rack SKUs supported by the cluster manager.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AggregatorRackSkuSupported"
          },
          "readOnly": true
        },
        "analyticsWorkspaceId": {
          "description": "AnalyticsWorkspace is where any logs relevant to customer will be relayed for example \"/microsoft.operationalinsights/workspaces/{logAnalyticsWorkspaceName}\"",
          "type": "string"
        },
        "clusterVersions": {
          "description": "ClusterVersions represents all the cluster versions the manager supports which would be used as input in the cluster clusterVersion property.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "fabricControllerId": {
          "description": "URI reference to the fabric controller that is 1:1 with the cluster manager",
          "type": "string"
        },
        "managerExtendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        },
        "provisioningState": {
          "description": "Cluster manager provisioning status.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterManagerProvisioningState"
          },
          "readOnly": true
        }
      }
    },
    "ClusterPatchParameters": {
      "type": "object",
      "title": "ClusterPatchParameters represents the body of the request to patch cluster properties.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ClusterPatchProperties"
        },
        "tags": {
          "description": "Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ClusterPatchProperties": {
      "type": "object",
      "title": "ClusterPatchProperties represents the properties of a cluster during Patch.",
      "properties": {
        "clusterLocation": {
          "description": "The customer-provided location information to identify where the cluster resides.",
          "type": "string"
        }
      }
    },
    "ClusterProperties": {
      "description": "https://armwiki.azurewebsites.net/rpaas/arc-rp/conversion/SchemaTranslation.html#default-kubernetes-bridge-mapping\n\nfor now, we'll align on the same concept for our RPaaS\nobjects as well\n\nClusterProperties represents the properties of a cluster.",
      "type": "object",
      "title": "Note, k8s bridge resource types will default to\na singular status field under properties",
      "required": [
        "networkFabricId",
        "clusterType",
        "analyticsWorkspaceId",
        "clusterVersion"
      ],
      "properties": {
        "analyticsWorkspaceId": {
          "description": "The customer must specify a Log Analytics Workspace upon creation. This workspace will be where any logs that are relevant to",
          "type": "string"
        },
        "availableUpgradeVersions": {
          "description": "The list of cluster runtime version upgrades available for this cluster.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterAvailableUpgradeVersion"
          },
          "x-ms-identifiers": [
            "targetClusterVersion"
          ],
          "readOnly": true
        },
        "clusterExtendedLocation": {
          "description": "The extended location (custom location) represents the cluster's control plane location.\nThis extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.",
          "type": "string",
          "readOnly": true
        },
        "clusterLocation": {
          "description": "The customer-provided location information to identify where the cluster resides.",
          "type": "string"
        },
        "clusterManagerId": {
          "description": "The resource ID of the cluster manager that manages this cluster.\nThis is set by the Cluster Manager when the cluster is created.",
          "type": "string",
          "readOnly": true
        },
        "clusterType": {
          "description": "The type of rack configuration for this cluster.",
          "type": "string",
          "enum": [
            "single-rack",
            "multi-rack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterType"
          }
        },
        "clusterVersion": {
          "description": "The current version of the cluster runtime.",
          "type": "string"
        },
        "networkFabricId": {
          "description": "The resource ID of the network fabric associated with the cluster.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning state of the cluster.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Validating",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterProvisioningState"
          },
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ClusterStatus"
        }
      }
    },
    "ClusterStatus": {
      "description": "ClusterStatus denotes the status of a cluster",
      "type": "object",
      "properties": {
        "clusterTrusted": {
          "description": "The indicator of whether or not to trust that the cluster is not compromised.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterTrusted"
          },
          "readOnly": true
        },
        "deploymentState": {
          "description": "The state of the cluster's deployment.",
          "type": "string",
          "enum": [
            "PendingDeployment",
            "Deployed"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ClusterTrusted"
          },
          "readOnly": true
        }
      }
    },
    "ClusterUpdateVersionParameters": {
      "type": "object",
      "title": "ClusterUpdateVersionParameters represents the body of the request to update cluster version.",
      "properties": {
        "targetClusterVersion": {
          "description": "Version to be applied to the cluster during update.",
          "type": "string"
        }
      }
    },
    "DateTime": {
      "description": "DateTime is a time but it serializes to ISO8601 format with millis\nIt knows how to read 3 different variations of a RFC3339 date time.\nMost APIs we encounter want either millisecond or second precision times.\nThis just tries to make it worry-free.",
      "type": "string",
      "format": "date-time"
    },
    "ExtendedLocation": {
      "description": "ExtendedLocation is the Azure custom location where this resource will be created",
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "name": {
          "description": "ResourceId of the custom location on which resource will be created",
          "type": "string"
        },
        "type": {
          "description": "Extended location type e.g CustomLocation",
          "type": "string"
        }
      }
    },
    "HardwareInventory": {
      "description": "including information acquired from the model/sku information and from the ironic inspector.",
      "type": "object",
      "title": "HardwareInventory is the hardware configuration of this machine as exposed to the customer,",
      "properties": {
        "nics": {
          "description": "A list of network interface cards and associated details for the bare-metal machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Nic"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      }
    },
    "NetworkAttachment": {
      "description": "NetworkAttachment represents a single network attachment",
      "type": "object",
      "required": [
        "workloadNetworkId",
        "ipAllocationMethod"
      ],
      "properties": {
        "ipAllocationMethod": {
          "description": "The IP allocation mechanism for the virtual machine.",
          "type": "string",
          "default": "Dynamic",
          "enum": [
            "Dynamic",
            "Static",
            "Disabled"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IPAllocationMethod"
          }
        },
        "ipv4Address": {
          "description": "The IPv4 address of the virtual machine.\n\nThis field is used only if the associated Workload network has a IPAllocationType of IPv4 or Dual-Stack.\n\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv4 address from within the subnet specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string"
        },
        "ipv6Address": {
          "description": "The IPv6 address of the virtual machine.\n\nThis field is used only if the associated WorkloadNetwork has a IPAllocationType of IPv6 or Dual-Stack.\n\nIf IPAllocationMethod is:\nStatic - this field must contain an IPv6 address range from within the range specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an range from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string"
        },
        "workloadNetworkId": {
          "description": "The resource ID of the workload network attached to the VM.",
          "type": "string"
        }
      }
    },
    "Nic": {
      "type": "object",
      "title": "Nic is the network interface card details.",
      "properties": {
        "macAddress": {
          "description": "The MAC address associated with this NIC.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Name of the NIC/interface.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PlacementHint": {
      "description": "PlacementHint represents a single scheduling hint of virtual machine",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "description": "The key for the virtual machine placement hint.",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "value": {
          "description": "The value for the virtual machine placement hint.",
          "type": "string",
          "maxLength": 256,
          "minLength": 1
        }
      }
    },
    "RackManifest": {
      "type": "object",
      "title": "RackManifest is the unprocessed, user-submitted intention for a rack located in an on-premises cluster.",
      "required": [
        "location",
        "extendedLocation"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        },
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/RackManifestProperties"
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RackManifestList": {
      "type": "object",
      "title": "RackManifestList represents a list of RackManifests.",
      "properties": {
        "value": {
          "description": "The list of rack manifests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RackManifest"
          }
        }
      }
    },
    "RackManifestProperties": {
      "type": "object",
      "title": "RackManifestProperties represents the properties of a rack manifest.",
      "required": [
        "clusterId",
        "networkRackId",
        "rackSkuId",
        "rackSerialNumber",
        "baremetalMachineUserData"
      ],
      "properties": {
        "baremetalMachineUserData": {
          "description": "A list of bare-metal machine objects in this rack (not ordered).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BareMetalMachineUserData"
          },
          "x-ms-identifiers": [
            "rackSlot"
          ]
        },
        "clusterId": {
          "description": "The resource ID of the cluster to which this rack is associated.",
          "type": "string"
        },
        "clusterManagerId": {
          "description": "The resource ID of the cluster manager that manages this rack manifest.\nThis is set by the Cluster Manager when the rack manifest is created.",
          "type": "string",
          "readOnly": true
        },
        "networkRackId": {
          "description": "The resource ID to the associated network rack resource",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning state of the rackmanifest.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Validating",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RackManifestProvisioningState"
          },
          "readOnly": true
        },
        "rackId": {
          "description": "The resource ID of the rack that was realized by the deployment of this rack manifest.\nOnce assigned, this rack manifest can no longer be used in a future deployment or update operations.\nIt is effectively “used up”.",
          "type": "string",
          "readOnly": true
        },
        "rackLocation": {
          "description": "A free-form customer description of this rack location. FOr example, \"DTN Datacenter, Floor 3, Aisle 9, Rack 2\".",
          "type": "string"
        },
        "rackSerialNumber": {
          "description": "A globally unique identifier for the rack.",
          "type": "string"
        },
        "rackSkuId": {
          "description": "The resource ID of the SKU for the rack being added.",
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "type": "object",
      "title": "Resource Resource",
      "properties": {
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "TagsParameter": {
      "type": "object",
      "title": "TagsParameter represents the resource tags.",
      "properties": {
        "tags": {
          "description": "Azure resource tags that will replace the existing ones.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "TrackedResource": {
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource which has 'tags' and a 'location'",
      "type": "object",
      "title": "TrackedResource Tracked Resource",
      "required": [
        "location"
      ],
      "properties": {
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "VirtualMachine": {
      "description": "VirtualMachine represents an on-Premises Network Cloud Virtual Machine",
      "type": "object",
      "required": [
        "location",
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        },
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties"
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "VirtualMachineList": {
      "type": "object",
      "title": "VirtualMachineList represents a list of Virtual Machines.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of Virtual Machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          }
        }
      }
    },
    "VirtualMachinePowerOffParameters": {
      "type": "object",
      "title": "VirtualMachinePowerOffParameters represents the body of the request to power off virtual machine.",
      "properties": {
        "skipShutdown": {
          "description": "Allows to bypass OS shutdown and power virtual machine off immediately.",
          "type": "string",
          "default": "False",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkipShutdown"
          }
        }
      }
    },
    "VirtualMachineProperties": {
      "type": "object",
      "title": "VirtualMachineProperties represents the properties of a virtual machine.",
      "required": [
        "clusterId",
        "vmImage",
        "cpuCores",
        "memorySizeGB",
        "diskSizeGB",
        "networkAttachments",
        "sshKey"
      ],
      "properties": {
        "bareMetalMachineId": {
          "description": "The resource ID of the bare metal machine the virtual machine has landed to.",
          "type": "string",
          "readOnly": true
        },
        "clusterId": {
          "description": "The resource ID of the cluster the virtual machine is created for.",
          "type": "string"
        },
        "cpuCores": {
          "description": "The number of CPU cores in the virtual machine.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "diskSizeGB": {
          "description": "The root disk size of the virtual machine in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "memorySizeGB": {
          "description": "The memory size of the virtual machine in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "networkAttachments": {
          "description": "The list of network attachments to the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAttachment"
          },
          "x-ms-identifiers": []
        },
        "networkData": {
          "description": "The Base64 encoded cloud-init network data.",
          "type": "string"
        },
        "placementHints": {
          "description": "The scheduling hints for the virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlacementHint"
          },
          "x-ms-identifiers": [
            "key"
          ]
        },
        "powerState": {
          "description": "The power state of the virtual machine.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PowerState"
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of the virtual machine.",
          "type": "string",
          "default": "Accepted",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Accepted"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ProvisioningState"
          },
          "readOnly": true
        },
        "sshKey": {
          "description": "The Base64 encoded public ssh key of the user.",
          "type": "string"
        },
        "userData": {
          "description": "The Base64 encoded cloud-init user data.",
          "type": "string"
        },
        "vmImage": {
          "description": "The URL to virtual machine OCI image, could be from ACR or other OCI repository.",
          "type": "string"
        }
      }
    },
    "WorkloadNetwork": {
      "description": "WorkloadNetwork represents an on-premises workload network",
      "type": "object",
      "required": [
        "location",
        "extendedLocation",
        "properties"
      ],
      "properties": {
        "extendedLocation": {
          "$ref": "#/definitions/ExtendedLocation"
        },
        "id": {
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "name": {
          "description": "The name of the resource",
          "type": "string",
          "readOnly": true
        },
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkProperties"
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
    "WorkloadNetworkList": {
      "type": "object",
      "title": "WorkloadNetworkList represents a list of WorkloadNetworks.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "The list of workload networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadNetwork"
          }
        }
      }
    },
    "WorkloadNetworkProperties": {
      "type": "object",
      "title": "WorkloadNetworkProperties represents the properties of a workload network.",
      "required": [
        "routingDomainIds"
      ],
      "properties": {
        "allowMulticast": {
          "description": "The parameter enables the required features of the NIC/Driver to support multicast.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "AllowMulticast"
          }
        },
        "clusterId": {
          "description": "The resourceId of the Network Cloud cluster this workload network is associated with.",
          "type": "string",
          "readOnly": true
        },
        "hostPluginType": {
          "description": "The network plugin type of the workload network, defaults to \"SRIOV\".",
          "type": "string",
          "enum": [
            "SRIOV"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HostPluginType"
          }
        },
        "hybridAksClustersAssociatedIds": {
          "description": "The list of Hybrid AKS cluster ID(s) that are associated with this workload network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "hybridAksIpamEnabled": {
          "description": "Denotes whether or not to enable IP Address Management(IPAM) allocation on this network attachment definition. By default, IPAM is enabled.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksIpamEnabled"
          }
        },
        "hybridAksPluginType": {
          "description": "The network plugin type for HybridAKS, defaults to \"HOST-DEVICE\".",
          "type": "string",
          "enum": [
            "HOST-DEVICE",
            "MACVLAN",
            "DPDK",
            "IPVLAN"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HybridAksPluginType"
          }
        },
        "interfaceName": {
          "description": "The interface related to the workload network.",
          "type": "string",
          "readOnly": true
        },
        "ipAllocationType": {
          "description": "The type of the IP address allocation, defaulted to \"Dual-Stack\".",
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6",
            "Dual-Stack"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "IPAllocationType"
          }
        },
        "ipv4AddressPrefixIndex": {
          "description": "The index of IPv4AddressPrefix list to be used for this workload network. Given a routing domain can have multiple IPv4 prefixes assigned to it, this parameter defines the prefix this workload network is associated with. The index value is zero-based, with the first entry being an index value of 0.",
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "ipv6AddressRangeIndex": {
          "description": "The index of the IPv6RangePrefix list to be used for this Workload Network. Given a routing domain can have multiple IPv6 ranges assigned to it, this parameter defines the range this workload network is associated with.The index value is zero-based, with the first entry being an index value of 0.",
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "maxTxRate": {
          "description": "The maximum transmission rate, in Mbps, for the virtual function (VF).",
          "type": "integer",
          "format": "int64",
          "default": 0,
          "minimum": 0
        },
        "minTxRate": {
          "description": "The minimum transmission rate, in Mbps, for the virtual function (VF).",
          "type": "integer",
          "format": "int64",
          "default": 0,
          "minimum": 0
        },
        "provisioningState": {
          "description": "The provisioning state of the workload network.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "WorkloadNetworkProvisioningState"
          },
          "readOnly": true
        },
        "routingDomainIds": {
          "description": "The list of routing domain ID(s) associated with this workload network.",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "spoofCheckEnabled": {
          "description": "This denotes whether or not to enable spoof checking on the VF allocated for this network. Note: you may not configure this when we are leveraging a VirtualPluginType of MACVLAN. This leverages multiple mac addresses and thus spoof checking must be disabled on the VF.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SpoofCheckEnabled"
          }
        },
        "trunkRoutingDomains": {
          "description": "The parameter indicates if the routing domains should be trunked. If more than one routing domain is supplied, and this value is set to \"False\", only the first Routing Domain will be utilized.",
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "modelAsString": false,
            "name": "TrunkRoutingDomains"
          }
        },
        "virtualMachinesAssociatedIds": {
          "description": "The list of virtual machine ID(s), excluding any Hybrid AKS virtual machines, that are currently using this workload network.",
          "type": "array",
          "minItems": 0,
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "systemData": {
      "type": "object",
      "title": "SystemData Metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "description": "The timestamp of resource creation (UTC).\nFormat: date-time",
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "description": "The identity that created the resource.",
          "type": "string"
        },
        "createdByType": {
          "description": "The type of identity that created the resource.",
          "type": "string",
          "enum": [
            "[User Application ManagedIdentity Key]"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CreatedByType"
          }
        },
        "lastModifiedAt": {
          "description": "The timestamp of resource last modification (UTC)\nFormat: date-time",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "description": "The identity that last modified the resource.",
          "type": "string"
        },
        "lastModifiedByType": {
          "description": "The type of identity that last modified the resource.",
          "type": "string",
          "enum": [
            "[User Application ManagedIdentity Key]"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "LastModifiedByType"
          }
        }
      }
    }
  },
  "parameters": {
    "ClusterManagerNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the cluster manager.",
      "name": "clusterManagerName",
      "in": "path",
      "required": true
    },
    "ClusterNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the cluster.",
      "name": "clusterName",
      "in": "path",
      "required": true
    },
    "VirtualMachineNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the virtual machine.",
      "name": "virtualMachineName",
      "in": "path",
      "required": true
    },
    "WorkloadNetworkNameParameter": {
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the workload network.",
      "name": "workloadNetworkName",
      "in": "path",
      "required": true
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "description": "Azure Active Directory OAuth2 Flow",
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}