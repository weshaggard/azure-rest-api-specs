{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Network Cloud Client.",
    "title": "Network Cloud Client",
    "version": "2021-10-21-preview"
  },
  "host": "management.azure.com",
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusterControllers": {
      "get": {
        "description": "This will show all cluster controllers in a subscription.",
        "summary": "Lists cluster controllers in a subscription.",
        "operationId": "ClusterControllers_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterControllerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Cluster Controller from Subscription": {
            "$ref": "./examples/ClusterControllers_List_Subscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of all Network Cloud clusters in a given subscription.",
        "summary": "Lists Network Cloud clusters in a subscription.",
        "operationId": "Clusters_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/bootstrapImages": {
      "get": {
        "description": "This will show all network cloud bootstrap Isos for a particular cluster.",
        "summary": "Lists network cloud cluster bootstrap image.",
        "operationId": "Clusters_BootstrapImages_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImagesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "This will show all network cloud Workload Networks in a subscription.",
        "summary": "Lists network cloud Workload Networks in a subscription.",
        "operationId": "WorkloadNetworks_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterControllers": {
      "get": {
        "description": "This will show all cluster controllers in a resource group.",
        "summary": "Lists cluster controllers from a specific resource group.",
        "operationId": "ClusterControllers_List_Resource_Group",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterControllerList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "List Cluster Controller from ResourceGroup": {
            "$ref": "./examples/ClusterControllers_List_ResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterControllers/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific cluster controller.",
        "summary": "Retrieves a specific cluster controller.",
        "operationId": "ClusterControllers_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterControllers"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get a Cluster Controller": {
            "$ref": "./examples/ClusterControllers_Get.json"
          }
        }
      },
      "delete": {
        "description": "This will delete a specific cluster controller.",
        "summary": "Deletes a specific cluster controller.",
        "operationId": "ClusterControllers_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Cluster Controller": {
            "$ref": "./examples/ClusterControllers_Delete.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "Get a list of all Network Cloud clusters in a given resource group.",
        "summary": "Lists Network Cloud clusters in a resource group.",
        "operationId": "Clusters_List_Resource_Group",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}": {
      "get": {
        "description": "Get the properties of a specific Network Cloud cluster.",
        "summary": "Retrieves a specific Network Cloud cluster.",
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "description": "Create a new Network Cloud cluster or update the properties of the cluster if it exists. The API returns 201 Created when a new cluster is created along with its properties. For the existing cluster update, the API returns 200 OK and the updated properties.",
        "summary": "Creates or updates a specific network cloud cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
                  "type": "string",
                  "x-go-name": "Id"
                },
                "location": {
                  "description": "Location is the Azure location where this resource will exist or already exists.",
                  "type": "string",
                  "x-go-name": "Location"
                },
                "name": {
                  "description": "Name is the name of the resource that this resource provider will create.",
                  "type": "string",
                  "x-go-name": "Name"
                },
                "properties": {
                  "$ref": "#/definitions/ClusterProperties"
                },
                "systemData": {
                  "$ref": "#/definitions/SystemData"
                },
                "tags": {
                  "description": "Tags are Azure resource tags that will be added to the referenced resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "Delete a provided Network Cloud cluster. The API returns 200 OK when the deletion is successful.",
        "summary": "Deletes a specific Network Cloud cluster.",
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "Patch the properties of a specific network cloud cluster, or update the tags assigned to the cluster. Properties and tag updates can be done independently. The API returns 200 OK when the API is successful.",
        "summary": "Patches a specific network cloud cluster.",
        "operationId": "Clusters_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "$ref": "#/definitions/ClusterProperties"
                },
                "tags": {
                  "description": "Azure resource tags that will replace the existing ones. Tags update can be performed separately from the properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/bootstrapImages/{bootstrapImageName}": {
      "get": {
        "description": "This will show the properties of a specific bootstrap image.",
        "summary": "Retrieve a specific bootstrap image for a cluster.",
        "operationId": "Clusters_BootstrapImages_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "pattern": "\"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$\"",
            "type": "string",
            "x-go-name": "BootstrapImageName",
            "name": "bootstrapImageName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImages"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/createBootstrapImage/{bootstrapImageName}": {
      "put": {
        "description": "This will generate a bootable image for this network cloud cluster.",
        "summary": "Generate a bootable image for this cluster.",
        "operationId": "Clusters_BootstrapImages_Create",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "pattern": "\"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$\"",
            "type": "string",
            "x-go-name": "BootstrapImageName",
            "name": "bootstrapImageName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImages"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterControllers/{resourceName}": {
      "put": {
        "description": "This creates or updates the properties of a specific cluster controller.With x-ms-long-running-operation set to true and corresponding option set to default value(\"azure-async-operation\")",
        "summary": "Creates or updates a specific cluster controller(asynchronously)",
        "operationId": "ClusterControllers_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
                  "type": "string",
                  "x-go-name": "Id"
                },
                "location": {
                  "description": "Location is the Azure location where this resource will exist or already exists.",
                  "type": "string",
                  "x-go-name": "Location"
                },
                "name": {
                  "description": "Name is the name of the resource that this resource provider will create.",
                  "type": "string",
                  "x-go-name": "Name"
                },
                "properties": {
                  "$ref": "#/definitions/ClusterControllerManifest"
                },
                "systemData": {
                  "$ref": "#/definitions/SystemData"
                },
                "tags": {
                  "description": "Tags are Azure resource tags that will be added to the referenced resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterControllers"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Cluster Controller": {
            "$ref": "./examples/ClusterControllers_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusterControllers/{resourceName}": {
      "put": {
        "description": "This creates or updates the properties of a specific cluster controller.With x-ms-long-running-operation set to true and corresponding option set to default value(\"azure-async-operation\")",
        "summary": "Creates or updates a specific cluster controller(asynchronously)",
        "operationId": "ClusterControllers_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "id": {
                  "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
                  "type": "string",
                  "x-go-name": "Id"
                },
                "location": {
                  "description": "Location is the Azure location where this resource will exist or already exists.",
                  "type": "string",
                  "x-go-name": "Location"
                },
                "name": {
                  "description": "Name is the name of the resource that this resource provider will create.",
                  "type": "string",
                  "x-go-name": "Name"
                },
                "properties": {
                  "$ref": "#/definitions/ClusterControllerManifest"
                },
                "systemData": {
                  "$ref": "#/definitions/SystemData"
                },
                "tags": {
                  "description": "Tags are Azure resource tags that will be added to the referenced resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterControllers"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Cluster Controller": {
            "$ref": "./examples/ClusterControllers_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "This will get a list of all network cloud virtual machines from specific resource group.",
        "summary": "Retrieve all network cloud virtual machines from specific resource group.",
        "operationId": "VirtualMachines_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific network cloud virtual machine.",
        "summary": "Retrieve a specific virtual machine.",
        "operationId": "VirtualMachines_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "description": "This creates or updates the properties of a specific network cloud virtual machine.",
        "summary": "Creates or updates a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Properties",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [

                "properties"
              ],
              "properties": {
                "properties": {
                  "$ref": "#/definitions/WorkloadNetworkProperties"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud VirtualMachine": {
            "$ref": "./examples/VirtualMachines_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "This will delete a specific network cloud virtual machine.",
        "summary": "Deletes a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "This creates or updates the properties of a specific network cloud virtual machine.",
        "summary": "Patches a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Payload",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "$ref": "#/definitions/VirtualMachineProperties"
                },
                "tags": {
                  "description": "Azure resource tags that will replace the existing ones. Tags update can be performed separately from the properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud VirtualMachine": {
            "$ref": "./examples/VirtualMachines_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/powerOff": {
      "post": {
        "description": "This will power off a specific network cloud virtual machine.",
        "summary": "Powers off a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_PowerOff",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-go-name": "SkipShutdown",
            "description": "Allows to bypass OS shutdown and power virtual machine off immediately.",
            "name": "skipShutdown",
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Powers off a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_PowerOff.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/reimage": {
      "post": {
        "description": "This will reimage a specific network cloud virtual machine.",
        "summary": "Reimages a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Reimage",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Reimage a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Reimage.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/restart": {
      "post": {
        "description": "This will restart a specific network cloud virtual machine.",
        "summary": "Restarts a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Restart",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Restart a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Restart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/start": {
      "post": {
        "description": "This will start a specific network cloud virtual machine.",
        "summary": "Starts a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Start",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Start a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "This will get a list of all Workload Network resources from specific resource group.",
        "summary": "Retrieve all Workload Network resources from specific resource group.",
        "operationId": "WorkloadNetworks_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific network cloud Workload Network.",
        "summary": "Retrieve a specific Workload Network.",
        "operationId": "WorkloadNetworks_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "description": "This creates or updates the properties of a specific WorkloadNetwork.\n\nWith x-ms-long-running-operation set to true,\nx-ms-long-running-operation-options is set to default value(\"azure-async-operation\")",
        "summary": "Creates or updates a specific network cloud WorkloadNetwork(ASYNC)",
        "operationId": "WorkloadNetworks_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "This will delete a specific Workload Network.",
        "summary": "Deletes a specific network cloud Workload Network.",
        "operationId": "WorkloadNetworks_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Deletes Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "This patches the properties of a specific WorkloadNetwork.",
        "summary": "Patches a specific WorkloadNetwork.",
        "operationId": "WorkloadNetworks_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Payload",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "$ref": "#/definitions/WorkloadNetworkProperties"
                },
                "tags": {
                  "description": "Azure resource tags that will replace the existing ones. Tags update can be performed separately from the properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzureCommonProperties": {
      "description": "AzureCommonProperties are parameters that can be included on requests but are processed by RPaaS and not by this\nresource provider. They are listed as optional resources because RPaaS will enforce which parameters are required.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "BareMetalMachineProperties": {
      "type": "object",
      "title": "BareMetalMachineProperties represents the properties of a baremetal machine.",
      "required": [
        "clusterID",
        "rackID"
      ],
      "properties": {
        "adminStatus": {
          "description": "Admin status of the BareMetalMachine",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-go-name": "AdminStatus"
        },
        "bmcConnectionString": {
          "description": "BmcConnectionString is the connection string for the bare-metal controller on this bare-metal machine.\n+kubebuilder:validation:Required",
          "type": "string",
          "x-go-name": "BmcConnectionString"
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bootMacAddress": {
          "description": "BootMacAddress is the MAC address of a NIC connected to the PXE network.\n+kubebuilder:validation:Required",
          "type": "string",
          "x-go-name": "BootMacAddress"
        },
        "clusterID": {
          "description": "ClusterID is the fully-qualified identifier of the undercloud cluster this BareMetalMachine is associated with.",
          "type": "string",
          "x-go-name": "ClusterID"
        },
        "cordonStatus": {
          "description": "Cordon status of the BareMetalMachine",
          "type": "string",
          "enum": [
            "Cordoned",
            "Uncordoned"
          ],
          "x-go-name": "CordonStatus"
        },
        "hardwareConfiguration": {
          "$ref": "#/definitions/HardwareConfiguration"
        },
        "machineDetails": {
          "description": "Details provided by the customer during the creation of rack manifests\nthat allows for “custom data” to be associated with this machine\n+kubebuilder:validation:Optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "MachineDetails"
        },
        "machineLocation": {
          "description": "A user-friendly description of the BareMetalMachine's location\n+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "MachineLocation"
        },
        "oamMacAddress": {
          "description": "OamMacAddress is the MAC address of a NIC connected to the OAM network.\n+kubebuilder:validation:Required",
          "type": "string",
          "x-go-name": "OamMacAddress"
        },
        "powerState": {
          "description": "Power state of the BareMetalMachine",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-go-name": "PowerState"
        },
        "provisioningState": {
          "description": "ProvisioningState of the BareMetalMachine.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-go-name": "ProvisioningState"
        },
        "rackID": {
          "description": "Associated Microsoft.NetworkCloud/racks/rackName where this BareMetalMachine resides",
          "type": "string",
          "x-go-name": "RackID"
        },
        "rackSlot": {
          "description": "RackSlot is the slot in which this physical machine is located, ordered from the bottom up i.e. the lowest slot\nis 1.\n+kubebuilder:validation:Optional\n+kubebuilder:validation:Minimum=1",
          "type": "integer",
          "format": "int64",
          "x-go-name": "RackSlot"
        },
        "readyState": {
          "description": "Is the BareMetalMachine ready to receive workloads\n+kubebuilder:validation:Optional\n+kubebuilder:default=true",
          "type": "boolean",
          "x-go-name": "ReadyState"
        },
        "tpmEndorsementKey": {
          "description": "TPMEndorsementKey is the thumbprint or SHA of the TPM Endorsement Key that allows the resource provider to ensure\nauthenticity of the machine.\n+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "TPMEndorsementKey"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "BareMetalMachineUserData": {
      "type": "object",
      "required": [
        "rackSlot",
        "bootMacAddress",
        "bmcCredentials",
        "bmcConnectionString",
        "tpmEndorsementKey",
        "bmcMacAddress"
      ],
      "properties": {
        "bmcConnectionString": {
          "description": "BmcConnectionString is the connection string for the bare-metal controller on this bare-metal machine.",
          "type": "string",
          "x-go-name": "BmcConnectionString"
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BmcCredentials"
        },
        "bmcMacAddress": {
          "description": "BmcMacAddress is the MAC address of the bare-metal controller on this machine.",
          "type": "string",
          "x-go-name": "BmcMacAddress"
        },
        "bootMacAddress": {
          "description": "BootMacAddress is the MAC address of a NIC connected to the PXE network.",
          "type": "string",
          "x-go-name": "BootMacAddress"
        },
        "machineDetails": {
          "description": "MachineDetails is an optional value containing additional details such as SerialNumber, AssetTag, etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "MachineDetails"
        },
        "machineName": {
          "description": "MachineName is the user provided name for the BareMetalMachine created from this user data.\nIf not provided, a name will be generated programmatically.",
          "type": "string",
          "x-go-name": "MachineName"
        },
        "rackSlot": {
          "description": "RackSlot is the slot in which this physical machine is located,\nordered from the bottom up i.e. the lowest slot is 1.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "RackSlot"
        },
        "tpmEndorsementKey": {
          "description": "TPMEndorsementKey is the thumbprint or SHA of the TPM Endorsement Key that allows the resource provider to ensure\nauthenticity of the machine.",
          "type": "string",
          "x-go-name": "TPMEndorsementKey"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "BmcCredentials": {
      "description": "Credentials for the BMC device on this baremetal machine",
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "CloudError": {
      "type": "object",
      "title": "CloudError represents a cloud error.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string",
          "x-go-name": "Code"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-go-name": "Details"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string",
          "x-go-name": "Message"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string",
          "x-go-name": "Target"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "CloudErrorBody": {
      "type": "object",
      "title": "CloudErrorBody represents the body of a cloud error.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string",
          "x-go-name": "Code"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-go-name": "Details"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string",
          "x-go-name": "Message"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string",
          "x-go-name": "Target"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "Cluster": {
      "description": "A cluster is the top level object for the on-premise environment.",
      "type": "object",
      "title": "Cluster represents an on-Premise Network Cloud cluster",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/ClusterProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterControllerList": {
      "description": "ClusterControllerList represents a list of cluster controller objects.",
      "type": "object",
      "title": "List of cluster controller objects.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of cluster controllers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterControllers"
          },
          "x-go-name": "ClusterControllers"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterControllerManifest": {
      "description": "ClusterControllerManifest includes request body parameters for create cluster controller",
      "type": "object",
      "required": [
        "fabricControllerId",
        "analyticsWorkspaceId"
      ],
      "properties": {
        "analyticsWorkspaceId": {
          "description": "AnalyticsWorkspace is where any logs relevant to customer will be relayed for example \"/microsoft.operationalinsights/workspaces/{logAnalyticsWorkspaceName}",
          "type": "string",
          "x-go-name": "AnalyticsWorkspaceId"
        },
        "fabricControllerId": {
          "description": "URI reference to the fabric controller that is 1:1 with the cluster controller.",
          "type": "string",
          "x-go-name": "FabricControllerId"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterControllerProperties": {
      "description": "ClusterControllerProperties represents the properties of a cluster controller",
      "type": "object",
      "required": [
        "fabricControllerId",
        "analyticsWorkspaceId",
        "controllerExtendedLocation",
        "clusterVersions"
      ],
      "properties": {
        "analyticsWorkspaceId": {
          "description": "AnalyticsWorkspace is where any logs relevant to customer will be relayed for example \"/microsoft.operationalinsights/workspaces/{logAnalyticsWorkspaceName}",
          "type": "string",
          "x-go-name": "AnalyticsWorkspaceId"
        },
        "clusterVersions": {
          "description": "ClusterVersions represents all the cluster versions the controller supports. which would be used as input in the cluster clusterVersion property.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "ClusterVersions"
        },
        "controllerExtendedLocation": {
          "description": "ControllerExtendedLocation used when creating cluster and rack manifest.",
          "type": "string",
          "x-go-name": "ControllerExtendedLocation"
        },
        "fabricControllerId": {
          "description": "URI reference to the fabric controller that is 1:1 with the cluster controller",
          "type": "string",
          "x-go-name": "FabricControllerId"
        },
        "provisioningState": {
          "description": "Cluster controller provisioning status.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Canceled",
            "Failed",
            "Succeeded"
          ],
          "x-go-name": "ProvisioningState"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterControllers": {
      "description": "A ClusterController creates and  manages customer controller instances on demand.",
      "type": "object",
      "title": "ClusterController represents a control-plane to manage one or more on-premises Clusters.",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/ClusterControllerProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-name": "ClusterController",
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterList": {
      "type": "object",
      "title": "ClusterList represents a list of Clusters.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "x-go-name": "Clusters"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterProperties": {
      "description": "https://armwiki.azurewebsites.net/rpaas/arc-rp/conversion/SchemaTranslation.html#default-kubernetes-bridge-mapping\n\nfor now, we'll align on the same concept for our RPaaS\nobjects as well\n\nClusterProperties represents the properties of a cluster.",
      "type": "object",
      "title": "Note, k8s bridge resource types will default to\na singular status field under properties",
      "required": [
        "clusterExtendedLocation",
        "clusterManagerId",
        "networkFabricId",
        "clusterType",
        "analyticsWorkspaceId",
        "clusterLocation",
        "clusterVersion",
        "availableUpgradeVersions"
      ],
      "properties": {
        "analyticsWorkspaceId": {
          "description": "The customer must specify a Log Analytics Workspace upon creation. This workspace will be where any logs that are relevant to",
          "type": "string",
          "x-go-name": "AnalyticsWorkspaceId"
        },
        "availableUpgradeVersions": {
          "description": "AvailableUpgradeVersions represents all the cluster runtime version upgrades available for this cluster.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "AvailableUpgradeVersions"
        },
        "clusterExtendedLocation": {
          "description": "The extended location (custom location) represents the cluster's control plane location.\nThis extended location is used to route the requests of child objects of the cluster that are handled by the platform operator.",
          "type": "string",
          "x-go-name": "ClusterExtendedLocation"
        },
        "clusterLocation": {
          "description": "ClusterLocation is customer-provided location information provided to identify where the cluster resides.",
          "type": "string",
          "x-go-name": "ClusterLocation"
        },
        "clusterManagerId": {
          "description": "ClusterManagerId is an reference to the ID of the cluster manager that manages this cluster.\nThis is set by the Cluster Manager when the cluster is created.",
          "type": "string",
          "x-go-name": "ClusterManagerId"
        },
        "clusterType": {
          "description": "ClusterType is the type of rack configuration for this cluster.\nsingle-rack SingleRack\nmulti-rack MultiRack",
          "type": "string",
          "enum": [
            "single-rack",
            "multi-rack"
          ],
          "x-go-enum-desc": "single-rack SingleRack\nmulti-rack MultiRack",
          "x-go-name": "ClusterType"
        },
        "clusterVersion": {
          "description": "ClusterVersion depicts the current version of the cluster runtime.",
          "type": "string",
          "x-go-name": "ClusterVersion"
        },
        "networkFabricId": {
          "type": "string",
          "x-go-name": "NetworkFabricId"
        },
        "provisioningState": {
          "description": "ProvisioningState is the provisioning state of the cluster.\nValidating Validating\nProvisioning Provisioning\nSucceeded Succeeded\nFailed Failed",
          "type": "string",
          "enum": [
            "Validating",
            "Provisioning",
            "Succeeded",
            "Failed"
          ],
          "x-go-enum-desc": "Validating Validating\nProvisioning Provisioning\nSucceeded Succeeded\nFailed Failed",
          "x-go-name": "ProvisioningState"
        },
        "status": {
          "$ref": "#/definitions/ClusterStatus"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "ClusterStatus": {
      "type": "object",
      "properties": {
        "clusterTrusted": {
          "description": "ClusterTrusted indicates whether or not to trust that the cluster is uncompromised.",
          "x-go-name": "ClusterTrusted"
        },
        "deploymentState": {
          "description": "DeploymentState indicates the status of the cluster's deployment (e.g. Pending, Deployed)",
          "x-go-name": "DeploymentState"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "ClustersBootstrapImages": {
      "description": "Bootstrap Image resource",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/ClustersBootstrapImagesProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClustersBootstrapImagesList": {
      "type": "object",
      "title": "BootstrapImageList represents a list of bootstrap Images for a cluster.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of BootstrapImages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClustersBootstrapImages"
          },
          "x-go-name": "ClustersBootstrapImages"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClustersBootstrapImagesProperties": {
      "type": "object",
      "title": "ClusterBootstrapImagesProperties represents the properties of a cluster bootstrap Image.",
      "properties": {
        "mediaurl": {
          "type": "string",
          "x-go-name": "MediaUrl",
          "readOnly": true
        },
        "provisioningState": {
          "x-go-name": "ProvisioningState",
          "readOnly": true
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "CreatedByType": {
      "description": "CreatedByType defines user type, which executed the request",
      "type": "string",
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "HardwareConfiguration": {
      "description": "including information acquired from the model/sku information and from the ironic inspector.",
      "type": "object",
      "title": "Hardwareconfiguration is the hardware configuration of this machine as exposed to the customer,",
      "properties": {
        "model": {
          "description": "Note: This struct is expected to change over time as details are agreed upon\nModelNumber represents the SKU of this machine",
          "type": "string",
          "x-go-name": "ModelNumber"
        },
        "serialNumber": {
          "description": "SerialNumber is an optional serial number or other asset tag identifier that a user may use to associate with\nthis machine.",
          "type": "string",
          "x-go-name": "SerialNumber"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "NetworkAddresses": {
      "description": "Network addresses that are assigned to this machine from the CIDRs assigned to the rack that contains this machine",
      "type": "object",
      "properties": {
        "oamIpv4Address": {
          "description": "+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "OamIpv4Address"
        },
        "oamIpv6Address": {
          "description": "+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "OamIpv46Address"
        },
        "pxeIpv4Address": {
          "description": "+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "PxeIpv4Address"
        },
        "pxeIpv6Address": {
          "description": "+kubebuilder:validation:Optional",
          "type": "string",
          "x-go-name": "PxeIpv46Address"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "Rack": {
      "description": "NOTE: There may be some differences between a Rack and RackManifest as we add logic to process a RackManifest;\nhowever, a Rack is just an alias of the RackManifest type in this initial implementation.",
      "title": "Rack is the validated/processed representation of a rack located in an on-premises cluster.",
      "$ref": "#/definitions/RackManifest"
    },
    "RackManifest": {
      "type": "object",
      "title": "RackManifest is the unprocessed, user-submitted intention for a rack located in an on-premises cluster.",
      "properties": {
        "extendedLocation": {
          "description": "the extended location of the cluster controller that manages this rack manifest",
          "type": "string",
          "x-go-name": "ExtendedLocation"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/RackManifestProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "RackManifestList": {
      "type": "object",
      "title": "RackManifestList represents a list of RackManifests.",
      "properties": {
        "value": {
          "description": "The list of rack manifests.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RackManifest"
          },
          "x-go-name": "RackManifests"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "RackManifestProperties": {
      "type": "object",
      "title": "RackManifestProperties represesnts the properties of a rack manifest.",
      "required": [
        "clusterId",
        "networkRackId",
        "rackId",
        "modelId",
        "rackSerialNumber"
      ],
      "properties": {
        "baremetalMachineUserData": {
          "description": "BareMetalMachineUserData is a list of machine objects in this rack.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BareMetalMachineUserData"
          },
          "x-go-name": "BareMetalMachineUserData"
        },
        "clusterId": {
          "description": "ClusterId is the name of the cluster to which this rack will be associated.",
          "type": "string",
          "x-go-name": "ClusterId"
        },
        "clusterSlot": {
          "description": "ClusterSlot identifies this rack's placement within a cluster.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClusterSlot"
        },
        "modelId": {
          "description": "ModelId is the Model ID of this rack.",
          "type": "string",
          "x-go-name": "ModelId"
        },
        "networkRackId": {
          "type": "string",
          "x-go-name": "NetworkRackId"
        },
        "rackId": {
          "description": "A reference to the rack that was realized by the deployment of this rackManifest",
          "type": "string",
          "x-go-name": "RackId"
        },
        "rackLocation": {
          "description": "RackLocation is a user description of the location of this rack, e.g. \"DTN Datacenter, Floor 3, Aisle 9, Rack 2\".",
          "type": "string",
          "x-go-name": "RackLocation"
        },
        "rackSerialNumber": {
          "description": "RackSerialNumber is a globally unique identifier for an AFO-NC rack.",
          "type": "string",
          "x-go-name": "RackSerialNumber"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "SystemData": {
      "type": "object",
      "title": "SystemData metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "createdBy": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "createdByType": {
          "$ref": "#/definitions/CreatedByType"
        },
        "lastModifiedAt": {
          "type": "string",
          "x-go-name": "LastModifiedAt"
        },
        "lastModifiedBy": {
          "type": "string",
          "x-go-name": "LastModifiedBy"
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/CreatedByType"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachine": {
      "description": "VirtualMachine represents an on-Premises Network Cloud virtual machine",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachineList": {
      "type": "object",
      "title": "VirtualMachineList represents a list of VirtualMachines.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of virtual machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          },
          "x-go-name": "VirtualMachines"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachineNetworkAttachment": {
      "description": "VirtualMachineNetworkAttachement represents a single network attachment",
      "type": "object",
      "required": [
        "workloadNetwork",
        "ipAllocationMethod"
      ],
      "properties": {
        "ipAllocationMethod": {
          "description": "IPAllocationMethod defines mechanism for ip allocation.",
          "type": "string",
          "default": "Dynamic",
          "enum": [
            "Dynamic",
            "Static",
            "Disabled"
          ],
          "x-go-name": "IPAllocationMethod"
        },
        "ipv4Address": {
          "description": "IPv4Address represents ipv4 address of a VM.\nThis field is only used if the associated WorkloadNetwork has a IPAllocationType of IPv4 or Dual-Stack.\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv4 address from within the subnet specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string",
          "x-go-name": "IPv4Address"
        },
        "ipv6Address": {
          "description": "IPv6Address represents ipv6 address of a VM.\nThis field is only used if the associated WorkloadNetwork has a IPAllocationType of IPv6 or Dual-Stack.\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv6 address from within the subnet specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string",
          "x-go-name": "IPv6Address"
        },
        "workloadNetwork": {
          "description": "Workload network to attach.",
          "type": "string",
          "x-go-name": "WorkloadNetwork"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "VirtualMachinePlacementHint": {
      "description": "VirtualMachinePlacementHint represents a single scheduling hint of virtual machine",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "description": "Virtual machine placement hint key.",
          "type": "string",
          "x-go-name": "Key"
        },
        "value": {
          "description": "Virtual machine placement hint value.",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "VirtualMachineProperties": {
      "type": "object",
      "title": "VirtualMachineProperties represents the properties of a virtual machine.",
      "required": [
        "imageReference",
        "cluster",
        "cpuCores",
        "memorySizeGB",
        "diskSizeGB"
      ],
      "properties": {
        "bareMetalMachineURI": {
          "description": "URI to the bare metal machine VM has landed to.",
          "type": "string",
          "x-go-name": "BareMetalMachine",
          "readOnly": true
        },
        "cluster": {
          "description": "Name of undercloud cluster VM is created with.",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "cpuCores": {
          "description": "Number virtual machine cpu cores.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CpuCores"
        },
        "diskSizeGB": {
          "description": "Virtual machine root disk size in GiB.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DiskSizeGB"
        },
        "imageReference": {
          "description": "URL to virtual machine OCI image.",
          "type": "string",
          "x-go-name": "Image"
        },
        "memorySizeGB": {
          "description": "Virtual machine memory size in GiB.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "MemorySizeGB"
        },
        "networkAttachments": {
          "description": "Virtual machine networking properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineNetworkAttachment"
          },
          "x-go-name": "VirtualMachineNetworkAttachements"
        },
        "networkConfigurationVersion": {
          "description": "Version of virtual machine network configuration.",
          "type": "string",
          "default": "v2",
          "enum": [
            "v1",
            "v2"
          ],
          "x-go-name": "NetworkConfigurationVersion"
        },
        "placementHints": {
          "description": "Scheduling hints for virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachinePlacementHint"
          },
          "x-go-name": "VirtualMachinePlacementHints"
        },
        "powerState": {
          "description": "Virtual machine power state.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-go-name": "PowerState",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Virtual machine provisioning status.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "x-go-name": "ProvisioningState",
          "readOnly": true
        },
        "sshKey": {
          "description": "User ssh key.",
          "type": "string",
          "x-go-name": "SshKey"
        },
        "userData": {
          "description": "Base64 encoded cloud-init user data.",
          "type": "string",
          "x-go-name": "UserData"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "WorkloadNetwork": {
      "description": "WorkloadNetwork represents an on-premise WorkloadNetwork",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "WorkloadNetworkList": {
      "type": "object",
      "title": "WorkloadNetworkList represents a list of WorkloadNetwork.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "workloadNetworks": {
          "description": "The list of Workload Networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadNetwork"
          },
          "x-go-name": "WorkloadNetworks"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "WorkloadNetworkProperties": {
      "type": "object",
      "title": "WorkloadNetworkProperties represents the properties of a Workload Network.",
      "required": [
        "cluster",
        "routingDomains"
      ],
      "properties": {
        "adminStatus": {
          "description": "AdminStatus is the admin status of the Workload Network.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-go-name": "AdminStatus",
          "readOnly": true
        },
        "cluster": {
          "description": "Cluster is the name of the undercloud cluster this Workload Network is associated with.",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "hostPluginType": {
          "description": "Host Plugin Type.",
          "type": "string",
          "enum": [
            "SRIOV",
            "FUTURE"
          ],
          "x-go-name": "HostPluginType"
        },
        "hybridAksIpamEnabled": {
          "description": "HybridAKS IPAM Enabled.",
          "type": "boolean",
          "x-go-name": "HybridAksIpamEnabled"
        },
        "hybridAksPluginType": {
          "description": "Network plugin type for HybridAKS.",
          "type": "string",
          "enum": [
            "HOST-DEVICE",
            "MACVLAN",
            "DPDK",
            "IPVLAN"
          ],
          "x-go-name": "HybridAksPluginType"
        },
        "ipAllocationType": {
          "description": "IP Allocation Type defaults to Dual-Stack.",
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6",
            "Dual-Stack"
          ],
          "x-go-name": "IPAllocationType"
        },
        "ipv4AddressPrefixIndex": {
          "description": "Index of the IPv4AddressPrefix array from the Routing Domain to be used for this Workload Network.",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "x-go-name": "IPv4AddressPrefixIndex"
        },
        "ipv6AddressRangeIndex": {
          "description": "Index of the IPv6RangePrefix array from the Routing Domain to be used for this Workload Network.",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "x-go-name": "IPv6AddressRangeIndex"
        },
        "maxTxRate": {
          "description": "Maximum tx rate, in Mbps, for the VF.",
          "type": "integer",
          "format": "int64",
          "default": 0,
          "minimum": 0,
          "x-go-name": "MaxTxRate"
        },
        "minTxRate": {
          "description": "Minimum tx rate, in Mbps, for the VF.",
          "type": "integer",
          "format": "int64",
          "default": 0,
          "minimum": 0,
          "x-go-name": "MinTxRate"
        },
        "mtu": {
          "description": "Mtu of this Workload Network.",
          "type": "integer",
          "format": "int64",
          "default": 1500,
          "x-go-name": "Mtu"
        },
        "provisioningState": {
          "description": "ProvisioningState of the Workload Network.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Failed"
          ],
          "x-go-name": "ProvisioningState",
          "readOnly": true
        },
        "routingDomains": {
          "description": "RoutingDomain associated to the Workload Network.",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string"
          },
          "x-go-name": "RoutingDomains"
        },
        "spoofCheckEnabled": {
          "description": "SpoofCheckEnabled encoded cloud-init user data.",
          "type": "boolean",
          "x-go-name": "SpoofCheckEnabled"
        },
        "trustedModeEnabled": {
          "description": "TrustedModeEnabled encoded cloud-init user data.",
          "type": "boolean",
          "x-go-name": "TrustedModeEnabled"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}