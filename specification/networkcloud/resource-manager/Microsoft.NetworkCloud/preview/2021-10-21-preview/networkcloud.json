{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The Network Cloud Client.",
    "title": "Network Cloud Client",
    "version": "2021-10-21-preview"
  },
  "host": "management.azure.com",
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "This will show all network cloud clusters in a subscription.",
        "summary": "Lists network cloud clusters in a subscription.",
        "operationId": "Clusters_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/bootstrapImages": {
      "get": {
        "description": "This will show all network cloud bootstrap Isos for a particular cluster.",
        "summary": "Lists network cloud cluster bootstrap image.",
        "operationId": "Clusters_BootstrapImages_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImagesList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "This will get a list of all network cloud virtual machines from specific subscription.",
        "summary": "Retrieve all network cloud virtual machines from specific subscription.",
        "operationId": "VirtualMachines_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "This will show all network cloud workload networks in a subscription.",
        "summary": "Lists network cloud workload networks in a subscription.",
        "operationId": "WorkloadNetworks_List_Subscription",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters": {
      "get": {
        "description": "This will show all network cloud clusters in a resource group.",
        "summary": "Lists network cloud clusters in a resource group.",
        "operationId": "Clusters_List_Resource_Group",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific network cloud cluster.",
        "summary": "Retrieves a specific network cloud cluster.",
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Get Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Get.json"
          }
        }
      },
      "put": {
        "description": "This create or update the properties of a specific network cloud cluster.",
        "summary": "Creates or updates a specific network cloud cluster.",
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "extendedlocation": {
                  "$ref": "#/definitions/ExtendedLocationType"
                },
                "id": {
                  "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
                  "type": "string",
                  "x-go-name": "Id"
                },
                "location": {
                  "description": "Location is the Azure location where this resource will exist or already exists.",
                  "type": "string",
                  "x-go-name": "Location"
                },
                "name": {
                  "description": "Name is the name of the resource that this resource provider will create.",
                  "type": "string",
                  "x-go-name": "Name"
                },
                "properties": {
                  "$ref": "#/definitions/ClusterProperties"
                },
                "systemData": {
                  "$ref": "#/definitions/SystemData"
                },
                "tags": {
                  "description": "Tags are Azure resource tags that will be added to the referenced resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "This will delete a network cloud cluster.",
        "summary": "Deletes a specific network cloud cluster.",
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Delete.json"
          }
        }
      },
      "patch": {
        "description": "This patches the properties of a specific network cloud cluster.",
        "summary": "Patches a specific network cloud cluster.",
        "operationId": "Clusters_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Payload",
            "name": "payload",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "extendedlocation": {
                  "$ref": "#/definitions/ExtendedLocationType"
                },
                "id": {
                  "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
                  "type": "string",
                  "x-go-name": "Id"
                },
                "location": {
                  "description": "Location is the Azure location where this resource will exist or already exists.",
                  "type": "string",
                  "x-go-name": "Location"
                },
                "name": {
                  "description": "Name is the name of the resource that this resource provider will create.",
                  "type": "string",
                  "x-go-name": "Name"
                },
                "properties": {
                  "$ref": "#/definitions/ClusterProperties"
                },
                "systemData": {
                  "$ref": "#/definitions/SystemData"
                },
                "tags": {
                  "description": "Tags are Azure resource tags that will be added to the referenced resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-name": "Tags"
                },
                "type": {
                  "type": "string",
                  "x-go-name": "Type"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Network Cloud Cluster": {
            "$ref": "./examples/Clusters_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/bootstrapImages/{bootstrapImageName}": {
      "get": {
        "description": "This will show the properties of a specific bootstrap image.",
        "summary": "Retrieve a specific bootstrap image for a cluster.",
        "operationId": "Clusters_BootstrapImages_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "pattern": "\"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$\"",
            "type": "string",
            "x-go-name": "BootstrapImageName",
            "name": "bootstrapImageName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImages"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/clusters/{resourceName}/createBootstrapImage/{bootstrapImageName}": {
      "put": {
        "description": "This will generate a bootable image for this network cloud cluster.",
        "summary": "Generate a bootable image for this cluster.",
        "operationId": "Clusters_BootstrapImages_Create",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "pattern": "\"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$\"",
            "type": "string",
            "x-go-name": "BootstrapImageName",
            "name": "bootstrapImageName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClustersBootstrapImages"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines": {
      "get": {
        "description": "This will get a list of all network cloud virtual machines from specific resource group.",
        "summary": "Retrieve all network cloud virtual machines from specific resource group.",
        "operationId": "VirtualMachines_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachineList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific network cloud virtual machine.",
        "summary": "Retrieve a specific virtual machine.",
        "operationId": "VirtualMachines_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "description": "This creates or updates the properties of a specific network cloud virtual machine.",
        "summary": "Creates or updates a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Properties",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "imageReference",
                "cluster",
                "cpuCores",
                "memorySizeGB",
                "diskSizeGB"
              ],
              "properties": {
                "bareMetalMachineURI": {
                  "description": "URI to the bare metal machine VM has landed to.",
                  "type": "string",
                  "x-go-name": "BareMetalMachine",
                  "readOnly": true
                },
                "cluster": {
                  "description": "Name of undercloud cluster VM is created with.",
                  "type": "string",
                  "x-go-name": "Cluster"
                },
                "cpuCores": {
                  "description": "Number virtual machine cpu cores.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "CpuCores"
                },
                "diskSizeGB": {
                  "description": "Virtual machine root disk size in GiB.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "DiskSizeGB"
                },
                "imageReference": {
                  "description": "URL to virtual machine OCI image.",
                  "type": "string",
                  "x-go-name": "Image"
                },
                "memorySizeGB": {
                  "description": "Virtual machine memory size in GiB.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "MemorySizeGB"
                },
                "networkAttachments": {
                  "description": "Virtual machine networking properties.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachineNetworkAttachment"
                  },
                  "x-go-name": "VirtualMachineNetworkAttachements"
                },
                "networkConfigurationVersion": {
                  "description": "Version of virtual machine network configuration.",
                  "type": "string",
                  "default": "v2",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-go-name": "NetworkConfigurationVersion"
                },
                "placementHints": {
                  "description": "Scheduling hints for virtual machine.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachinePlacementHint"
                  },
                  "x-go-name": "VirtualMachinePlacementHints"
                },
                "powerState": {
                  "description": "Virtual machine power state.",
                  "type": "string",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "x-go-name": "PowerState",
                  "readOnly": true
                },
                "provisioningState": {
                  "description": "Virtual machine provisioning status.",
                  "type": "string",
                  "enum": [
                    "Provisioning",
                    "Succeeded",
                    "Failed",
                    "Deleting"
                  ],
                  "x-go-name": "ProvisioningState",
                  "readOnly": true
                },
                "sshKey": {
                  "description": "User ssh key.",
                  "type": "string",
                  "x-go-name": "SshKey"
                },
                "userData": {
                  "description": "Base64 encoded cloud-init user data.",
                  "type": "string",
                  "x-go-name": "UserData"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud VirtualMachine": {
            "$ref": "./examples/VirtualMachines_Create.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "delete": {
        "description": "This will delete a specific network cloud virtual machine.",
        "summary": "Deletes a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "This creates or updates the properties of a specific network cloud virtual machine.",
        "summary": "Patches a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Properties",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "imageReference",
                "cluster",
                "cpuCores",
                "memorySizeGB",
                "diskSizeGB"
              ],
              "properties": {
                "bareMetalMachineURI": {
                  "description": "URI to the bare metal machine VM has landed to.",
                  "type": "string",
                  "x-go-name": "BareMetalMachine",
                  "readOnly": true
                },
                "cluster": {
                  "description": "Name of undercloud cluster VM is created with.",
                  "type": "string",
                  "x-go-name": "Cluster"
                },
                "cpuCores": {
                  "description": "Number virtual machine cpu cores.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "CpuCores"
                },
                "diskSizeGB": {
                  "description": "Virtual machine root disk size in GiB.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "DiskSizeGB"
                },
                "imageReference": {
                  "description": "URL to virtual machine OCI image.",
                  "type": "string",
                  "x-go-name": "Image"
                },
                "memorySizeGB": {
                  "description": "Virtual machine memory size in GiB.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "MemorySizeGB"
                },
                "networkAttachments": {
                  "description": "Virtual machine networking properties.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachineNetworkAttachment"
                  },
                  "x-go-name": "VirtualMachineNetworkAttachements"
                },
                "networkConfigurationVersion": {
                  "description": "Version of virtual machine network configuration.",
                  "type": "string",
                  "default": "v2",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-go-name": "NetworkConfigurationVersion"
                },
                "placementHints": {
                  "description": "Scheduling hints for virtual machine.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachinePlacementHint"
                  },
                  "x-go-name": "VirtualMachinePlacementHints"
                },
                "powerState": {
                  "description": "Virtual machine power state.",
                  "type": "string",
                  "enum": [
                    "On",
                    "Off"
                  ],
                  "x-go-name": "PowerState",
                  "readOnly": true
                },
                "provisioningState": {
                  "description": "Virtual machine provisioning status.",
                  "type": "string",
                  "enum": [
                    "Provisioning",
                    "Succeeded",
                    "Failed",
                    "Deleting"
                  ],
                  "x-go-name": "ProvisioningState",
                  "readOnly": true
                },
                "sshKey": {
                  "description": "User ssh key.",
                  "type": "string",
                  "x-go-name": "SshKey"
                },
                "userData": {
                  "description": "Base64 encoded cloud-init user data.",
                  "type": "string",
                  "x-go-name": "UserData"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VirtualMachine"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud VirtualMachine": {
            "$ref": "./examples/VirtualMachines_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/powerOff": {
      "post": {
        "description": "This will power off a specific network cloud virtual machine.",
        "summary": "Powers off a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_PowerOff",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "x-go-name": "SkipShutdown",
            "description": "Allows to bypass OS shutdown and power virtual machine off immediately.",
            "name": "skipShutdown",
            "in": "query"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Powers off a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_PowerOff.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/reimage": {
      "post": {
        "description": "This will reimage a specific network cloud virtual machine.",
        "summary": "Reimages a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Reimage",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Reimage a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Reimage.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/restart": {
      "post": {
        "description": "This will restart a specific network cloud virtual machine.",
        "summary": "Restarts a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Restart",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Restart a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Restart.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/virtualMachines/{resourceName}/start": {
      "post": {
        "description": "This will start a specific network cloud virtual machine.",
        "summary": "Starts a specific network cloud virtual machine.",
        "operationId": "VirtualMachines_Start",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Start a Network Cloud Virtual Machine": {
            "$ref": "./examples/VirtualMachines_Start.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks": {
      "get": {
        "description": "This will get a list of all workload network resources from specific resource group.",
        "summary": "Retrieve all workload network resources from specific resource group.",
        "operationId": "WorkloadNetworks_List",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetworkList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.NetworkCloud/workloadNetworks/{resourceName}": {
      "get": {
        "description": "This will show the properties of a specific network cloud workload network.",
        "summary": "Retrieve a specific workload network.",
        "operationId": "WorkloadNetworks_Get",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "description": "This creates or updates the properties of a specific WorkloadNetwork.\n\nWith x-ms-long-running-operation set to true,\nx-ms-long-running-operation-options is set to default value(\"azure-async-operation\")",
        "summary": "Creates or updates a specific network cloud WorkloadNetwork(ASYNC)",
        "operationId": "WorkloadNetworks_CreateOrUpdate",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Create or Update Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Create.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "delete": {
        "description": "This will delete a specific workload network.",
        "summary": "Deletes a specific network cloud workload network.",
        "operationId": "WorkloadNetworks_Delete",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string",
                "description": "URI to the operationResults resource."
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Deletes Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Delete.json"
          }
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "description": "This patches the properties of a specific WorkloadNetwork.",
        "summary": "Patches a specific WorkloadNetwork.",
        "operationId": "WorkloadNetworks_Patch",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "ApiVersion",
            "name": "api-version",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "SubscriptionId",
            "name": "subscriptionId",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 90,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceGroupName",
            "name": "resourceGroupName",
            "in": "path",
            "required": true
          },
          {
            "maxLength": 63,
            "minLength": 1,
            "type": "string",
            "x-go-name": "ResourceName",
            "name": "resourceName",
            "in": "path",
            "required": true
          },
          {
            "name": "Properties",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "cluster",
                "ipAllocationType",
                "hybridAksPluginType",
                "hybridAksIpamEnabled",
                "routingDomain"
              ],
              "properties": {
                "adminStatus": {
                  "description": "AdminStatus is the admin status of the Workload network.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-go-name": "AdminStatus",
                  "readOnly": true
                },
                "cluster": {
                  "description": "Cluster is the name of the undercloud cluster this workload network is associated with.",
                  "type": "string",
                  "x-go-name": "Cluster"
                },
                "hostPluginType": {
                  "description": "HostPluginType Type",
                  "type": "string",
                  "enum": [
                    "SRIOV",
                    "FUTURE"
                  ],
                  "x-go-name": "HostPluginType",
                  "readOnly": true
                },
                "hybridAksIpamEnabled": {
                  "description": "HybridAksIpamEnabled",
                  "type": "boolean",
                  "default": true,
                  "x-go-name": "HybridAksIpamEnabled"
                },
                "hybridAksPluginType": {
                  "description": "HybridAksPluginType",
                  "type": "string",
                  "default": "HOST-DEVICE",
                  "enum": [
                    "HOST-DEVICE",
                    "MACVLAN",
                    "DPDK"
                  ],
                  "x-go-name": "HybridAksPluginType"
                },
                "ipAllocationType": {
                  "description": "IPAllocation Type defaults to Dual-Stack",
                  "type": "string",
                  "enum": [
                    "IPv4",
                    "IPv6",
                    "Dual-Stack"
                  ],
                  "x-go-name": "IPAllocationType"
                },
                "ipv4AddressPrefixIndex": {
                  "description": "IPv4AddressPrefixIndex of the Workload network",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "IPv4AddressPrefixIndex"
                },
                "ipv6AddressRangeIndex": {
                  "description": "IPv6AddressRangeIndex of the Workload network",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "IPv6AddressRangeIndex"
                },
                "maxTxRate": {
                  "description": "Maximum tx rate, in Mbps, for the VF.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "MaxTxRate"
                },
                "minTxRate": {
                  "description": "Minimum tx rate, in Mbps, for the VF.",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "MinTxRate"
                },
                "mtu": {
                  "description": "Mtu of workload network",
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "Mtu"
                },
                "provisioningState": {
                  "description": "ProvisioningState of the Workload network.",
                  "type": "string",
                  "enum": [
                    "Provisioning",
                    "Succeeded",
                    "Failed"
                  ],
                  "x-go-name": "ProvisioningState",
                  "readOnly": true
                },
                "routingDomain": {
                  "description": "RoutingDomain associated to the Workload network",
                  "type": "string",
                  "x-go-name": "RoutingDomain"
                },
                "spoofCheckEnabled": {
                  "description": "SpoofCheckEnabled encoded cloud-init user data.",
                  "type": "boolean",
                  "x-go-name": "SpoofCheckEnabled"
                },
                "trustedModeEnabled": {
                  "description": "TrustedModeEnabled encoded cloud-init user data.",
                  "type": "boolean",
                  "x-go-name": "TrustedModeEnabled"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadNetwork"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Patch Network Cloud WorkloadNetwork": {
            "$ref": "./examples/WorkloadNetworks_Patch.json"
          }
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzureCommonProperties": {
      "description": "AzureCommonProperties are parameters that can be included on requests but are processed by RPaaS and not by this\nresource provider. They are listed as optional resources because RPaaS will enforce which parameters are required.",
      "type": "object",
      "properties": {
        "extendedlocation": {
          "$ref": "#/definitions/ExtendedLocationType"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "BMCCredentials": {
      "type": "object",
      "title": "BMCCredentials contains credentials used to communicate with the bare-metal controller on a host.",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "BareMetalMachineUserData": {
      "type": "object",
      "required": [
        "rackSlot",
        "bootMACAddress",
        "bmcCredentials",
        "bmcConnectionString",
        "tpmEndorsementKey",
        "serialNumber",
        "bmcMACAddress"
      ],
      "properties": {
        "bmcConnectionString": {
          "description": "BMCConnectionString is the connection string for the bare-metal controller on this bare-metal machine.",
          "type": "string",
          "x-go-name": "BMCConnectionString"
        },
        "bmcCredentials": {
          "$ref": "#/definitions/BMCCredentials"
        },
        "bmcMACAddress": {
          "description": "BMCMACAddress is the MAC address of the bare-metal controller on this machine.",
          "type": "string",
          "x-go-name": "BMCMACAddress"
        },
        "bootMACAddress": {
          "description": "BootMACAddress is the MAC address of a NIC connected to the PXE network.",
          "type": "string",
          "x-go-name": "BootMACAddress"
        },
        "rackSlot": {
          "description": "RackSlot is the slot in which this physical machine is located, ordered from the bottom up i.e. the lowest slot\nis 1.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "RackSlot"
        },
        "serialNumber": {
          "description": "SerialNumber is an optional serial number or other asset tag identifier that a user may use to associate with\nthis machine.",
          "type": "string",
          "x-go-name": "SerialNumber"
        },
        "tpmEndorsementKey": {
          "description": "TPMEndorsementKey is the thumbprint or SHA of the TPM Endorsement Key that allows the resource provider to ensure\nauthenticity of the machine.",
          "type": "string",
          "x-go-name": "TPMEndorsementKey"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "CloudError": {
      "type": "object",
      "title": "CloudError represents a cloud error.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string",
          "x-go-name": "Code"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-go-name": "Details"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string",
          "x-go-name": "Message"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string",
          "x-go-name": "Target"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "CloudErrorBody": {
      "type": "object",
      "title": "CloudErrorBody represents the body of a cloud error.",
      "properties": {
        "code": {
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically.",
          "type": "string",
          "x-go-name": "Code"
        },
        "details": {
          "description": "A list of additional details about the error.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "x-go-name": "Details"
        },
        "message": {
          "description": "A message describing the error, intended to be suitable for display in a user interface.",
          "type": "string",
          "x-go-name": "Message"
        },
        "target": {
          "description": "The target of the particular error. For example, the name of the property in error.",
          "type": "string",
          "x-go-name": "Target"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "Cluster": {
      "description": "A cluster is the top level object for the on-premise environment.",
      "type": "object",
      "title": "Cluster represents an on-Premise Network Cloud cluster",
      "properties": {
        "extendedlocation": {
          "$ref": "#/definitions/ExtendedLocationType"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/ClusterProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterList": {
      "type": "object",
      "title": "ClusterList represents a list of Clusters.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of clusters.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "x-go-name": "Clusters"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClusterProperties": {
      "description": "https://armwiki.azurewebsites.net/rpaas/arc-rp/conversion/SchemaTranslation.html#default-kubernetes-bridge-mapping\n\nfor now, we'll align on the same concept for our RPaaS\nobjects as well\n\nClusterProperties represents the properties of a cluster.",
      "type": "object",
      "title": "Note, k8s bridge resource types will default to\na singular status field under properties",
      "required": [
        "networkFabric",
        "oobConnectionString",
        "oobCredentials",
        "clusterType",
        "storageAccount",
        "natSubnet",
        "generatedSubnets"
      ],
      "properties": {
        "clusterType": {
          "description": "ClusterType is the type of rack configuration for this cluster.\nsingle-rack SingleRack\nmulti-rack MultiRack",
          "type": "string",
          "enum": [
            "single-rack",
            "multi-rack"
          ],
          "x-go-enum-desc": "single-rack SingleRack\nmulti-rack MultiRack",
          "x-go-name": "ClusterType"
        },
        "generatedSubnets": {
          "description": "GeneratedSubnets includes generated RFC1918 subnets for this cluster. These will be unique across the entire\nmanagement group/customer, but repeated across customers. Each new cluster will get blocks assigned for all\ninfrastructure networks. Some of the networks will span the entire cluster (e.g. PXE, and Management/iDRAC) and\nthe customer needs to know these blocks before they add racks because customers need to assign iDRAC IP addresses\n(uniquely) to each host. Block(s) can also be generated for infrastructure networks that can be used each time a\nrack manifest is added, allocations can be made from this.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "GeneratedSubnets"
        },
        "natSubnet": {
          "description": "NatSubnet is the outbound subnet used to NAT outbound management traffic (e.g. OAM leaving CE devices and heading\ntowards expressroute).",
          "type": "string",
          "x-go-name": "NatSubnet"
        },
        "networkFabric": {
          "type": "string",
          "x-go-name": "NetworkFabric"
        },
        "oobConnectionString": {
          "description": "OOBConnection is the connection details of the OOB device that enables bootstrapping the storage or other\nappliances.",
          "type": "string",
          "x-go-name": "OOBConnectionString"
        },
        "oobCredentials": {
          "$ref": "#/definitions/OOBCredentials"
        },
        "storageAccount": {
          "description": "StorageAccount is the URI reference (ID) to an associated StorageAccount to which bootstrapImages will be",
          "type": "string",
          "x-go-name": "StorageAccount"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "ClustersBootstrapImages": {
      "description": "Bootstrap Image resource",
      "type": "object",
      "properties": {
        "extendedlocation": {
          "$ref": "#/definitions/ExtendedLocationType"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/ClustersBootstrapImagesProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClustersBootstrapImagesList": {
      "type": "object",
      "title": "BootstrapImageList represents a list of bootstrap Images for a cluster.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of BootstrapImages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClustersBootstrapImages"
          },
          "x-go-name": "ClustersBootstrapImages"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ClustersBootstrapImagesProperties": {
      "type": "object",
      "title": "ClusterBootstrapImagesProperties represents the properties of a cluster bootstrap Image.",
      "properties": {
        "mediaurl": {
          "type": "string",
          "x-go-name": "MediaUrl",
          "readOnly": true
        },
        "provisioningState": {
          "x-go-name": "ProvisioningState",
          "readOnly": true
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "CreatedByType": {
      "description": "CreatedByType defines user type, which executed the request",
      "type": "string",
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "ExtendedLocationType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The extended location name",
          "type": "string",
          "x-go-name": "Name"
        },
        "type": {
          "description": "The extended location type",
          "type": "string",
          "default": "\"CustomLocation\"",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "OOBCredentials": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "Rack": {
      "description": "NOTE: There may be some differences between a Rack and RackManifest as we add logic to process a RackManifest;\nhowever, a Rack is just an alias of the RackManifest type in this initial implementation.",
      "title": "Rack is the validated/processed representation of a rack located in an on-premesis cluster.",
      "$ref": "#/definitions/RackManifest"
    },
    "RackManifest": {
      "type": "object",
      "title": "RackManifest is the unprocessed, user-submitted intention for a rack located in an on-premesis cluster.",
      "required": [
        "name",
        "clusterName",
        "networkRack",
        "modelId",
        "rackSerialNumber"
      ],
      "properties": {
        "baremetalMachineUserData": {
          "description": "BareMetalMachineUserData is a list of machine objects in this rack.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BareMetalMachineUserData"
          },
          "x-go-name": "BareMetalMachineUserData"
        },
        "clusterName": {
          "description": "Cluster is the name of the cluster to which this rack will be associated.",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "clusterSlot": {
          "description": "ClusterSlot identifies this rack's placement within a cluster.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "ClusterSlot"
        },
        "modelId": {
          "description": "ModelId is the Model ID of this rack.",
          "type": "string",
          "x-go-name": "ModelId"
        },
        "name": {
          "description": "Name is a user-friendly identifier for this rack.",
          "type": "string",
          "x-go-name": "Name"
        },
        "networkRack": {
          "type": "string",
          "x-go-name": "NetworkRack"
        },
        "rackLocation": {
          "description": "RackLocation is a user description of the location of this rack, e.g. \"DTN Datacenter, Floor 3, Aisle 9, Rack 2\".",
          "type": "string",
          "x-go-name": "RackLocation"
        },
        "rackSerialNumber": {
          "description": "RackSerialNumber is a globally unique identifier for an AFO-NC rack.",
          "type": "string",
          "x-go-name": "RackSerialNumber"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "SystemData": {
      "type": "object",
      "title": "SystemData metadata pertaining to creation and last modification of the resource.",
      "properties": {
        "createdAt": {
          "type": "string",
          "x-go-name": "CreatedAt"
        },
        "createdBy": {
          "type": "string",
          "x-go-name": "CreatedBy"
        },
        "createdByType": {
          "$ref": "#/definitions/CreatedByType"
        },
        "lastModifiedAt": {
          "type": "string",
          "x-go-name": "LastModifiedAt"
        },
        "lastModifiedBy": {
          "type": "string",
          "x-go-name": "LastModifiedBy"
        },
        "lastModifiedByType": {
          "$ref": "#/definitions/CreatedByType"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachine": {
      "description": "VirtualMachine represents an on-Premises Network Cloud virtual machine",
      "type": "object",
      "properties": {
        "extendedlocation": {
          "$ref": "#/definitions/ExtendedLocationType"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/VirtualMachineProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachineList": {
      "type": "object",
      "title": "VirtualMachineList represents a list of VirtualMachines.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "value": {
          "description": "The list of virtual machines.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachine"
          },
          "x-go-name": "VirtualMachines"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "VirtualMachineNetworkAttachment": {
      "description": "VirtualMachineNetworkAttachement represents a single network attachment",
      "type": "object",
      "required": [
        "workloadNetwork",
        "ipAllocationMethod"
      ],
      "properties": {
        "ipAllocationMethod": {
          "description": "IPAllocationMethod defines mechanism for ip allocation.",
          "type": "string",
          "default": "Dynamic",
          "enum": [
            "Dynamic",
            "Static",
            "Disabled"
          ],
          "x-go-name": "IPAllocationMethod"
        },
        "ipv4Address": {
          "description": "IPv4Address represents ipv4 address of a VM.\nThis field is only used if the associated WorkloadNetwork has a IPAllocationType of IPv4 or Dual-Stack.\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv4 address from within the subnet specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string",
          "x-go-name": "IPv4Address"
        },
        "ipv6Address": {
          "description": "IPv6Address represents ipv6 address of a VM.\nThis field is only used if the associated WorkloadNetwork has a IPAllocationType of IPv6 or Dual-Stack.\nIf IPAllocationMethod is:\nStatic - this field must contain a user specified IPv6 address from within the subnet specified in the WorkloadNetwork.\nDynamic - this field is read-only, but will be populated with an address from within the subnet specified in the WorkloadNetwork.\nDisabled - this field will be empty.",
          "type": "string",
          "x-go-name": "IPv6Address"
        },
        "workloadNetwork": {
          "description": "Workload network to attach.",
          "type": "string",
          "x-go-name": "WorkloadNetwork"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "VirtualMachinePlacementHint": {
      "description": "VirtualMachinePlacementHint represents a single scheduling hint of virtual machine",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "description": "Virtual machine placement hint key.",
          "type": "string",
          "x-go-name": "Key"
        },
        "value": {
          "description": "Virtual machine placement hint value.",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "VirtualMachineProperties": {
      "type": "object",
      "title": "VirtualMachineProperties represents the properties of a virtual machine.",
      "required": [
        "imageReference",
        "cluster",
        "cpuCores",
        "memorySizeGB",
        "diskSizeGB"
      ],
      "properties": {
        "bareMetalMachineURI": {
          "description": "URI to the bare metal machine VM has landed to.",
          "type": "string",
          "x-go-name": "BareMetalMachine",
          "readOnly": true
        },
        "cluster": {
          "description": "Name of undercloud cluster VM is created with.",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "cpuCores": {
          "description": "Number virtual machine cpu cores.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CpuCores"
        },
        "diskSizeGB": {
          "description": "Virtual machine root disk size in GiB.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "DiskSizeGB"
        },
        "imageReference": {
          "description": "URL to virtual machine OCI image.",
          "type": "string",
          "x-go-name": "Image"
        },
        "memorySizeGB": {
          "description": "Virtual machine memory size in GiB.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "MemorySizeGB"
        },
        "networkAttachments": {
          "description": "Virtual machine networking properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachineNetworkAttachment"
          },
          "x-go-name": "VirtualMachineNetworkAttachements"
        },
        "networkConfigurationVersion": {
          "description": "Version of virtual machine network configuration.",
          "type": "string",
          "default": "v2",
          "enum": [
            "v1",
            "v2"
          ],
          "x-go-name": "NetworkConfigurationVersion"
        },
        "placementHints": {
          "description": "Scheduling hints for virtual machine.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualMachinePlacementHint"
          },
          "x-go-name": "VirtualMachinePlacementHints"
        },
        "powerState": {
          "description": "Virtual machine power state.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "x-go-name": "PowerState",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Virtual machine provisioning status.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Failed",
            "Deleting"
          ],
          "x-go-name": "ProvisioningState",
          "readOnly": true
        },
        "sshKey": {
          "description": "User ssh key.",
          "type": "string",
          "x-go-name": "SshKey"
        },
        "userData": {
          "description": "Base64 encoded cloud-init user data.",
          "type": "string",
          "x-go-name": "UserData"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    },
    "WorkloadNetwork": {
      "description": "WorkloadNetwork represents an on-premise WorkloadNetwork",
      "type": "object",
      "properties": {
        "extendedlocation": {
          "$ref": "#/definitions/ExtendedLocationType"
        },
        "id": {
          "description": "Id is the ID of an existing Azure resource that this resource provider will manage.",
          "type": "string",
          "x-go-name": "Id"
        },
        "location": {
          "description": "Location is the Azure location where this resource will exist or already exists.",
          "type": "string",
          "x-go-name": "Location"
        },
        "name": {
          "description": "Name is the name of the resource that this resource provider will create.",
          "type": "string",
          "x-go-name": "Name"
        },
        "properties": {
          "$ref": "#/definitions/WorkloadNetworkProperties"
        },
        "systemData": {
          "$ref": "#/definitions/SystemData"
        },
        "tags": {
          "description": "Tags are Azure resource tags that will be added to the referenced resource.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Tags"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "WorkloadNetworkList": {
      "type": "object",
      "title": "WorkloadNetworkList represents a list of WorkloadNetwork.",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "x-go-name": "NextLink"
        },
        "workloadNetworks": {
          "description": "The list of workload networks.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkloadNetwork"
          },
          "x-go-name": "WorkloadNetworks"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview"
    },
    "WorkloadNetworkProperties": {
      "type": "object",
      "title": "WorkloadNetworkProperties represents the properties of a workload network.",
      "required": [
        "cluster",
        "ipAllocationType",
        "hybridAksPluginType",
        "hybridAksIpamEnabled",
        "routingDomain"
      ],
      "properties": {
        "adminStatus": {
          "description": "AdminStatus is the admin status of the Workload network.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-go-name": "AdminStatus",
          "readOnly": true
        },
        "cluster": {
          "description": "Cluster is the name of the undercloud cluster this workload network is associated with.",
          "type": "string",
          "x-go-name": "Cluster"
        },
        "hostPluginType": {
          "description": "HostPluginType Type",
          "type": "string",
          "enum": [
            "SRIOV",
            "FUTURE"
          ],
          "x-go-name": "HostPluginType",
          "readOnly": true
        },
        "hybridAksIpamEnabled": {
          "description": "HybridAksIpamEnabled",
          "type": "boolean",
          "default": true,
          "x-go-name": "HybridAksIpamEnabled"
        },
        "hybridAksPluginType": {
          "description": "HybridAksPluginType",
          "type": "string",
          "default": "HOST-DEVICE",
          "enum": [
            "HOST-DEVICE",
            "MACVLAN",
            "DPDK"
          ],
          "x-go-name": "HybridAksPluginType"
        },
        "ipAllocationType": {
          "description": "IPAllocation Type defaults to Dual-Stack",
          "type": "string",
          "enum": [
            "IPv4",
            "IPv6",
            "Dual-Stack"
          ],
          "x-go-name": "IPAllocationType"
        },
        "ipv4AddressPrefixIndex": {
          "description": "IPv4AddressPrefixIndex of the Workload network",
          "type": "integer",
          "format": "int64",
          "x-go-name": "IPv4AddressPrefixIndex"
        },
        "ipv6AddressRangeIndex": {
          "description": "IPv6AddressRangeIndex of the Workload network",
          "type": "integer",
          "format": "int64",
          "x-go-name": "IPv6AddressRangeIndex"
        },
        "maxTxRate": {
          "description": "Maximum tx rate, in Mbps, for the VF.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "MaxTxRate"
        },
        "minTxRate": {
          "description": "Minimum tx rate, in Mbps, for the VF.",
          "type": "integer",
          "format": "int64",
          "x-go-name": "MinTxRate"
        },
        "mtu": {
          "description": "Mtu of workload network",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Mtu"
        },
        "provisioningState": {
          "description": "ProvisioningState of the Workload network.",
          "type": "string",
          "enum": [
            "Provisioning",
            "Succeeded",
            "Failed"
          ],
          "x-go-name": "ProvisioningState",
          "readOnly": true
        },
        "routingDomain": {
          "description": "RoutingDomain associated to the Workload network",
          "type": "string",
          "x-go-name": "RoutingDomain"
        },
        "spoofCheckEnabled": {
          "description": "SpoofCheckEnabled encoded cloud-init user data.",
          "type": "boolean",
          "x-go-name": "SpoofCheckEnabled"
        },
        "trustedModeEnabled": {
          "description": "TrustedModeEnabled encoded cloud-init user data.",
          "type": "boolean",
          "x-go-name": "TrustedModeEnabled"
        }
      },
      "x-go-package": "dev.azure.com/msazuredev/AzureForOperatorsIndustry/_git/nc-rp.git/api/v20211021preview/properties"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}