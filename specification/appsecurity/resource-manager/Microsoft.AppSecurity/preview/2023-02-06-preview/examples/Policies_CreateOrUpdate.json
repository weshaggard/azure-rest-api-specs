{
  "operationId": "Policies_CreateOrUpdate",
  "title": "Policies_CreateOrUpdate1",
  "parameters": {
    "api-version": "2023-02-06-preview",
    "subscriptionId": "sub1",
    "resourceGroupName": "rg1",
    "policyName": "Policy1",
    "resource": {
      "location": "global",
      "properties": {
        "policySettings": {
          "mode": "Prevention",
          "redirectUrl": "http://bing.com",
          "customBlockResponseStatusCode": 499,
          "customBlockResponseBody": "SGVsbG8=",
          "maxRequestBodySizeInKb": 128,
          "fileUploadLimitInMb": 100
        },
        "logScrubbing": {
          "state": "Enabled",
          "scrubbingRules": [
            {
              "state": "Enabled",
              "matchVariable": "RequestHeaderNames",
              "selectorMatchOperator": "Equals",
              "selector": "mySelector"
            },
            {
              "state": "Enabled",
              "matchVariable": "RequestHeaderNames",
              "selectorMatchOperator": "Equals",
              "selector": "mySelector"
            }
          ]
        },
        "customRules": [
          {
            "name": "Rule1",
            "state": "Enabled",
            "action": "Block",
            "priority": 10,
            "rateLimit": {
              "limitType": "ClientIp",
              "durationInMinutes": 1,
              "maxRequestsPerSecond": 1000
            },
            "matchConditions": [
              {
                "negationCondition": true,
                "conditionType": "Ip",
                "matchVariable": "ClientAddr",
                "matchValue": [
                  "192.168.1.0/24",
                  "10.0.0.0/24"
                ]
              }
            ]
          },
          {
            "name": "Rule2",
            "action": "Redirect",
            "priority": 20,
            "matchConditions": [
              {
                "conditionType": "Geo",
                "matchVariable": "ClientAddr",
                "matchValue": [
                  "AR",
                  "NZ"
                ]
              },
              {
                "negationCondition": false,
                "conditionType": "String",
                "operator": "Contains",
                "matchVariable": "RequestHeader",
                "matchVariableSelector": "UserAgent",
                "matchValue": [
                  "windows"
                ],
                "transformations": [
                  "Lowercase"
                ]
              },
              {
                "conditionType": "Exists",
                "matchVariable": "RequestHeader",
                "matchValue": "tasty_cookie"
              }
            ]
          }
        ],
        "webProtection": {
          "managedRules": [
            {
              "ruleSetType": "DRS",
              "ruleSetVersion": "3.2",
              "ruleGroupOverrides": [
                {
                  "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                  "groupOverride": {
                    "state": "Disabled"
                  }
                },
                {
                  "ruleGroupName": "REQUEST-931-APPLICATION-ATTACK-RFI",
                  "groupOverride": {
                    "state": "Enabled",
                    "action": "AnomalyScoring"
                  },
                  "rules": [
                    {
                      "ruleId": "931120",
                      "state": "Enabled",
                      "action": "Redirect"
                    },
                    {
                      "ruleId": "931130",
                      "state": "Disabled"
                    }
                  ]
                }
              ],
              "exclusions": [
                {
                  "matchVariable": "RequestArgNames",
                  "selectorMatchOperator": "EndsWith",
                  "selector": "hello"
                },
                {
                  "matchVariable": "RequestArgNames",
                  "selectorMatchOperator": "StartsWith",
                  "selector": "hello",
                  "ruleGroups": [
                    {
                      "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                      "rules": [
                        "930120"
                      ]
                    },
                    {
                      "ruleGroupName": "REQUEST-932-APPLICATION-ATTACK-RCE"
                    }
                  ]
                }
              ]
            }
          ]
        },
        "botProtection": {
          "managedRules": [
            {
              "ruleSetType": "BotProtection",
              "ruleSetVersion": "1.0",
              "ruleGroupOverrides": [],
              "exclusions": []
            }
          ]
        }
      }
    }
  },
  "responses": {
    "200": {
      "body": {
        "id": "/subscriptions/sub1/resourceGroups/rg1/providers/Microsoft.AppSecurity/Policies/Policy1",
        "name": "Policy1",
        "type": "Microsoft.AppSecurity/Policies",
        "location": "global",
        "properties": {
          "provisioningState": "Succeeded",
          "protectedEndpoints": [],
          "policySettings": {
            "mode": "Prevention",
            "redirectUrl": "http://bing.com",
            "customBlockResponseStatusCode": 499,
            "customBlockResponseBody": "SGVsbG8=",
            "maxRequestBodySizeInKb": 128,
            "fileUploadLimitInMb": 100
          },
          "logScrubbing": {
            "state": "Enabled",
            "scrubbingRules": [
              {
                "state": "Enabled",
                "matchVariable": "RequestHeaderNames",
                "selectorMatchOperator": "Equals",
                "selector": "mySelector"
              },
              {
                "state": "Enabled",
                "matchVariable": "RequestHeaderNames",
                "selectorMatchOperator": "Equals",
                "selector": "mySelector"
              }
            ]
          },
          "customRules": [
            {
              "name": "Rule1",
              "state": "Enabled",
              "action": "Block",
              "priority": 10,
              "rateLimit": {
                "limitType": "ClientIp",
                "durationInMinutes": 1,
                "maxRequestsPerSecond": 1000
              },
              "matchConditions": [
                {
                  "negationCondition": true,
                  "conditionType": "Ip",
                  "matchVariable": "ClientAddr",
                  "matchValue": [
                    "192.168.1.0/24",
                    "10.0.0.0/24"
                  ]
                }
              ]
            },
            {
              "name": "Rule2",
              "action": "Redirect",
              "priority": 20,
              "matchConditions": [
                {
                  "conditionType": "Geo",
                  "matchVariable": "ClientAddr",
                  "matchValue": [
                    "AR",
                    "NZ"
                  ]
                },
                {
                  "negationCondition": false,
                  "conditionType": "String",
                  "operator": "Contains",
                  "matchVariable": "RequestHeader",
                  "matchVariableSelector": "UserAgent",
                  "matchValue": [
                    "windows"
                  ],
                  "transformations": [
                    "Lowercase"
                  ]
                },
                {
                  "conditionType": "Exists",
                  "matchVariable": "RequestHeader",
                  "matchValue": "tasty_cookie"
                }
              ]
            }
          ],
          "webProtection": {
            "managedRules": [
              {
                "ruleSetType": "DRS",
                "ruleSetVersion": "3.2",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                    "groupOverride": {
                      "state": "Disabled"
                    }
                  },
                  {
                    "ruleGroupName": "REQUEST-931-APPLICATION-ATTACK-RFI",
                    "groupOverride": {
                      "state": "Enabled",
                      "action": "AnomalyScoring"
                    },
                    "rules": [
                      {
                        "ruleId": "931120",
                        "state": "Enabled",
                        "action": "Redirect"
                      },
                      {
                        "ruleId": "931130",
                        "state": "Disabled"
                      }
                    ]
                  }
                ],
                "exclusions": [
                  {
                    "matchVariable": "RequestArgNames",
                    "selectorMatchOperator": "EndsWith",
                    "selector": "hello"
                  },
                  {
                    "matchVariable": "RequestArgNames",
                    "selectorMatchOperator": "StartsWith",
                    "selector": "hello",
                    "ruleGroups": [
                      {
                        "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                        "rules": [
                          "930120"
                        ]
                      },
                      {
                        "ruleGroupName": "REQUEST-932-APPLICATION-ATTACK-RCE"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "botProtection": {
            "managedRules": [
              {
                "ruleSetType": "BotProtection",
                "ruleSetVersion": "1.0",
                "ruleGroupOverrides": [],
                "exclusions": []
              }
            ]
          }
        }
      }
    },
    "201": {
      "body": {
        "id": "/subscriptions/sub1/resourceGroups/rg1/providers/Microsoft.AppSecurity/Policies/Policy1",
        "name": "Policy1",
        "type": "Microsoft.AppSecurity/Policies",
        "location": "global",
        "properties": {
          "provisioningState": "Succeeded",
          "protectedEndpoints": [],
          "policySettings": {
            "mode": "Prevention",
            "redirectUrl": "http://bing.com",
            "customBlockResponseStatusCode": 499,
            "customBlockResponseBody": "SGVsbG8=",
            "maxRequestBodySizeInKb": 128,
            "fileUploadLimitInMb": 100
          },
          "logScrubbing": {
            "state": "Enabled",
            "scrubbingRules": [
              {
                "state": "Enabled",
                "matchVariable": "RequestHeaderNames",
                "selectorMatchOperator": "Equals",
                "selector": "mySelector"
              },
              {
                "state": "Enabled",
                "matchVariable": "RequestHeaderNames",
                "selectorMatchOperator": "Equals",
                "selector": "mySelector"
              }
            ]
          },
          "customRules": [
            {
              "name": "Rule1",
              "state": "Enabled",
              "action": "Block",
              "priority": 10,
              "rateLimit": {
                "limitType": "ClientIp",
                "durationInMinutes": 1,
                "maxRequestsPerSecond": 1000
              },
              "matchConditions": [
                {
                  "negationCondition": true,
                  "conditionType": "Ip",
                  "matchVariable": "ClientAddr",
                  "matchValue": [
                    "192.168.1.0/24",
                    "10.0.0.0/24"
                  ]
                }
              ]
            },
            {
              "name": "Rule2",
              "action": "Redirect",
              "priority": 20,
              "matchConditions": [
                {
                  "conditionType": "Geo",
                  "matchVariable": "ClientAddr",
                  "matchValue": [
                    "AR",
                    "NZ"
                  ]
                },
                {
                  "negationCondition": false,
                  "conditionType": "String",
                  "operator": "Contains",
                  "matchVariable": "RequestHeader",
                  "matchVariableSelector": "UserAgent",
                  "matchValue": [
                    "windows"
                  ],
                  "transformations": [
                    "Lowercase"
                  ]
                },
                {
                  "conditionType": "Exists",
                  "matchVariable": "RequestHeader",
                  "matchValue": "tasty_cookie"
                }
              ]
            }
          ],
          "webProtection": {
            "managedRules": [
              {
                "ruleSetType": "DRS",
                "ruleSetVersion": "3.2",
                "ruleGroupOverrides": [
                  {
                    "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                    "groupOverride": {
                      "state": "Disabled"
                    }
                  },
                  {
                    "ruleGroupName": "REQUEST-931-APPLICATION-ATTACK-RFI",
                    "groupOverride": {
                      "state": "Enabled",
                      "action": "AnomalyScoring"
                    },
                    "rules": [
                      {
                        "ruleId": "931120",
                        "state": "Enabled",
                        "action": "Redirect"
                      },
                      {
                        "ruleId": "931130",
                        "state": "Disabled"
                      }
                    ]
                  }
                ],
                "exclusions": [
                  {
                    "matchVariable": "RequestArgNames",
                    "selectorMatchOperator": "EndsWith",
                    "selector": "hello"
                  },
                  {
                    "matchVariable": "RequestArgNames",
                    "selectorMatchOperator": "StartsWith",
                    "selector": "hello",
                    "ruleGroups": [
                      {
                        "ruleGroupName": "REQUEST-930-APPLICATION-ATTACK-LFI",
                        "rules": [
                          "930120"
                        ]
                      },
                      {
                        "ruleGroupName": "REQUEST-932-APPLICATION-ATTACK-RCE"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "botProtection": {
            "managedRules": [
              {
                "ruleSetType": "BotProtection",
                "ruleSetVersion": "1.0",
                "ruleGroupOverrides": [],
                "exclusions": []
              }
            ]
          }
        }
      }
    }
  }
}
