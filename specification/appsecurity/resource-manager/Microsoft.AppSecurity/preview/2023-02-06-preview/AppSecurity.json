{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.AppSecurity",
    "version": "2023-02-06-preview",
    "description": "APIs to manage AppSecurity resources",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "IpLists"
    },
    {
      "name": "GeoLists"
    },
    {
      "name": "Policies"
    }
  ],
  "paths": {
    "/providers/Microsoft.AppSecurity/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "OperationsList": {
            "$ref": "./examples/Operations_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppSecurity/geoLists": {
      "get": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_ListBySubscription",
        "description": "List GeoList resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GeoListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GeoLists_ListBySubscription1": {
            "$ref": "./examples/GeoLists_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppSecurity/ipLists": {
      "get": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_ListBySubscription",
        "description": "List IpList resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpLists_ListBySubscription1": {
            "$ref": "./examples/IpLists_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AppSecurity/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_ListBySubscription",
        "description": "List Policy resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Policies_ListBySubscription1": {
            "$ref": "./examples/Policies_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/geoLists": {
      "get": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_ListByResourceGroup",
        "description": "List GeoList resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GeoListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "GeoLists_ListByResourceGroup1": {
            "$ref": "./examples/GeoLists_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/geoLists/{listName}": {
      "get": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_Get",
        "description": "Get a GeoList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the GeoList",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GeoList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GeoLists_Get1": {
            "$ref": "./examples/GeoLists_Get_200.json"
          }
        }
      },
      "put": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_CreateOrUpdate",
        "description": "Create a GeoList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the GeoList",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/GeoList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GeoList"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/GeoList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GeoLists_CreateOrUpdate1": {
            "$ref": "./examples/GeoLists_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_Update",
        "description": "Update a GeoList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the GeoList",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/GeoListUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/GeoList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GeoLists_Update1": {
            "$ref": "./examples/GeoLists_Update_200.json"
          }
        }
      },
      "delete": {
        "tags": [
          "GeoLists"
        ],
        "operationId": "GeoLists_Delete",
        "description": "Delete a GeoList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the GeoList",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "GeoLists_Delete1": {
            "$ref": "./examples/GeoLists_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/ipLists": {
      "get": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_ListByResourceGroup",
        "description": "List IpList resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpListListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "IpLists_ListByResourceGroup1": {
            "$ref": "./examples/IpLists_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/ipLists/{listName}": {
      "get": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_Get",
        "description": "Get a IpList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the IpList",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpLists_Get_1": {
            "$ref": "./examples/IpLists_Get_200.json"
          }
        }
      },
      "put": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_CreateOrUpdate",
        "description": "Create a IpList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the IpList",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/IpList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpList"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/IpList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpLists_CreateOrUpdate1": {
            "$ref": "./examples/IpLists_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_Update",
        "description": "Update a IpList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the IpList",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/IpListUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/IpList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpLists_Update1": {
            "$ref": "./examples/IpLists_Update_200.json"
          }
        }
      },
      "delete": {
        "tags": [
          "IpLists"
        ],
        "operationId": "IpLists_Delete",
        "description": "Delete a IpList",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "listName",
            "in": "path",
            "required": true,
            "description": "The name of the IpList",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "IpLists_Delete1": {
            "$ref": "./examples/IpLists_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_ListByResourceGroup",
        "description": "List Policy resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PolicyListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Policies_ListByResourceGroup1": {
            "$ref": "./examples/Policies_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppSecurity/policies/{policyName}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_Get",
        "description": "Get a Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Policies_Get1": {
            "$ref": "./examples/Policies_Get_200.json"
          }
        }
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_CreateOrUpdate",
        "description": "Create a Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Policies_CreateOrUpdate1": {
            "$ref": "./examples/Policies_CreateOrUpdate.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_Update",
        "description": "Update a Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/PolicyUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Policy"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Policies_Update1": {
            "$ref": "./examples/Policies_Update_200.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "operationId": "Policies_Delete",
        "description": "Delete a Policy",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "description": "The name of the policy",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Policies_Delete1": {
            "$ref": "./examples/Policies_Delete.json"
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AppAttachment": {
      "type": "object",
      "properties": {
        "appId": {
          "$ref": "#/definitions/ProtectedAppId",
          "description": "Fully qualified ARM ID of the application to protect"
        },
        "protectionState": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the attachment",
          "default": "Enabled"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation",
          "readOnly": true
        }
      },
      "description": "Definition of an application attachment",
      "required": [
        "appId"
      ]
    },
    "CustomRule": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the rule"
        },
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the custom rule. Default is Enabled",
          "default": "Enabled"
        },
        "action": {
          "$ref": "#/definitions/CustomRuleActionType",
          "description": "Describes what action to be applied when rule matches"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value",
          "minimum": 0,
          "maximum": 65535
        },
        "rateLimit": {
          "$ref": "#/definitions/RateLimit",
          "description": "Enables and configures a rate limit mechanism for the rule"
        },
        "matchConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRuleCondition"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "CustomRuleCondition[]",
          "description": "A list of conditions that must be met for the actions to be executed",
          "minItems": 1
        }
      },
      "description": "Defines contents of a web application rule",
      "required": [
        "action",
        "priority",
        "matchConditions"
      ]
    },
    "CustomRuleActionType": {
      "type": "string",
      "description": "Describes the override action to be applied when custom rule matches",
      "enum": [
        "Allow",
        "Deny",
        "Log",
        "Redirect",
        "AnomalyScoring"
      ],
      "x-ms-enum": {
        "name": "CustomRuleActionType",
        "modelAsString": true
      }
    },
    "CustomRuleCondition": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string",
          "description": "Discriminator property for CustomRuleCondition."
        },
        "negationCondition": {
          "type": "boolean",
          "description": "Whether this is negate the condition. Default is false",
          "default": false
        }
      },
      "description": "Defines a custom rule condition",
      "discriminator": "conditionType",
      "required": [
        "conditionType"
      ]
    },
    "EnabledState": {
      "type": "string",
      "description": "Describes wether an object (a policy, a custom rule, a managed rule set or other objects) is enabled or disabled",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "EnabledState",
        "modelAsString": true
      }
    },
    "Exclusion": {
      "type": "object",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/ExclusionMatchVariable",
          "description": "The variable to be excluded"
        },
        "selectorMatchOperator": {
          "$ref": "#/definitions/ExclusionSelectorMatchOperator",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this exclusion applies to"
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this exclusion applies to"
        },
        "ruleGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleGroupScope"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "RuleGroupScope[]",
          "description": "Exclusion scope. If not specified, then the exclusion is applied to the entire rule set",
          "minItems": 1
        }
      },
      "description": "Allow to exclude some variable satisfy the condition for the WAF check",
      "required": [
        "matchVariable",
        "selectorMatchOperator"
      ]
    },
    "ExclusionMatchVariable": {
      "type": "string",
      "description": "Variable variants that can be excluded when defining an Exclusion",
      "enum": [
        "RequestHeaderNames",
        "RequestCookieNames",
        "RequestArgNames",
        "RequestHeaderKeys",
        "RequestHeaderValues",
        "RequestCookieKeys",
        "RequestCookieValues",
        "RequestArgKeys",
        "RequestArgValues"
      ],
      "x-ms-enum": {
        "name": "ExclusionMatchVariable",
        "modelAsString": true
      }
    },
    "ExclusionSelectorMatchOperator": {
      "type": "string",
      "description": "Comparison operators variants that can be used with Exclusion variables when defining an Exclusion",
      "enum": [
        "Equals",
        "Contains",
        "StartsWith",
        "EndsWith",
        "EqualsAny"
      ],
      "x-ms-enum": {
        "name": "ExclusionSelectorMatchOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Equals_",
            "value": "Equals"
          },
          {
            "name": "Contains",
            "value": "Contains"
          },
          {
            "name": "StartsWith",
            "value": "StartsWith"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith"
          },
          {
            "name": "EqualsAny",
            "value": "EqualsAny"
          }
        ]
      }
    },
    "ExistsMatchCondition": {
      "type": "object",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/ExistsOperatorVariable",
          "description": "Variable to match against"
        },
        "matchValue": {
          "type": "string",
          "description": "This condition is met if the matchValue is one of the matchVariable's keys"
        }
      },
      "description": "Defines a custom rule condition of type Exists",
      "required": [
        "matchVariable",
        "matchValue"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Exists"
    },
    "ExistsOperatorVariable": {
      "type": "string",
      "enum": [
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "ExistsOperatorVariable",
        "modelAsString": true
      }
    },
    "GeoList": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GeoListProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "GeoList resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "GeoListListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoList"
          },
          "x-cadl-name": "GeoList[]",
          "description": "The GeoList items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a GeoList list operation.",
      "required": [
        "value"
      ]
    },
    "GeoListProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation",
          "readOnly": true
        },
        "geoList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "List of countries or regions"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The list of back references to policies that use this Geo list",
          "readOnly": true
        }
      },
      "description": "The GeoList properties",
      "required": [
        "geoList"
      ]
    },
    "GeoListResourceId": {
      "type": "string",
      "description": "A type definition that refers the id to an ARM resource.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.AppSecurity/GeoLists"
          }
        ]
      }
    },
    "GeoListUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/GeoListUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the GeoList."
    },
    "GeoListUpdateProperties": {
      "type": "object",
      "properties": {
        "geoList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "List of countries or regions"
        }
      },
      "description": "The updatable properties of the GeoList."
    },
    "GeoMatchCondition": {
      "type": "object",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/GeoOperatorVariable",
          "description": "Variable to match against"
        },
        "matchValue": {
          "$ref": "#/definitions/GeoListResourceId",
          "description": "Geo list fully qualified resource ID"
        }
      },
      "description": "Defines a custom rule condition of type Geo",
      "required": [
        "matchVariable",
        "matchValue"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Geo"
    },
    "GeoOperatorVariable": {
      "type": "string",
      "enum": [
        "ClientAddr"
      ],
      "x-ms-enum": {
        "name": "GeoOperatorVariable",
        "modelAsString": true
      }
    },
    "IpList": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IpListProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "IpList resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "IpListListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpList"
          },
          "x-cadl-name": "IpList[]",
          "description": "The IpList items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a IpList list operation.",
      "required": [
        "value"
      ]
    },
    "IpListProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation",
          "readOnly": true
        },
        "ipList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The list of IP addresses and ranges"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The list of back references to policies that use this IP list",
          "readOnly": true
        }
      },
      "description": "The IpList properties",
      "required": [
        "ipList"
      ]
    },
    "IpListResourceId": {
      "type": "string",
      "description": "A type definition that refers the id to an ARM resource.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.AppSecurity/IpLists"
          }
        ]
      }
    },
    "IpListUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/IpListUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the IpList."
    },
    "IpListUpdateProperties": {
      "type": "object",
      "properties": {
        "ipList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The list of IP addresses and ranges"
        }
      },
      "description": "The updatable properties of the IpList."
    },
    "IpMatchCondition": {
      "type": "object",
      "properties": {
        "matchVariable": {
          "$ref": "#/definitions/IpOperatorVariable",
          "description": "Variable to match against"
        },
        "matchValue": {
          "$ref": "#/definitions/IpListResourceId",
          "description": "IP list fully qualified resource ID"
        }
      },
      "description": "Defines a custom rule condition of type Ip",
      "required": [
        "matchVariable",
        "matchValue"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "Ip"
    },
    "IpOperatorVariable": {
      "type": "string",
      "enum": [
        "ClientAddr"
      ],
      "x-ms-enum": {
        "name": "IpOperatorVariable",
        "modelAsString": true
      }
    },
    "LogScrubbing": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the log scrubbing config. Default value is Enabled",
          "default": "Enabled"
        },
        "scrubbingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrubbingRule"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ScrubbingRule[]",
          "description": "The rules that are applied to the logs for scrubbing"
        }
      },
      "description": "Log scrubbing configuration, to allow certain variables to be scrubbed on WAF logs",
      "required": [
        "scrubbingRules"
      ]
    },
    "LogScrubbingUpdate": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the log scrubbing config. Default value is Enabled",
          "default": "Enabled"
        },
        "scrubbingRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrubbingRule"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ScrubbingRule[]",
          "description": "The rules that are applied to the logs for scrubbing"
        }
      },
      "description": "Log scrubbing configuration, to allow certain variables to be scrubbed on WAF logs"
    },
    "ManagedRuleSet": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the rule set. Default is Enabled",
          "default": "Enabled"
        },
        "ruleSetType": {
          "type": "string",
          "description": "Defines the rule set type to use"
        },
        "ruleSetVersion": {
          "type": "string",
          "description": "Defines the version of the rule set to use"
        },
        "ruleGroupOverrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleGroupOverride"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "RuleGroupOverride[]",
          "description": "Defines the rule group overrides to apply to the rule set"
        },
        "exclusions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Exclusion"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "Exclusion[]",
          "description": "The exclusions that are applied on the managed rule set"
        }
      },
      "description": "Defines a managed rule set",
      "required": [
        "ruleSetType",
        "ruleSetVersion"
      ]
    },
    "Policy": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        }
      },
      "description": "Policy resource definition",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "PolicyListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "x-cadl-name": "Policy[]",
          "description": "The Policy items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a Policy list operation.",
      "required": [
        "value"
      ]
    },
    "PolicyMode": {
      "type": "string",
      "enum": [
        "Prevention",
        "Detection"
      ],
      "x-ms-enum": {
        "name": "PolicyMode",
        "modelAsString": true
      }
    },
    "PolicyProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the policy. Default value is Enabled",
          "default": "Enabled"
        },
        "protectedApps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppAttachment"
          },
          "x-ms-identifiers": [
            "appId"
          ],
          "x-cadl-name": "AppAttachment[]",
          "description": "The list of applications this policy protects"
        },
        "wafPolicy": {
          "$ref": "#/definitions/WafPolicy",
          "description": "Describes the WAF policy"
        }
      },
      "description": "The Policy properties",
      "required": [
        "protectedApps",
        "wafPolicy"
      ]
    },
    "PolicySettings": {
      "type": "object",
      "properties": {
        "mode": {
          "$ref": "#/definitions/PolicyMode",
          "description": "The mode of the policy. Default value is Detection",
          "default": "Detection"
        },
        "redirectUrl": {
          "type": "string",
          "description": "If action type is redirect, this field represents redirect URL for the client",
          "default": ""
        },
        "customBlockResponseStatusCode": {
          "type": "integer",
          "format": "int64",
          "description": "If the action type is block, customer can override the response status code",
          "minimum": 0
        },
        "customBlockResponseBody": {
          "type": "string",
          "description": "If the action type is block, customer can override the response body. The body must be specified in base64 encoding",
          "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$"
        },
        "requestBodyCheck": {
          "$ref": "#/definitions/EnabledState",
          "description": "Describes if policy managed rules will inspect the request body content. Default value is Enable",
          "default": "Enabled"
        },
        "maxRequestBodySizeInKb": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum request body size in Kb for WAF",
          "minimum": 8
        },
        "fileUploadLimitInMb": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum file upload size in Mb for WAF",
          "minimum": 0
        }
      },
      "description": "Defines top-level policy settings"
    },
    "PolicyUpdate": {
      "type": "object",
      "properties": {
        "sku": {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/Sku",
          "description": "The SKU (Stock Keeping Unit) assigned to this resource."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/PolicyUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the Policy."
    },
    "PolicyUpdateProperties": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the policy. Default value is Enabled",
          "default": "Enabled"
        },
        "protectedApps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppAttachment"
          },
          "x-ms-identifiers": [
            "appId"
          ],
          "x-cadl-name": "AppAttachment[]",
          "description": "The list of applications this policy protects"
        },
        "wafPolicy": {
          "$ref": "#/definitions/WafPolicyUpdate",
          "description": "Describes the WAF policy"
        }
      },
      "description": "The updatable properties of the Policy."
    },
    "ProtectedAppId": {
      "type": "string",
      "description": "A type definition that refers the id to an ARM resource.",
      "format": "arm-id",
      "x-ms-arm-id-details": {
        "allowedResources": [
          {
            "type": "Microsoft.Network/applicationGateways"
          },
          {
            "type": "Microsoft.Network/applicationGateways/httpListeners"
          },
          {
            "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
          },
          {
            "type": "Microsoft.CDN/frontdoors"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "RateLimit": {
      "type": "object",
      "properties": {
        "limitType": {
          "$ref": "#/definitions/RateLimitType",
          "description": "Rate limiting is done based on the limit type"
        },
        "durationInMinutes": {
          "type": "integer",
          "format": "int64",
          "description": "Time window for resetting the rate limit count. Default is 1 minute",
          "minimum": 1,
          "maximum": 5,
          "default": 1
        },
        "maxRequestsPerSecond": {
          "type": "integer",
          "format": "int64",
          "description": "Max number of allowed requests per limit type, within the defined duration",
          "minimum": 1
        }
      },
      "description": "Describes the rate limit configuration of a rule",
      "required": [
        "limitType",
        "maxRequestsPerSecond"
      ]
    },
    "RateLimitType": {
      "type": "string",
      "enum": [
        "ClientIp",
        "Geo",
        "DestinationIp"
      ],
      "x-ms-enum": {
        "name": "RateLimitType",
        "modelAsString": true
      }
    },
    "RuleGroupOverride": {
      "type": "object",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "The managed rule group to override"
        },
        "groupOverride": {
          "$ref": "#/definitions/StateAndActionOverride",
          "description": "Group level override"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleOverride"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "RuleOverride[]",
          "description": "List of rule level overrides"
        }
      },
      "description": "Defines a managed rule group override setting",
      "required": [
        "ruleGroupName"
      ]
    },
    "RuleGroupScope": {
      "type": "object",
      "properties": {
        "ruleGroupName": {
          "type": "string",
          "description": "Relevant rule group name"
        },
        "rules": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Relevant rules within the specified rule group. If not specified, the scope is the entire rule group.",
          "minItems": 1
        }
      },
      "description": "Defines a rule group scope, which can be the entire rule group or a subset of rule within it",
      "required": [
        "ruleGroupName"
      ]
    },
    "RuleOverride": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "string",
          "description": "Identifier for the managed rule"
        },
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the managed rule or rule group"
        },
        "action": {
          "$ref": "#/definitions/WafActionType",
          "description": "Overrides the action to be applied when a rule matches"
        }
      },
      "description": "Defines a managed rule group override setting",
      "required": [
        "ruleId",
        "state"
      ]
    },
    "ScrubbingRule": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "Defines the state of log scrubbing rule. Default value is Enabled",
          "default": "Enabled"
        },
        "matchVariable": {
          "$ref": "#/definitions/ScrubbingRuleMatchVariable",
          "description": "The variable to be scrubbed from the logs"
        },
        "selectorMatchOperator": {
          "$ref": "#/definitions/ScrubbingRuleSelectorMatchOperator",
          "description": "When matchVariable is a collection, operate on the selector to specify which elements in the collection this rule applies to"
        },
        "selector": {
          "type": "string",
          "description": "When matchVariable is a collection, operator used to specify which elements in the collection this rule applies to"
        }
      },
      "description": "Allow certain variables to be scrubbed on WAF logs",
      "required": [
        "matchVariable",
        "selectorMatchOperator",
        "selector"
      ]
    },
    "ScrubbingRuleMatchVariable": {
      "type": "string",
      "enum": [
        "RequestHeaderNames",
        "RequestCookieNames",
        "RequestArgNames",
        "RequestPostArgNames",
        "RequestJSONArgNames",
        "RequestIPAddress"
      ],
      "x-ms-enum": {
        "name": "ScrubbingRuleMatchVariable",
        "modelAsString": true
      }
    },
    "ScrubbingRuleSelectorMatchOperator": {
      "type": "string",
      "enum": [
        "Equals",
        "EqualsAny"
      ],
      "x-ms-enum": {
        "name": "ScrubbingRuleSelectorMatchOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Equals_",
            "value": "Equals"
          },
          {
            "name": "EqualsAny",
            "value": "EqualsAny"
          }
        ]
      }
    },
    "SizeOperatorVariable": {
      "type": "string",
      "enum": [
        "QueryString",
        "RequestMethod",
        "RequestUri",
        "RequestBody",
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "SizeOperatorVariable",
        "modelAsString": true
      }
    },
    "SizeOrNumberOperator": {
      "type": "string",
      "enum": [
        "LessThan",
        "GreaterThan",
        "LessThanOrEqual",
        "GreaterThanOrEqual"
      ],
      "x-ms-enum": {
        "name": "SizeOrNumberOperator",
        "modelAsString": true
      }
    },
    "StateAndActionOverride": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the managed rule or rule group"
        },
        "action": {
          "$ref": "#/definitions/WafActionType",
          "description": "Overrides the action to be applied when a rule matches"
        }
      },
      "description": "Defines a managed rule or rule group override",
      "required": [
        "state"
      ]
    },
    "StringMatchCondition": {
      "type": "object",
      "properties": {
        "operator": {
          "$ref": "#/definitions/StringOperator",
          "description": "String operator to use when matching with the match values"
        },
        "matchVariable": {
          "$ref": "#/definitions/StringOperatorVariable",
          "description": "Variable to match against"
        },
        "selector": {
          "type": "string",
          "description": "Match against a specific key from RequestHeader, PostArgs and RequestCookies. Default is Null"
        },
        "matchValue": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The condition is met if any of the values match the variable with the given operator"
        },
        "transformations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformType"
          },
          "x-cadl-name": "TransformType[]",
          "description": "Describes what transforms applied before matching"
        }
      },
      "description": "Defines a custom rule condition of type String",
      "required": [
        "operator",
        "matchVariable",
        "matchValue"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/CustomRuleCondition"
        }
      ],
      "x-ms-discriminator-value": "String"
    },
    "StringNumberOperatorVariable": {
      "type": "string",
      "enum": [
        "QueryString",
        "RequestMethod",
        "RequestUri",
        "RequestBody",
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "StringNumberOperatorVariable",
        "modelAsString": true
      }
    },
    "StringOperator": {
      "type": "string",
      "enum": [
        "Equals",
        "Contains",
        "BeginsWith",
        "EndsWith",
        "Regex",
        "GeoMatch"
      ],
      "x-ms-enum": {
        "name": "StringOperator",
        "modelAsString": true,
        "values": [
          {
            "name": "Equals_",
            "value": "Equals"
          },
          {
            "name": "Contains",
            "value": "Contains"
          },
          {
            "name": "BeginsWith",
            "value": "BeginsWith"
          },
          {
            "name": "EndsWith",
            "value": "EndsWith"
          },
          {
            "name": "Regex",
            "value": "Regex"
          },
          {
            "name": "GeoMatch",
            "value": "GeoMatch"
          }
        ]
      }
    },
    "StringOperatorVariable": {
      "type": "string",
      "enum": [
        "QueryString",
        "RequestMethod",
        "RequestUri",
        "RequestBody",
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "StringOperatorVariable",
        "modelAsString": true
      }
    },
    "StringSizeNumberOperatorVariable": {
      "type": "string",
      "enum": [
        "QueryString",
        "RequestMethod",
        "RequestUri",
        "RequestBody",
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "StringSizeNumberOperatorVariable",
        "modelAsString": true
      }
    },
    "TransformType": {
      "type": "string",
      "enum": [
        "Uppercase",
        "Lowercase",
        "Trim",
        "UrlDecode",
        "UrlEncode",
        "RemoveNulls",
        "HtmlEntityDecode"
      ],
      "x-ms-enum": {
        "name": "TransformType",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2023-02-06-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2023_02_06_preview",
            "value": "2023-02-06-preview"
          }
        ]
      }
    },
    "WafActionType": {
      "type": "string",
      "enum": [
        "AnomalyScoring",
        "Allow",
        "Block",
        "Log",
        "Redirect"
      ],
      "x-ms-enum": {
        "name": "WafActionType",
        "modelAsString": true
      }
    },
    "WafPolicy": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the policy. Default value is Enabled",
          "default": "Enabled"
        },
        "policySettings": {
          "$ref": "#/definitions/PolicySettings",
          "description": "Describes settings for the policy"
        },
        "managedRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ManagedRuleSet[]",
          "description": "Describes the managedRules structure"
        },
        "customRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRule"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "CustomRule[]",
          "description": "The custom rules inside the policy",
          "maxItems": 100
        },
        "logScrubbing": {
          "$ref": "#/definitions/LogScrubbing",
          "description": "To scrub sensitive log fields"
        }
      },
      "description": "WAF Policy definition",
      "required": [
        "policySettings",
        "managedRules",
        "customRules"
      ]
    },
    "WafPolicyUpdate": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/EnabledState",
          "description": "The state of the policy. Default value is Enabled",
          "default": "Enabled"
        },
        "policySettings": {
          "$ref": "#/definitions/PolicySettings",
          "description": "Describes settings for the policy"
        },
        "managedRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedRuleSet"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ManagedRuleSet[]",
          "description": "Describes the managedRules structure"
        },
        "customRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomRule"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "CustomRule[]",
          "description": "The custom rules inside the policy",
          "maxItems": 100
        },
        "logScrubbing": {
          "$ref": "#/definitions/LogScrubbingUpdate",
          "description": "To scrub sensitive log fields"
        }
      },
      "description": "WAF Policy definition"
    },
    "WithSelectorOperatorVariable": {
      "type": "string",
      "enum": [
        "RequestHeader",
        "PostArgs",
        "RequestCookies"
      ],
      "x-ms-enum": {
        "name": "WithSelectorOperatorVariable",
        "modelAsString": true
      }
    }
  },
  "parameters": {}
}
