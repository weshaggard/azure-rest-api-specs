{
  "swagger": "2.0",
  "info": {
    "title": "Azure Network Fabric Management Service API",
    "description": "Self service experience for Azure Network Fabric API.",
    "version": "2022-01-15-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.ManagedNetworkFabric/operations": {
      "get": {
        "description": "Returns list of all operations.",
        "operationId": "Operations_List",
        "x-ms-examples": {
          "ListOperations": {
            "$ref": "./examples/ListOperations.json"
          }
        },
        "tags": [
          "Operations"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers/{networkFabricControllerName}": {
      "put": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Create",
        "summary": "Create Network fabric controller.",
        "description": "Implements Network Fabric Controller PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "CreateNetworkFabricController": {
            "$ref": "./examples/CreateNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricControllerName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Controller"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Get",
        "summary": "Gets a Network Fabric Controller.",
        "description": "Implements Network Fabric Controller GET method.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "GetNetworkFabricController": {
            "$ref": "./examples/GetNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricControllerName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Controller"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Update",
        "summary": "Updates a Network Fabric Controller.",
        "description": "API to update certain properties of the Network Fabric Controller resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "UpdateNetworkFabricController": {
            "$ref": "./examples/UpdateNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricControllerName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Controller"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Fabric Controller properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricController"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkFabricControllers"
        ],
        "operationId": "NetworkFabricControllers_Delete",
        "summary": "Deletes a Network Fabric Controller.",
        "description": "Implements Network Fabric Controller DELETE method.",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "DeleteNetworkFabricController": {
            "$ref": "./examples/DeleteNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricControllerName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Controller"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListByResourceGroup",
        "summary": "List NetworkFabricControllers by resource group.",
        "description": "Implements NetworkFabricControllers list by resource group GET method.",
        "x-ms-examples": {
          "ListByResourceGroupNetworkFabricController": {
            "$ref": "./examples/ListByResourceGroupNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricControllers under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricControllers": {
      "get": {
        "operationId": "NetworkFabricControllers_ListBySubscription",
        "summary": "List NetworkFabricControllers by subscription.",
        "description": "Implements NetworkFabricControllers list by subscription GET method.",
        "x-ms-examples": {
          "ListBySubscriptionNetworkFabricController": {
            "$ref": "./examples/ListBySubscriptionNetworkFabricController.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricControllers under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricControllersListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus/{networkDeviceSkuName}": {
      "put": {
        "tags": [
          "NetworkDeviceSkus"
        ],
        "operationId": "NetworkDeviceSkus_Create",
        "summary": "Create Network Device Sku.",
        "description": "Implements Network Device Sku PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkDeviceSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Device Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkDeviceSkus"
        ],
        "operationId": "NetworkDeviceSkus_Get",
        "summary": "Gets a Network Device Sku.",
        "description": "Implements Network Device Sku GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkDeviceSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Device Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkDeviceSkus"
        ],
        "operationId": "NetworkDeviceSkus_Update",
        "summary": "Updates a Network Device Sku.",
        "description": "API to update certain properties of the Network Device Sku resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkDeviceSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Device Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Device Sku properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSkuPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSku"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkDeviceSkus"
        ],
        "operationId": "NetworkDeviceSkus_Delete",
        "summary": "Deletes a Network Device Sku.",
        "description": "Implements Network Device Sku DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkDeviceSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Device Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus": {
      "get": {
        "operationId": "NetworkDeviceSkus_ListByResourceGroup",
        "summary": "List NetworkDeviceSkus by resource group.",
        "description": "Implements NetworkDeviceSkus list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkDeviceSkus under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkDeviceSkus": {
      "get": {
        "operationId": "NetworkDeviceSkus_ListBySubscription",
        "summary": "List NetworkDeviceSkus by subscription.",
        "description": "Implements NetworkDeviceSkus list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkDeviceSkus under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkDeviceSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus/{networkFabricSkuName}": {
      "put": {
        "tags": [
          "NetworkFabricSkus"
        ],
        "operationId": "NetworkFabricSkus_Create",
        "summary": "Create Network Fabric Sku.",
        "description": "Implements Network Fabric Sku PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkFabricSkus"
        ],
        "operationId": "NetworkFabricSkus_Get",
        "summary": "Gets a Network Fabric Sku.",
        "description": "Implements Network Fabric Sku GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkFabricSkus"
        ],
        "operationId": "NetworkFabricSkus_Update",
        "summary": "Updates a Network Fabric Sku.",
        "description": "API to update certain properties of the Network Fabric Sku resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Fabric Sku properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkuPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkFabricSkus"
        ],
        "operationId": "NetworkFabricSkus_Delete",
        "summary": "Deletes a Network Fabric Sku.",
        "description": "Implements Network Fabric Sku DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Fabric Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus": {
      "get": {
        "operationId": "NetworkFabricSkus_ListByResourceGroup",
        "summary": "List NetworkFabricSkus by resource group.",
        "description": "Implements NetworkFabricSkus list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricSkus under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkFabricSkus": {
      "get": {
        "operationId": "NetworkFabricSkus_ListBySubscription",
        "summary": "List NetworkFabricSkus by subscription.",
        "description": "Implements NetworkFabricSkus list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkFabricSkus under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRackSkus/{networkFabricSkuName}": {
      "put": {
        "tags": [
          "NetworkRackSkus"
        ],
        "operationId": "NetworkRackSkus_Create",
        "summary": "Create Network Rack Sku.",
        "description": "Implements Network Rack Sku PUT method.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Rack Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Request payload.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "get": {
        "tags": [
          "NetworkRackSkus"
        ],
        "operationId": "NetworkRackSkus_Get",
        "summary": "Gets a Network Rack Sku.",
        "description": "Implements Network Rack Sku GET method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Rack Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "NetworkRackSkus"
        ],
        "operationId": "NetworkRackSkus_Update",
        "summary": "Updates a Network Rack Sku.",
        "description": "API to update certain properties of the Network Rack Sku resource.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Rack Sku"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Network Rack Sku properties to update.",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSkuPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkFabricSku"
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "Tracking URL for long running operation.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      },
      "delete": {
        "tags": [
          "NetworkRackSkus"
        ],
        "operationId": "NetworkRackSkus_Delete",
        "summary": "Deletes a Network Rack Sku.",
        "description": "Implements Network Rack Sku DELETE method.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          },
          {
            "in": "path",
            "name": "networkFabricSkuName",
            "required": true,
            "type": "string",
            "description": "Name of the Network Rack Sku"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No Content"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedNetworkFabric/networkRackSkus": {
      "get": {
        "operationId": "NetworkRackSkus_ListByResourceGroup",
        "summary": "List NetworkRackSkus by resource group.",
        "description": "Implements NetworkRackSkus list by resource group GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/resourceGroupName"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkRackSkus under the resource group.",
            "schema": {
              "$ref": "#/definitions/NetworkRackSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.ManagedNetworkFabric/networkRackSkus": {
      "get": {
        "operationId": "NetworkRackSkus_ListBySubscription",
        "summary": "List NetworkRackSkus by subscription.",
        "description": "Implements NetworkRackSkus list by subscription GET method.",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/api-version"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all NetworkRackSkus under the subscription.",
            "schema": {
              "$ref": "#/definitions/NetworkRackSkusListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "NetworkFabricControllerProperties": {
      "type": "object",
      "properties": {
        "networkFabricControllerName": {
          "type": "string",
          "description": "networkFabricControllerName is the resource name."
        },
        "expressRouteConnections": {
          "type": "array",
          "description": "List of ExpressRouteConnections.",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          }
        },
        "ipv4AddressSpaces": {
          "type": "array",
          "description": "List of IPv4 Network Fabric Controller Address Spaces.",
          "items": {
            "$ref": "#/definitions/IPV4AddressSpaceInformation"
          }
        },
        "ipv6AddressSpaces": {
          "type": "array",
          "description": "List of IPv6 Network Fabric Controller Address Spaces.",
          "items": {
            "$ref": "#/definitions/IPV6AddressSpaceInformation"
          }
        },
        "operatationalState": {
          "description": "Gets the operational state of the resource.",
          "$ref": "#/definitions/operationalStateProperties",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Gets the provisioning state of the resource.",
          "$ref": "#/definitions/provisioningStateProperties",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricControllerName"
      ],
      "description": "NetworkFabricControllerProperties define the resource properties."
    },
    "NetworkFabricControllerPatchProperties": {
      "type": "object",
      "properties": {
        "expressRouteConnections": {
          "type": "array",
          "description": "List of ExpressRouteConnections.",
          "items": {
            "$ref": "#/definitions/ExpressRouteConnectionInformation"
          }
        }
      },
      "description": "NetworkFabricControllerPatchProperties define the patch resource properties."
    },
    "IPV4AddressSpaceInformation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "ipv4AddressSpace": {
          "type": "string",
          "description": "IPv4 Address Space in CIDR format. Example: 10.0.0.0/24."
        }
      },
      "description": "IPV4AddressSpace Information."
    },
    "IPV6AddressSpaceInformation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "ipV64AddressSpace": {
          "type": "string",
          "description": "IPv6 Address Space in CIDR format."
        }
      },
      "description": "IPV6AddressSpace Information."
    },
    "ExpressRouteConnectionInformation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "expressRouteCircuitId": {
          "type": "string",
          "description": "expressRouteCircuitId is the Azure Express Route circuit id."
        },
        "expressRouteCircuitServiceKey": {
          "type": "string",
          "description": "expressRouteCredential is the Azure Express Route circuit service key."
        }
      },
      "description": "ExpressRouteConnectionInformation defines the resource properties."
    },
    "NetworkFabricController": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricControllerProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The NetworkFabricController resource definition."
    },
    "NetworkFabricControllerPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricControllerPatchProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "description": "The NetworkFabricController patch resource definition."
    },
    "NetworkFabricControllersListResult": {
      "type": "object",
      "description": "List of NetworkFabricControllers.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkFabricController resources.",
          "items": {
            "$ref": "#/definitions/NetworkFabricController"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkDeviceSkuProperties": {
      "type": "object",
      "properties": {
        "networkDeviceSkuName": {
          "type": "string",
          "description": "networkDeviceSkuName is the resource name."
        },
        "manufacturer": {
          "type": "string",
          "description": "The network device manufacturer."
        },
        "model": {
          "type": "string",
          "description": "The network device model."
        },
        "operatingSystemCapabilities": {
          "description": "The supported OperatingSystemCapabilities array.",
          "type": "array",
          "items": {
            "description": "The supported OperatingSystemCapabilities model.",
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "The operatingSystem version."
              },
              "imageRef": {
                "type": "string",
                "description": "The operatingSystem imageRef."
              },
              "isCurrent": {
                "type": "boolean",
                "description": "If this operatingSystem is the currently installed one."
              }
            }
          }
        },
        "firmwareCapabilites": {
          "description": "The supported firmwareCapabilites array.",
          "type": "array",
          "items": {
            "description": "The supported firmwareCapabilites model.",
            "type": "object",
            "properties": {
              "version": {
                "type": "string",
                "description": "The firmware version."
              },
              "imageRef": {
                "type": "string",
                "description": "The firmware imageRef."
              },
              "isCurrent": {
                "type": "boolean",
                "description": "If this firmware is the currently installed one."
              }
            }
          }
        },
        "roleConfigurations": {
          "description": "The supported roleConfigurations array.",
          "type": "array",
          "items": {
            "description": "The supported roleConfigurations model.",
            "type": "object",
            "properties": {
              "roleType": {
                "type": "string",
                "description": "The roleType. Can be CE (Customer Edge) or TOR (Top-Of-Rack)."
              },
              "configuration": {
                "type": "object",
                "description": "The role configuration.",
                "properties": {
                  "configProtocol": {
                    "type": "string",
                    "description": "The ConfigProtocol. Can be openconfig."
                  },
                  "baseConfigReferenceUri": {
                    "type": "string",
                    "description": "The baseConfigReferenceUri. Can be a public URL."
                  }
                }
              }
            }
          }
        },
        "interfaces": {
          "description": "The hardware network interfaces array.",
          "type": "array",
          "items": {
            "description": "The supported interfaces model.",
            "type": "object",
            "properties": {
              "interfaceType": {
                "type": "string",
                "description": "The interfaceType."
              },
              "physicalPortDetails": {
                "type": "string",
                "description": "The PhysicalPortDetails."
              }
            }
          }
        },
        "managementInterfaces": {
          "description": "The hardware management network interfaces array.",
          "type": "array",
          "items": {
            "description": "The supported management interface model.",
            "type": "object",
            "properties": {
              "interfaceType": {
                "type": "string",
                "description": "The interfaceType."
              },
              "physicalPortDetails": {
                "type": "string",
                "description": "The PhysicalPortDetails."
              }
            }
          }
        },
        "networkDeviceHardwareLimits": {
          "type": "object",
          "description": "The supported networkDeviceHardwareLimits.",
          "properties": {
            "maxPhysicalInterfaces": {
              "type": "integer",
              "format": "int32",
              "description": "The maxPhysicalInterfaces limit."
            },
            "maxSubInterfaces": {
              "type": "integer",
              "format": "int32",
              "description": "The maxSubInterfaces limit."
            },
            "maxTunnelInterfaces": {
              "type": "integer",
              "format": "int32",
              "description": "The maxTunnelInterfaces limit."
            },
            "maxVrfs": {
              "type": "integer",
              "format": "int32",
              "description": "The maxVrfs limit."
            }
          }
        },
        "provisioningState": {
          "description": "Gets the provisioning state of the resource.",
          "$ref": "#/definitions/provisioningStateProperties",
          "readOnly": true
        }
      },
      "required": [
        "networkDeviceSkuName"
      ],
      "description": "NetworkDeviceSkuProperties define the resource properties."
    },
    "NetworkDeviceSkuPatchProperties": {
      "type": "object",
      "properties": {},
      "description": "NetworkDeviceSkuPatchProperties define the patch resource properties."
    },
    "NetworkDeviceSku": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkDeviceSkuProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The NetworkDeviceSku resource definition."
    },
    "NetworkDeviceSkuPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkDeviceSkuPatchProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "description": "The NetworkDeviceSku patch resource definition."
    },
    "NetworkDeviceSkusListResult": {
      "type": "object",
      "description": "List of NetworkDeviceSkus.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkDeviceSku resources.",
          "items": {
            "$ref": "#/definitions/NetworkDeviceSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkFabricSkuProperties": {
      "type": "object",
      "properties": {
        "networkFabricSkuName": {
          "type": "string",
          "description": "networkFabricSkuName is the resource name."
        },
        "maxComputeRacks": {
          "type": "integer",
          "format": "int32",
          "description": "The maxComputeRacks for the network fabric."
        },
        "aggregationRackSkuReferenceIds": {
          "description": "The aggregationRackSkuReferenceIds array of references to NetworkRackSkus.",
          "type": "array",
          "items": {
            "description": "The aggregationRackSkuReferenceIds model.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The NetworkRackSku's fully qualified resource id."
              }
            }
          }
        },
        "computeRackSkuReferenceIds": {
          "description": "The computeRackSkuReferenceIds array of references to NetworkRackSkus.",
          "type": "array",
          "items": {
            "description": "The computeRackSkuReferenceIds model.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The NetworkRackSku's fully qualified resource id."
              }
            }
          }
        },
        "provisioningState": {
          "description": "Gets the provisioning state of the resource.",
          "$ref": "#/definitions/provisioningStateProperties",
          "readOnly": true
        }
      },
      "required": [
        "networkFabricSkuName"
      ],
      "description": "NetworkFabricSkuProperties define the resource properties."
    },
    "NetworkFabricSkuPatchProperties": {
      "type": "object",
      "properties": {},
      "description": "NetworkFabricSkuPatchProperties define the patch resource properties."
    },
    "NetworkFabricSku": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricSkuProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The NetworkFabricSku resource definition."
    },
    "NetworkFabricSkuPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkFabricSkuPatchProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "description": "The NetworkFabricSku patch resource definition."
    },
    "NetworkFabricSkusListResult": {
      "type": "object",
      "description": "List of NetworkFabricSkus.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkFabricSku resources.",
          "items": {
            "$ref": "#/definitions/NetworkFabricSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "NetworkRackSkuProperties": {
      "type": "object",
      "properties": {
        "networkRackSkuName": {
          "type": "string",
          "description": "networkRackSkuName is the resource name."
        },
        "roleName": {
          "type": "string",
          "description": "roleName is the resource role. Example: Compute Rack."
        },
        "networkDeviceCount": {
          "type": "integer",
          "format": "int32",
          "description": "networkDeviceCount is the number of the network devices present on the rack."
        },
        "maximumServerCount": {
          "type": "integer",
          "format": "int32",
          "description": "MaximumServerCount is the max number of the servers present on the rack."
        },
        "maximumStorageCount": {
          "type": "integer",
          "format": "int32",
          "description": "MaximumServerCount is the max number of the storage devices present on the rack."
        },
        "maximumUplinks": {
          "type": "integer",
          "format": "int32",
          "description": "MaximumUplinks is the max number of uplink connections present on the rack."
        },
        "networkDevices": {
          "type": "array",
          "description": "The networkDevices present on the rack.",
          "items": {
            "description": "The networkDevice model.",
            "$ref": "#/definitions/NetworkRackDeviceProperties"
          }
        },
        "provisioningState": {
          "description": "Gets the provisioning state of the resource.",
          "$ref": "#/definitions/provisioningStateProperties",
          "readOnly": true
        }
      },
      "required": [
        "networkRackSkuName"
      ],
      "description": "NetworkRackSkuProperties define the resource properties."
    },
    "NetworkRackDeviceProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is the network device name. Example: ToR1."
        },
        "roleName": {
          "type": "string",
          "description": "roleName is the resource role. Example: ToR. [TBD]"
        },
        "rackSlot": {
          "type": "integer",
          "format": "int32",
          "description": "rackSlot is the device rack slot number on the rack."
        },
        "portMap": {
          "type": "array",
          "description": "portMap is the mapping of ports to devices on the rack.",
          "items": {
            "description": "PortMapping model.",
            "properties": {
              "name": {
                "type": "string",
                "description": "name is the port map / connector type identifier."
              },
              "connectorType": {
                "type": "string",
                "description": "ConnectorType is the physical connector description. Example: 25-26 ,32  10G SFP"
              },
              "connectedTo": {
                "type": "array",
                "description": "connectedTo is a list of other devices the port is connected to.",
                "items": {
                  "description": "connectedTo model.",
                  "properties": {
                    "deviceName": {
                      "type": "string",
                      "description": "deviceName is the name of the device connected to."
                    }
                  }
                }
              }
            }
          }
        },
        "configurationLimits": {
          "type": "object",
          "description": "configurationLimits are the network device's configuration limits.",
          "properties": {
            "maximumPEUpLinks": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumPEUpLinks on the network device for the rack."
            },
            "maximumNPBLinks": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumNPBLinks on the network device for the rack."
            },
            "maximumToRLinks": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumToRLinks on the network device for the rack."
            },
            "maximumStorageLinks": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumStorageLinks on the network device for the rack."
            },
            "maximumMgmtSwitchLinks": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumMgmtSwitchLinks on the network device for the rack."
            },
            "maximumPortBandwidthinGbps": {
              "type": "integer",
              "format": "int32",
              "description": "MaximumPortBandwidthinGbps on the network device for the rack."
            }
          }
        }
      },
      "description": "NetworkRackDeviceProperties define the network device properties."
    },
    "NetworkRackSkuPatchProperties": {
      "type": "object",
      "properties": {},
      "description": "NetworkRackSkuPatchProperties define the patch resource properties."
    },
    "NetworkRackSku": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkRackSkuProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "description": "The NetworkRackSku resource definition."
    },
    "NetworkRackSkuPatch": {
      "type": "object",
      "x-ms-azure-resource": true,
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Resource properties.",
          "$ref": "#/definitions/NetworkRackSkuPatchProperties"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Name"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Type"
        },
        "location": {
          "type": "string",
          "description": "The resource location",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v1/types.json#/definitions/systemData",
          "description": "The system data."
        }
      },
      "description": "The NetworkRackSku patch resource definition."
    },
    "NetworkRackSkusListResult": {
      "type": "object",
      "description": "List of NetworkRackSkus.",
      "properties": {
        "value": {
          "type": "array",
          "description": "List of NetworkRackSku resources.",
          "items": {
            "$ref": "#/definitions/NetworkRackSku"
          }
        },
        "nextLink": {
          "type": "string",
          "description": "Url to follow for getting next page of resources."
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorDefinition",
          "description": "The error details."
        }
      }
    },
    "ErrorDefinition": {
      "type": "object",
      "description": "Error definition.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "code": {
          "description": "Service specific error code which serves as the substatus for the HTTP error code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "Description of the error.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "Internal error details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDefinition"
          },
          "readOnly": true
        }
      }
    },
    "operation": {
      "type": "object",
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Resource Id"
        },
        "isDataAction": {
          "description": "Indicates whether the operation is data action or not.",
          "type": "boolean"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "type": "object",
      "description": "Lists the operations available.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "description": "Operation.",
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "provisioningStateProperties": {
      "type": "string",
      "description": "Common provisioning state for all the resources.",
      "enum": [
        "Provisioning",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "provisioningState"
      }
    },
    "operationalStateProperties": {
      "type": "string",
      "description": "Common operational state for all the resources.",
      "enum": [
        "Creating",
        "Configuring",
        "Updating",
        "Succeeded",
        "Failed"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "operationalState"
      }
    }
  },
  "parameters": {
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID. This is a GUID-formatted string (e.g. 00000000-0000-0000-0000-000000000000)"
    },
    "resourceGroupName": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "api-version": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to be used with the HTTP request. Supported-format: yyyy-MM-dd(+ '-preview,-alpha,-beta,-rc,-privatepreview'."
    }
  }
}
