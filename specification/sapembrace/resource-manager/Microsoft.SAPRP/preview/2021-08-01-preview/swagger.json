{
  "swagger": "2.0",
  "info": {
    "title": "SAPRP",
    "description": "SAPRP provider ",
    "version": "2021-08-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [ "https" ],
  "consumes": [ "application/json" ],
  "produces": [ "application/json" ],
  "security": [
    {
      "azure_auth": [ "user_impersonation" ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.SAPRP/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all the available API operations for SAPEmbrace.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.SAPRP/virtualinstances": {
      "get": {
        "tags": [
          "Instances"
        ],
        "description": "Returns list of virtualinstances by subscription registered within SAPRP.",
        "operationId": "Instances_ListBySubscription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstancesPageList"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SAPRP/virtualinstances": {
      "get": {
        "tags": [
          "Instances"
        ],
        "description": "Lists virtual instances in a resource group.",
        "operationId": "Instances_ListByResourceGroup",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- list of virtual instances retrieved",
            "schema": {
              "$ref": "#/definitions/InstancesPageList"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SAPRP/virtualinstances/{instanceName}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "description": "Get a virtual instance resource.",
        "operationId": "Instances_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VirtualInstanceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- virtual instance retrieved",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Instances"
        ],
        "description": "Create or update virtual instance resource.",
        "operationId": "Instances_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VirtualInstanceNameParameter"
          },
          {
            "in": "body",
            "name": "InstanceResource",
            "description": "Virtual instance resource data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Virtual instance created or updated successfully",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "201": {
            "description": "Created - Virtual instance created or updated started",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "202": {
            "description": "Accepted - Virtual instance created or updated started",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        }
      },
      "patch": {
        "tags": [
          "Instances"
        ],
        "description": "Update a virtual instance resource.",
        "operationId": "Instances_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VirtualInstanceNameParameter"
          },
          {
            "in": "body",
            "name": "ResourcePatchRequestBody",
            "description": "Virtual instance resource update data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePatchRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- resource updated",
            "schema": {
              "$ref": "#/definitions/InstanceResource"
            }
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Instances"
        ],
        "description": "Delete a virtual instance.",
        "operationId": "Instances_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/VirtualInstanceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Resource deleted"
          },
          "202": {
            "description": "Accepted - Resource deletion in progress"
          },
          "204": {
            "description": "Resourcce not found"
          },
          "default": {
            "description": "Resource provider error response about the failure.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    }
  },
  "definitions": {
    "ResourceBaseProperties": {
      "description": "Resource base properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Resource provisioning state.",
          "$ref": "#/definitions/ResourceState",
          "readOnly": true
        }
      }
    },
    "InstancesPageList": {
      "description": "List of resources page result.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of resources in current page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstanceResource"
          }
        },
        "nextLink": {
          "description": "Link to next page of resources.",
          "type": "string"
        }
      }
    },
    "InstanceResource": {
      "description": "Instance resource data.",
      "required": [
        "properties"
      ],
      "type": "object",
      "properties": {
        "properties": {
          "description": "Instance resource properties",
          "$ref": "#/definitions/InstanceProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "#/definitions/systemData"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "InstanceProperties": {
      "description": "Instance resource properties.",
      "required": [
        "instanceType"
      ],
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the resource.",
          "maxLength": 512,
          "type": "string"
        },
        "instanceType": {
          "description": "Instance type",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "$ref": "#/definitions/InstanceType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ResourceBaseProperties"
        }
      ]
    },
    "ParameterValue": {
      "description": "Value type to store parameter values.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Parameter value.",
          "type": "string"
        },
        "secureValue": {
          "description": "Secure parameter value.",
          "$ref": "#/definitions/SecureValueType"
        }
      }
    },
    "SecureValueType": {
      "description": "Secure value type to store key-vault details.",
      "type": "object",
      "properties": {
        "keyVaultId": {
          "description": "Key vault Id.",
          "type": "string"
        },
        "secretName": {
          "description": "Secret name.",
          "maxLength": 128,
          "type": "string"
        }
      }
    },
    "InstanceType": {
      "description": "Type of instances that can be created",
      "enum": [
        "Unknown",
        "SAP"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InstanceType",
        "modelAsString": true
      }
    },
    "ResourceState": {
      "description": "SAPEmbrace resource provisioning states.",
      "enum": [
        "NotSpecified",
        "Accepted",
        "Creating",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "ProvisioningResources",
        "InstallingApplication",
        "ConfiguringApplication",
        "MigratingApplicationData",
        "RunningValidations",
        "CreatingArtifacts",
        "DeletingArtifacts"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ResourceState",
        "modelAsString": true
      }
    },
    "ResourcePatchRequestBody": {
      "description": "Virtual instance resource patch request body.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Resource": {
      "description": "Common fields that are returned in the response for all Azure Resource Manager resources",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for an Azure Resource Manager tracked top level resource",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        }
      },
      "required": [
        "location"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "description": "The resource model definition for an Azure Resource Manager proxy resource. It will have everything other than required location and tags",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "properties": {
        "code": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "message": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "The error target."
        },
        "details": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorDetail"
          },
          "description": "The error details."
        },
        "additionalInfo": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorAdditionalInfo"
          },
          "description": "The error additional info."
        }
      }
    },
    "ErrorResponse": {
      "title": "Error response",
      "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations. (This also follows the OData error response format.).",
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/ErrorDetail"
        }
      }
    },
    "ErrorAdditionalInfo": {
      "properties": {
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The additional info type."
        },
        "info": {
          "readOnly": true,
          "type": "object",
          "description": "The additional info."
        }
      },
      "description": "The resource management error additional info."
    },
    "Operation": {
      "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the operation, as per Resource-Based Access Control (RBAC).",
          "type": "string",
          "readOnly": true
        },
        "isDataAction": {
          "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
          "type": "boolean",
          "readOnly": true
        },
        "display": {
          "description": "Localized display information for this particular operation.",
          "properties": {
            "provider": {
              "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
              "type": "string",
              "readOnly": true
            },
            "resource": {
              "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
              "type": "string",
              "readOnly": true
            },
            "operation": {
              "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
              "type": "string",
              "readOnly": true
            },
            "description": {
              "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "origin": {
          "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
          "type": "string",
          "readOnly": true,
          "enum": [
            "user",
            "system",
            "user,system"
          ],
          "x-ms-enum": {
            "name": "Origin",
            "modelAsString": true
          }
        },
        "actionType": {
          "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Internal"
          ],
          "x-ms-enum": {
            "name": "ActionType",
            "modelAsString": true
          }
        }
      }
    },
    "OperationListResult": {
      "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "description": "List of operations supported by the resource provider",
          "readOnly": true
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results (if there are any).",
          "readOnly": true
        }
      }
    },
    "systemData": {
      "description": "Metadata pertaining to creation and last modification of the resource.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "type": "string",
          "description": "The type of identity that created the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "type": "string",
          "description": "The type of identity that last modified the resource.",
          "enum": [
            "User",
            "Application",
            "ManagedIdentity",
            "Key"
          ],
          "x-ms-enum": {
            "name": "createdByType",
            "modelAsString": true
          }
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The type of identity that last modified the resource."
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The ID of the target subscription.",
      "minLength": 1
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The API version to use for this operation.",
      "minLength": 1
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group. The name is case insensitive.",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method"
    },
    "VirtualInstanceNameParameter": {
      "in": "path",
      "name": "instanceName",
      "description": "Virtual Instance name.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    }
  }
}
