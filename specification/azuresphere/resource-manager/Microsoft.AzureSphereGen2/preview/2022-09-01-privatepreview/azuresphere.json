{
  "swagger": "2.0",
  "info": {
    "title": "Azure Sphere Gen 2 Management",
    "version": "2022-09-01-privatepreview",
    "description": "Use these APIs to manage Azure Sphere Gen 2 in your Azure subscription"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Catalogs"
    },
    {
      "name": "ProvisioningPackages"
    },
    {
      "name": "Operations"
    }
  ],
  "paths": {
    "/providers/Microsoft.AzureSphereGen2/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get operations.": {
            "$ref": "./examples/GetOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphereGen2/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_ListBySubscription",
        "description": "List Catalog resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given subscription.": {
            "$ref": "./examples/GetCatalogsSub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphereGen2/catalogs/{catalogName}/provisioningPackages": {
      "get": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_ListBySubscription",
        "description": "List ProvisioningPackage resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackageListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphereGen2/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_ListByResourceGroup",
        "description": "List Catalog resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/CatalogListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given resource group.": {
            "$ref": "./examples/GetCatalogsRG.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphereGen2/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_Get",
        "description": "Get a Catalog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Get the details of a catalog.": {
            "$ref": "./examples/GetCatalog.json"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_CreateOrUpdate",
        "description": "Create a Catalog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Put the details of the catalog.": {
            "$ref": "./examples/PutCatalog.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_Update",
        "description": "Update a Catalog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/CatalogUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-examples": {
          "Patch a catalog.": {
            "$ref": "./examples/PatchCatalog.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogs"
        ],
        "operationId": "Catalogs_Delete",
        "description": "Delete a Catalog",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete a catalog.": {
            "$ref": "./examples/DeleteCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphereGen2/catalogs/{catalogName}/provisioningPackages": {
      "get": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_ListByCatalogs",
        "description": "List ProvisioningPackage resources by Catalogs",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/TopParameter"
          },
          {
            "$ref": "#/parameters/SkipTokenParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackageListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphereGen2/catalogs/{catalogName}/provisioningPackages/{provisioningPackageName}": {
      "get": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_Get",
        "description": "Get a ProvisioningPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/ProvisioningPackage.provisioningPackageName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackage"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      },
      "put": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_CreateOrUpdate",
        "description": "Create a ProvisioningPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/ProvisioningPackage.provisioningPackageName"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackage"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackage"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_Update",
        "description": "Update a ProvisioningPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/ProvisioningPackage.provisioningPackageName"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackageUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackage"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      },
      "delete": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_Delete",
        "description": "Delete a ProvisioningPackage",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/ProvisioningPackage.provisioningPackageName"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphereGen2/catalogs/{catalogName}/provisioningPackages/{provisioningPackageName}/format": {
      "post": {
        "tags": [
          "ProvisioningPackages"
        ],
        "operationId": "ProvisioningPackages_Format",
        "description": "Returns the formatted provisioning package.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/Catalog.catalogName"
          },
          {
            "$ref": "#/parameters/ProvisioningPackage.provisioningPackageName"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/ProvisioningPackageFormatResponse"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            },
            "x-ms-error-response": true
          }
        }
      }
    }
  },
  "definitions": {
    "AttestationPolicy": {
      "type": "string",
      "description": "Options for values on attestation policy.",
      "enum": [
        "Enforce",
        "Ignore"
      ],
      "x-ms-enum": {
        "name": "AttestationPolicy",
        "modelAsString": false
      }
    },
    "Catalog": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CatalogProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An Azure Sphere Catalog.",
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "CatalogListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Catalog"
          },
          "x-cadl-name": "Catalog[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a Catalog list operation."
    },
    "CatalogProperties": {
      "type": "object",
      "properties": {
        "policies": {
          "$ref": "#/definitions/Policies",
          "description": "Catalog level policies configuration."
        }
      },
      "description": "The properties of Azure Sphere Catalog."
    },
    "CatalogUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/CatalogUpdateProperties"
        }
      },
      "description": "The type used for update operations of the Catalog."
    },
    "CatalogUpdateProperties": {
      "type": "object",
      "properties": {
        "policies": {
          "$ref": "#/definitions/Policies",
          "description": "Catalog level policies configuration."
        }
      },
      "description": "The updatable properties of the Catalog."
    },
    "Policies": {
      "type": "object",
      "properties": {
        "attestation": {
          "$ref": "#/definitions/AttestationPolicy",
          "description": "Policy if device attestation is required before delivering a certificate.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "Catalog level policies.",
      "required": [
        "attestation"
      ]
    },
    "ProvisioningPackage": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProvisioningPackageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "An Azure Sphere provisioning package.",
      "required": [
        "name"
      ],
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "ProvisioningPackageFormatResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Provisioning package resource identifier."
        },
        "properties": {
          "type": "object",
          "properties": {
            "catalogName": {
              "type": "string",
              "description": "Name of the catalog where the devices will be provisioned and activated."
            },
            "location": {
              "type": "string",
              "description": "The location (region) of the catalog."
            },
            "baseEndpoint": {
              "type": "string",
              "description": "Base of the endpoint of the catalog used in the device for the different AS3 services including attestation, device insights and others."
            },
            "challenge": {
              "type": "string",
              "description": "Unique random GUID proof of possession challenge value used during provisioning and activation stages to validate the possession of the private key in the device."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "description": "An UTC creation date of the provisioning package."
            },
            "expirationDate": {
              "type": "string",
              "format": "date-time",
              "description": "An UTC expiration date of the provisioning package defined by the Catalog owner during provisioning package creation. New devices cannot be activated in the catalog after the expiration date."
            }
          },
          "description": "Properties of the provisioning package",
          "required": [
            "catalogName",
            "location",
            "baseEndpoint",
            "challenge",
            "createdDate",
            "expirationDate"
          ],
          "x-cadl-name": "(anonymous model)"
        }
      },
      "description": "Values of the format provisioning package response.",
      "required": [
        "id"
      ]
    },
    "ProvisioningPackageListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningPackage"
          },
          "x-cadl-name": "ProvisioningPackage[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a ProvisioningPackage list operation."
    },
    "ProvisioningPackageProperties": {
      "type": "object",
      "properties": {
        "challenge": {
          "type": "string",
          "description": "Proof of possession challenge value for device provisioning.",
          "readOnly": true
        },
        "baseEndpoint": {
          "type": "string",
          "description": "Base endpoint for data plane operations including devices to request a certificate with the attestation measurements and others.",
          "readOnly": true
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date for his bulk device registration.",
          "x-ms-mutability": [
            "read",
            "update"
          ]
        }
      },
      "description": "The properties of ProvisioningPackage."
    },
    "ProvisioningPackageUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/ProvisioningPackageUpdateProperties"
        }
      },
      "description": "The type used for update operations of the ProvisioningPackage."
    },
    "ProvisioningPackageUpdateProperties": {
      "type": "object",
      "properties": {},
      "description": "The updatable properties of the ProvisioningPackage."
    }
  },
  "parameters": {
    "Catalog.catalogName": {
      "name": "catalogName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ProvisioningPackage.provisioningPackageName": {
      "name": "provisioningPackageName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "x-ms-parameter-location": "method",
      "name": "$top",
      "in": "query",
      "required": false,
      "description": "The maximum number of results that should be included in the response",
      "type": "integer",
      "format": "int32"
    },
    "SkipTokenParameter": {
      "x-ms-parameter-location": "method",
      "name": "$skipToken",
      "in": "query",
      "required": false,
      "description": "A continuation token used to continue from a previous page of results",
      "type": "string"
    }
  }
}
