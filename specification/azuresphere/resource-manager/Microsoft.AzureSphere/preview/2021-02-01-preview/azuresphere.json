{
  "swagger": "2.0",
  "info": {
    "title": "AzureSphereManagementClient",
    "description": "Use these APIs to manage Azure Sphere in your Azure subscription",
    "version": "2021-02-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Lists all operations supported by the Microsoft.AzureSphere resource provider.",
        "operationId": "Operations_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of supported operations has been retrieved successfully.",
            "schema": {
              "$ref": "#/definitions/GetOperationsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of operations supported by Microsoft.AzureSphere resource provider.": {
            "$ref": "./examples/GetOperations.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureSphere/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Returns a list of catalogs for the given subscriptionId.",
        "operationId": "Catalogs_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Catalogs for the subscription details.",
            "schema": {
              "$ref": "#/definitions/GetCatalogsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given subscription.": {
            "$ref": "./examples/GetCatalogsSub.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Get a list of catalogs in the given resource group.",
        "operationId": "Catalogs_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The list of catalogs for the given resource group.",
            "schema": {
              "$ref": "#/definitions/GetCatalogsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get a list of catalogs for a given resource group.": {
            "$ref": "./examples/GetCatalogsRG.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}": {
      "get": {
        "tags": [
          "Catalogs"
        ],
        "description": "Returns a catalog by name.",
        "operationId": "Catalogs_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Catalog details.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the details of a catalog.": {
            "$ref": "./examples/GetCatalog.json"
          }
        }
      },
      "put": {
        "tags": [
          "Catalogs"
        ],
        "description": "Create or update a catalog.",
        "operationId": "Catalogs_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "Catalog",
            "description": "Catalog details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put the details of the catalog.": {
            "$ref": "./examples/PutCatalog.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Catalogs"
        ],
        "description": "Patch a catalog.",
        "operationId": "Catalogs_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "Catalog",
            "description": "Catalog details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CatalogPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Catalog"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a catalog.": {
            "$ref": "./examples/PatchCatalog.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Catalogs"
        ],
        "description": "Delete an catalog.",
        "operationId": "Catalogs_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "204": {
            "description": "Successful. Catalog does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a catalog.": {
            "$ref": "./examples/DeleteCatalog.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/cert": {
      "post": {
        "tags": [
          "Catalogs"
        ],
        "description": "Action to retrieve an Azure Sphere Catalog Cert.",
        "operationId": "Catalogs_Cert_Action",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "CertRequest",
            "description": "Cert request parameters.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure Sphere Catalog Cert details.",
            "schema": {
              "$ref": "#/definitions/CertResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the details of an Azure Sphere Catalog Cert.": {
            "$ref": "./examples/GetCatalogCert.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Returns the associated products of a given catalog by name.",
        "operationId": "Products_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Products for the catalog in the subscription.",
            "schema": {
              "$ref": "#/definitions/GetProductsResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Get products in a product.": {
            "$ref": "./examples/GetProducts.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/products/{productName}": {
      "get": {
        "tags": [
          "Products"
        ],
        "description": "Gets the associated product from a given catalog by name.",
        "operationId": "Products_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Product details.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the details of a product.": {
            "$ref": "./examples/GetProduct.json"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "description": "Create or update a product.",
        "operationId": "Products_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "name": "Product",
            "description": "Product details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Put a product.": {
            "$ref": "./examples/PutProduct.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Products"
        ],
        "description": "Patch a product.",
        "operationId": "Products_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          },
          {
            "name": "Product",
            "description": "Product details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Patch a product.": {
            "$ref": "./examples/PatchProduct.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "description": "Delete a product from a catalog.",
        "operationId": "Products_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ProductNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful."
          },
          "204": {
            "description": "Successful. Product does not exist."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Delete a product.": {
            "$ref": "./examples/DeleteProduct.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Gets the associated list of images from a given catalog by name.",
        "operationId": "Images_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Images list details.",
            "schema": {
              "$ref": "#/definitions/GetImagesResponse"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Get the details of a product.": {
            "$ref": "./examples/GetImages.json"
          }
        }
      },
      "put": {
        "tags": [
          "Images"
        ],
        "description": "Asynchronous create an image.",
        "operationId": "Images_Creat",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "name": "ImageFile",
            "description": "Image file.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageFile"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Image creation queued.",
            "schema": {
              "$ref": "#/definitions/OperationDetails"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Gets the URL where the specified image can be downloaded.",
        "operationId": "Image_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ImageIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The URL information where the image can be downloaded.",
            "schema": {
              "$ref": "#/definitions/ImageURL"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureSphere/catalogs/{catalogName}/images/{imageId}/metadata": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Gets the metadata of the image.",
        "operationId": "ImageMetadata_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/CatalogNameParameter"
          },
          {
            "$ref": "#/parameters/ImageIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The metadata information of the requested image.",
            "schema": {
              "$ref": "#/definitions/Image"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }


  },
  "definitions": {
    "Catalog": {
      "type": "object",
      "description": "Catalog details.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "Catalog properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogProperty"
        }
      }
    },
    "CatalogProperty": {
      "description": "Catalog properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Current provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "CertRequest": {
      "type": "object",
      "description": "Catalog Certificate request.",
      "properties": {
        "thumbprint": {
          "$ref": "#/definitions/Thumbprint"
        }
      }
    },
    "Thumbprint": {
      "description": "In this optional parameter, specify the SHA1 thumbprint of the public tenant CA certificate that will be returned.",
      "type": "string"
    },
    "CertResponse": {
      "type": "object",
      "description": "Catalog Certificate retrieval response.",
      "properties": {
        "certificate": {
          "description": "Bytes representation of the requested catalog certificate",
          "type": "string"
        }
      }
    },
    "CatalogPatch": {
      "type": "object",
      "description": "Catalog details",
      "properties": {
        "properties": {
          "description": "Catalog properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CatalogPatchProperty"
        }
      }
    },
    "CatalogPatchProperty": {
      "description": "Catalog patch properties.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the catalog."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the operation."
        },
        "display": {
          "description": "Display information of the operation.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationDisplay"
        }
      },
      "description": "Properties of an Operation."
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the operation."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the resource type the operation applies to."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly description of the operation."
        },
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Friendly name of the resource provider."
        }
      },
      "description": "Display information of an operation."
    },
    "GetOperationsResponse": {
      "type": "object",
      "description": "Result of a request to list all operations supported by Microsoft.AzureSphere resource provider.",
      "properties": {
        "value": {
          "description": "The list of available operations.",
          "type": "array",
          "readOnly": true,
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "The link used to get the next page of operations list, if any.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GetCatalogsResponse": {
      "description": "A collection of catalogs.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of catalog list.",
          "type": "string"
        },
        "value": {
          "description": "A collection of catalogs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Catalog"
          }
        }
      }
    },
    "Product": {
      "type": "object",
      "description": "Product details",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "systemData": {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData"
        },
        "properties": {
          "description": "Product properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductProperty"
        }
      }
    },
    "ProductProperty": {
      "description": "Product properties.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Product description.",
          "minLength": 1,
          "maxLength": 150,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        },
        "provisioningState": {
          "description": "Current provisioning state.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Image": {
      "type": "object",
      "description": "Image details",
      "properties": {
        "properties": {
          "description": "The image properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageProperty"
        }
      }
    },
    "ImageProperty": {
      "description": "Image properties.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the Image."
        },
        "name": {
          "type": "string",
          "description": "Image name."
        },
        "componentId": {
          "type": "string",
          "description": "Guid of the componentId of the Image."
        },
        "imageType": {
          "type": "integer",
          "format": "int64",
          "description": "Image type."
        },
        "imageLengthInBytes": {
          "type": "integer",
          "format": "int64",
          "description": "Image length in bytes."
        },
        "uncompressedSize": {
          "type": "integer",
          "format": "int64",
          "description": "Uncompressed size of the image."
        },
        "description": {
          "description": "Image description.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ImageFile": {
      "type": "string",
      "description": "Image file",
      "format": "binary"
    },
    "ImageURL": {
      "type": "object",
      "description": "Image URL details",
      "properties": {
        "properties": {
          "description": "The image URL properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ImageURLProperty"
        }
      }
    },
    "ImageURLProperty": {
      "description": "Image URL properties.",
      "type": "object",
      "properties": {
        "isSuccess": {
          "type": "string",
          "description": "If it was success or not."
        },
        "uri": {
          "type": "string",
          "description": "URI of the image"
        },
        "uriMessage": {
          "type": "string",
          "description": "Message for the URI of the image."
        }
      }
    },
    "OperationDetails": {
      "type": "object",
      "description": "Async Operation details",
      "properties": {
        "properties": {
          "description": "The async operation properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/OperationDetailsProperty"
        }
      }
    },
    "OperationDetailsProperty": {
      "description": "Async operation details properties.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier of the async operation."
        },
        "createdDateUTC": {
          "type": "string",
          "description": "Created date UTC."
        },
        "startedDateUTC": {
          "type": "string",
          "description": "Started date UTC."
        },
        "completedDateUTC": {
          "type": "string",
          "description": "Completed date UTC."
        },
        "state": {
          "type": "integer",
          "format": "int64",
          "description": "State of the image upload."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Location of the image."
        },
        "detailsLocation": {
          "type": "string",
          "description": "Details of the location of the image."
        },
        "error": {
          "description": "Error details.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "code": {
              "type": "string",
              "description": "Error code"
            },
            "message": {
              "type": "string",
              "description": "Details on the error"
            }
          }
        }
      }
    },
    "ProductPatch": {
      "type": "object",
      "description": "Product details",
      "properties": {
        "properties": {
          "description": "Product properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ProductPatchProperty"
        }
      }
    },
    "ProductPatchProperty": {
      "description": "Product patch properties.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the product."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags."
        },
        "description": {
          "type": "string",
          "description": "Product description.",
          "minLength": 1,
          "maxLength": 150,
          "pattern": "^[A-Za-z0-9-._ ]+$"
        }
      }
    },
    "GetProductsResponse": {
      "description": "The collection of products.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of the product collection.",
          "type": "string"
        },
        "value": {
          "description": "The collection of products.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "GetImagesResponse": {
      "description": "The collection of images.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of the images collection.",
          "type": "string"
        },
        "value": {
          "description": "The collection of images.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Image"
          }
        }
      }
    }

  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "CatalogNameParameter": {
      "name": "catalogName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the catalog.",
      "x-ms-parameter-location": "method"
    },
    "ProductNameParameter": {
      "name": "productName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of associated product.",
      "x-ms-parameter-location": "method"
    },
    "ImageIdParameter": {
      "name": "imageId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The identifier of the requested image.",
      "x-ms-parameter-location": "method"
    }
  }
}
