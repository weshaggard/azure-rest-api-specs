import "@cadl-lang/rest";
import "@azure-tools/cadl-providerhub";
import "@azure-tools/cadl-azure-core";
import "@azure-tools/cadl-azure-resource-manager";
import "@azure-tools/cadl-autorest";
import "@cadl-lang/versioning";

using Cadl.Versioning;
using Cadl.Http;
using Cadl.Rest;
using Azure.ResourceManager;
using Autorest;
using OpenAPI;

@armProviderNamespace()
@service({ title: "Microsoft.NetworkAnalytics"})
@versioned(Microsoft.NetworkAnalytics.Versions)
@versionedDependency(
  [
    [Microsoft.NetworkAnalytics.Versions.v2022_11_15_preview, Azure.ResourceManager.Versions.v1_0_Preview_1],
    [Microsoft.NetworkAnalytics.Versions.v2023_04_30, Azure.ResourceManager.Versions.v1_0_Preview_1],
    [Microsoft.NetworkAnalytics.Versions.v2023_03_31, Azure.ResourceManager.Versions.v1_0_Preview_1]
  ]
)
namespace Microsoft.NetworkAnalytics;

// note: this interface is required by ARM cadl-validation rule @azure-tools/cadl-azure-resource-manager/missing-operations-endpoint.
// We may run into issues naming our operation resource the same interface name.
interface Operations extends Azure.ResourceManager.Operations {}

enum Versions {
  v2022_11_15_preview: "2022-11-15-preview",
  v2023_03_31: "2023-03-31",
  v2023_04_30: "2023-04-30"
}

@doc("The DLH resource")
model DataLakeHouseResources is TrackedResource < StorageProperties > {
    @doc("DLH Resource name")
    @key("storageName")
    @segment("dataLakeHouses")
    @path
    name: string;
}

@doc("The Network Analytics Product Resource")
@singleton
model NetworkAnalyticsProducts is ProxyResource < NetworkAnalyticsProductsProperties > {
    @doc("The Network Analytics Product name")
    @key("networkAnalyticsProdcutName")
    @segment("networkAnalyticsProducts")
    @path
    name: string;
}

@doc("The Data Pipeline Resource")
model DataPipelines is TrackedResource <DataPipelinesProperties> {
    @doc("The Data Pipeline name")
    @key("dataPipelineName")
    @segment("dataPipelines")
    @path
    name: string;
}

@doc("Details of the NetworkAnalytics Storage.")
model StorageProperties {
    @doc("StorageProperties")
    @visibility("read")
    provisioningState ?: ProvisioningState;
    @doc("Managed Resource Group Configuration.")
    managedResourceGroupConfiguration?: ManagedResourceGroupConfiguration;
    @visibility("create")
    @doc("unique Identifier Name")
    uniqueIdentifierName: string;
    @doc("Common Storage Account Properties.")
    commonStorageAccountProperties: CommonStorageAccountProperties;
    @visibility("create")
    @doc("Bronze Storage Account Properties.")
    bronzeStorageAccountProperties?: BronzeStorageAccountProperties;
    @doc("Azure DataExplorer Cluster Properties.")
    azureDataExplorerProperties: AzureDataExplorerProperties;
}

@doc("Details of the Network Analytics Product Properties")
model NetworkAnalyticsProductsProperties {
    @doc("Network Analytics Product Properties provisioning state")
    @visibility("read")
    provisioningState ?: ProvisioningState;
    @doc("The Network Analytics product information")
    networkAnalyticsProductInformation: NetworkAnalyticsProductInformation;
}

@doc("Details of the Data Pipeline Properties")
model DataPipelinesProperties {
    @doc("Data pipeline provisioning state")
    @visibility("read")
    provisioningState ?: ProvisioningState;
    @doc("The Network Analytics Prodcut to which this pipeline belongs to")
    networkAnalyticsProductName: string;
    @doc("The release version of the corresponding product")
    networkAnalyticsProductRelease: string;
    @doc("The pipeline type")
    pipelineType: string,
    @doc("The DLH array")
    datalakeHouses: Array<string>,
    @doc("the data ingestion path")
    dataIngestionPath: string,
    @doc("The data pipeline configuration")
    dataPipelineConfiguration: DataPipelineConfiguration;
}

@doc("The status of the current operation.")
enum ProvisioningState {
    Succeeded,
    Failed,
    Canceled,
    Provisioning,
    Updating,
    Deleting,
    Accepted,
}

@doc("ManagedResourceGroup related Properties")
model ManagedResourceGroupConfiguration {
    @doc("Name of MRG")
    name: string;
    @doc("MRG location")
    location: string;
}

@doc("Network Analytics Product Information")
model NetworkAnalyticsProductInformation {
    @doc("Name of the Network Analytics Product")
    networkAnalyticsProductName: string;
    @doc("The releases for the product")
    @extension("x-ms-identifiers",[])
    networkAnalyticsProductReleases: Array<string>;
    @doc("The pipelines supported by the product")
    @extension("x-ms-identifiers",[])
    pipelines: Array<NetworkAnalyticsProductPipelineInformation>;
}

@doc("Data Pipeline Information")
model NetworkAnalyticsProductPipelineInformation {
    @doc("The pipeline name")
    pipelineName: string,
    @doc("The datasets supported by the pipeline")
    datasets: Array<string>
}

@doc("The data retention, dataset and compute configurations for the pipeline")
model DataPipelineConfiguration {
  @doc("The dataset retention configuration")
  @extension("x-ms-identifiers",[])
  dataRetention: Array<DataRetentionConfiguration>,
  @doc("The datasets configuration array ")
  @extension("x-ms-identifiers",[])
  datasets: Array<DatasetConfiguration>,
  @doc("Compute configuration")
  compute: ComputeConfig
}

@doc("The dataset retention config")
model DataRetentionConfiguration {
    @doc("The dataset resource name")
    resourceName: string,
    @doc("Dataset retention properties")
    resourceDataRetentionProperties: DataRetentionProperties;
}

@doc("The pipeline dataset information ")
model DatasetConfiguration {
    @doc("The name of the dataset")
    datasetName: string,
    @doc("The timestamp key for the dataset")
    timestampKey?: string,
    @doc("Columns to be masked")
    columnsToMask?: Array<string>
}

@doc("The compute configuration")
model ComputeConfig {
    @doc("The alert email in case of a failure")
    failureAlertEmail?: string;
}

@doc("Data Retention Properties")
model DataRetentionProperties {
    @doc("Retention days for the data")
    retentionDays: string 
}

@doc("Common Storage Account Properties.")
model CommonStorageAccountProperties {
    @visibility("create")
    @doc("Allow or disallow public network access to Storage Account.")
    publicNetworkAccess?: string;
    @doc("Network rule set")
    networkacls ?: NetworkAcls;
    @visibility("create")
    @doc("Blob Services")
    blobServices?: BlobServices;
    @doc("Private End Point")
    privateEndPoint?: PrivateEndPoint;
}

@doc("Configuration for BronzeAccount")
model BronzeStorageAccountProperties {
    @doc("Enables Secure File Transfer Protocol, if set to true")
    isSftpEnabled: boolean;
}

@doc("ADx Properties")
model AzureDataExplorerProperties {
    @visibility("create")
    @doc("Virtual Network Configuration")
    virtualNetworkConfiguration?: VirtualNetworkConfiguration;
    @doc("Kusto Cluster Principal Assignments")
    kustoClusterPrincipalAssignments: KustoClusterPrincipalAssignments;
}

enum KustoRoleType {
  AllDatabasesAdmin,
  AllDatabasesViewer
}

enum PrincipalTypeValues {
    App,
    Group,
    User,
}

@knownValues(PrincipalTypeValues)
scalar PrincipalType extends string

@doc("ADx Role assignments")
model KustoClusterPrincipalAssignments {
    @visibility("create")
    @doc("system Identity Name")
    systemIdentityName?: string;
    @doc("Kusto roles")
    role: KustoRoleType;
    @doc("Principal type.")
    principalType: PrincipalType;
}

@doc("Private End Point Resource")
model PrivateEndPoint {
    @doc("Resource ID of a subnet")
    subnetId: string;
    @doc("The private link resource service id")
    privateLinkServiceId: string;
    @doc("The private link resource group id.")
    groupIds: string[];
    @doc("The private link resource customDnsConfigs.")
    customDnsConfigs: string;
}

@doc("Resource Location")
scalar Location extends string

@doc("Virtual Network Rule")
model VirtualNetworkRule {
    @doc("Resource ID of a subnet")
    id: string;
    @doc("The action of virtual network rule.")
    action ?: string;
    @doc("Gets the state of virtual network rule.")
    state ?: string;
}

@doc("IP rule with specific IP or IP range in CIDR format.")
model IpRules {
    @doc("IP Rules Value")
    value ? : string;
    @doc("The action of virtual network rule.")
    action: string;
}

@doc("Resource Access Rules.")
model ResourceAccessRules {
    @doc("The tenant ID of resource.")
    tenantId: string;
    @doc("Resource ID")
    resourceId: string;
}

enum BypassType {
   None,
   Logging,
   Metrics,
   AzureServices
}

enum DefaultActionType {
  Allow,
  Deny
}

@doc("Network rule set")
model NetworkAcls {
    @doc("Specifies whether traffic is bypassed for Logging/Metrics/AzureServices")
    bypass: BypassType;
    @doc("Virtual Network Rule")
    virtualNetworkRule: VirtualNetworkRule[];
    @doc("IP rule with specific IP or IP range in CIDR format.")
    @extension("x-ms-identifiers", [])
    ipRules: IpRules[];
    @doc("Resource Access Rules.")
     @extension("x-ms-identifiers", [])
    resourceAccessRules: ResourceAccessRules[];
    @doc("Default Action")
    defaultActionType: DefaultActionType;
}

@doc("Restore Policy")
model RestorePolicy {
    @doc("Restore Policy enabled or disabled boolean value")
    enabled: boolean;
    @doc("Restore Policy in days")
    days: int32;
}

@doc("Configuration for creating Blob Service")
model BlobServices {
    @doc("Restore Policy")
    restorePolicy: RestorePolicy;
}

@doc("Virtual Network Configuration")
model VirtualNetworkConfiguration {
    @doc("Resource ID of a subnet")
    subnetId: string;
    @doc("Engine Public IP ID")
    enginePublicIpId: string;
    @doc("Data Management Public Ip ID")
    dataManagementPublicIpId: string;
}

@armResourceOperations
interface Storage extends ResourceOperations<DataLakeHouseResources, StorageProperties> { }

// Enable versioing of Model types once this is fixed https://github.com/Azure/cadl-azure/issues/2368
//@added(Microsoft.NetworkAnalytics.Versions.v2023_04_30)
@doc("A MetricsIngestionEndpoint Resource")
@singleton
model MetricsIngestionEndpointResources is ExtensionResource < MetricsIngestionEndpointProperties > {
  @doc("Metrics Ingestion Endpoint Resource Properties")
  @segment("metricsIngestionEndpoints")
  @key
  @path
  name: string;
}

// Enable versioing of Model types once this is fixed https://github.com/Azure/cadl-azure/issues/2368
//@added(Microsoft.NetworkAnalytics.Versions.v2023_04_30)
@doc("The resource-specific properties of a Metrics Ingestion Endpoint resource")
model MetricsIngestionEndpointProperties {
  @doc("Name of the EMIG region where the compute should be deployed")
  emigRegionName: string;

  @doc("Name of the Geneva account to which the metrics should be sent for this resource")
  genevaAccountName: string;

  @doc("URL of the Geneva stamp hosting that account")
  genevaStampUrl: string;

  @doc("Name of the namespace within the Geneva account")
  genevaNamespace: string;

  @visibility("read")
  @doc("Event Hub URL to which the metrics should be sent for this resource")
  eventHubUrl?: string;

  @visibility("read")
  @doc("Event Hub name to which the metrics should be sent for this resource")
  eventHubName?: string;

  @visibility("read")
  @doc("Key Vault URL where the connection string exists for authentication")
  keyVaultUrl?: string;

  @doc("The status of the last operation.")
  @visibility("read")
  provisioningState?: ProvisioningState;
}

@added(Versions.v2023_03_31)
@armResourceOperations(NetworkAnalyticsProducts)
interface NetworkAnalyticsProduct extends ResourceOperations<NetworkAnalyticsProducts, NetworkAnalyticsProductsProperties> {}

@added(Versions.v2023_03_31)
@armResourceOperations(DataPipelines)
interface DataPipeline extends ResourceOperations<DataPipelines, DataPipelinesProperties> {}

@added(Microsoft.NetworkAnalytics.Versions.v2023_04_30)
@armResourceOperations(MetricsIngestionEndpointProperties)
  interface MetricsIngestionEndpoints
    extends ExtensionResourceCreate <MetricsIngestionEndpointResources>,
      ExtensionResourceRead <MetricsIngestionEndpointResources>,
      ExtensionResourceUpdate<MetricsIngestionEndpointResources, MetricsIngestionEndpointProperties>,
      ExtensionResourceDelete<MetricsIngestionEndpointResources> {}