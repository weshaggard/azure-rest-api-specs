{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.NetworkAnalytics",
    "version": "2023-03-31",
    "x-cadl-generated": [
      {
        "emitter": "@azure-tools/cadl-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Storage"
    },
    {
      "name": "NetworkAnalyticsProduct"
    },
    {
      "name": "DataPipeline"
    }
  ],
  "paths": {
    "/providers/Microsoft.NetworkAnalytics/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkAnalytics/dataLakeHouses": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_ListBySubscription",
        "description": "List DataLakeHouseResources resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkAnalytics/dataPipelines": {
      "get": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_ListBySubscription",
        "description": "List DataPipelines resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataPipelinesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.NetworkAnalytics/networkAnalyticsProducts": {
      "get": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_ListBySubscription",
        "description": "List NetworkAnalyticsProducts resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProductsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataLakeHouses": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_ListByResourceGroup",
        "description": "List DataLakeHouseResources resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataLakeHouses/{storageName}": {
      "get": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Get",
        "description": "Get a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "DLH Resource name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_CreateOrUpdate",
        "description": "Create a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "DLH Resource name",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Update",
        "description": "Update a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "DLH Resource name",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResourcesUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataLakeHouseResources"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Storage"
        ],
        "operationId": "Storage_Delete",
        "description": "Delete a DataLakeHouseResources",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "storageName",
            "in": "path",
            "required": true,
            "description": "DLH Resource name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataPipelines": {
      "get": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_ListByResourceGroup",
        "description": "List DataPipelines resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataPipelinesListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/dataPipelines/{dataPipelineName}": {
      "get": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_Get",
        "description": "Get a DataPipelines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dataPipelineName",
            "in": "path",
            "required": true,
            "description": "The Data Pipeline name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataPipelines"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_CreateOrUpdate",
        "description": "Create a DataPipelines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dataPipelineName",
            "in": "path",
            "required": true,
            "description": "The Data Pipeline name",
            "type": "string"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/DataPipelines"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataPipelines"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/DataPipelines"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_Update",
        "description": "Update a DataPipelines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dataPipelineName",
            "in": "path",
            "required": true,
            "description": "The Data Pipeline name",
            "type": "string"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/DataPipelinesUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DataPipelines"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataPipeline"
        ],
        "operationId": "DataPipeline_Delete",
        "description": "Delete a DataPipelines",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "dataPipelineName",
            "in": "path",
            "required": true,
            "description": "The Data Pipeline name",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/networkAnalyticsProducts": {
      "get": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_ListByResourceGroup",
        "description": "List NetworkAnalyticsProducts resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProductsListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.NetworkAnalytics/networkAnalyticsProducts/default": {
      "get": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_Get",
        "description": "Get a NetworkAnalyticsProducts",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProducts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_CreateOrUpdate",
        "description": "Create a NetworkAnalyticsProducts",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProducts"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProducts"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            },
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProducts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_Update",
        "description": "Update a NetworkAnalyticsProducts",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProductsUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/NetworkAnalyticsProducts"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkAnalyticsProduct"
        ],
        "operationId": "NetworkAnalyticsProduct_Delete",
        "description": "Delete a NetworkAnalyticsProducts",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      }
    }
  },
  "definitions": {
    "AzureDataExplorerProperties": {
      "type": "object",
      "properties": {
        "virtualNetworkConfiguration": {
          "$ref": "#/definitions/VirtualNetworkConfiguration",
          "description": "Virtual Network Configuration",
          "x-ms-mutability": [
            "create"
          ]
        },
        "kustoClusterPrincipalAssignments": {
          "$ref": "#/definitions/KustoClusterPrincipalAssignments",
          "description": "Kusto Cluster Principal Assignments"
        }
      },
      "description": "ADx Properties",
      "required": [
        "kustoClusterPrincipalAssignments"
      ]
    },
    "BlobServices": {
      "type": "object",
      "properties": {
        "restorePolicy": {
          "$ref": "#/definitions/RestorePolicy",
          "description": "Restore Policy"
        }
      },
      "description": "Configuration for creating Blob Service",
      "required": [
        "restorePolicy"
      ]
    },
    "BronzeStorageAccountProperties": {
      "type": "object",
      "properties": {
        "isSftpEnabled": {
          "type": "boolean",
          "description": "Enables Secure File Transfer Protocol, if set to true"
        }
      },
      "description": "Configuration for BronzeAccount",
      "required": [
        "isSftpEnabled"
      ]
    },
    "BypassType": {
      "type": "string",
      "enum": [
        "None",
        "Logging",
        "Metrics",
        "AzureServices"
      ],
      "x-ms-enum": {
        "name": "BypassType",
        "modelAsString": true
      }
    },
    "CommonStorageAccountProperties": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Allow or disallow public network access to Storage Account.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "networkacls": {
          "$ref": "#/definitions/NetworkAcls",
          "description": "Network rule set"
        },
        "blobServices": {
          "$ref": "#/definitions/BlobServices",
          "description": "Blob Services",
          "x-ms-mutability": [
            "create"
          ]
        },
        "privateEndPoint": {
          "$ref": "#/definitions/PrivateEndPoint",
          "description": "Private End Point"
        }
      },
      "description": "Common Storage Account Properties."
    },
    "ComputeConfig": {
      "type": "object",
      "properties": {
        "failureAlertEmail": {
          "type": "string",
          "description": "The alert email in case of a failure"
        }
      },
      "description": "The compute configuration"
    },
    "DataLakeHouseResources": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "The DLH resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DataLakeHouseResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLakeHouseResources"
          },
          "x-cadl-name": "DataLakeHouseResources[]",
          "description": "The DataLakeHouseResources items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a DataLakeHouseResources list operation.",
      "required": [
        "value"
      ]
    },
    "DataLakeHouseResourcesUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/DataLakeHouseResourcesUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the DataLakeHouseResources."
    },
    "DataLakeHouseResourcesUpdateProperties": {
      "type": "object",
      "properties": {
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed Resource Group Configuration."
        },
        "commonStorageAccountProperties": {
          "$ref": "#/definitions/CommonStorageAccountProperties",
          "description": "Common Storage Account Properties."
        },
        "azureDataExplorerProperties": {
          "$ref": "#/definitions/AzureDataExplorerProperties",
          "description": "Azure DataExplorer Cluster Properties."
        }
      },
      "description": "The updatable properties of the DataLakeHouseResources."
    },
    "DataPipelineConfiguration": {
      "type": "object",
      "properties": {
        "dataRetention": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRetentionConfiguration"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "DataRetentionConfiguration[]",
          "description": "The dataset retention configuration"
        },
        "datasets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatasetConfiguration"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "DatasetConfiguration[]",
          "description": "The datasets configuration array "
        },
        "compute": {
          "$ref": "#/definitions/ComputeConfig",
          "description": "Compute configuration"
        }
      },
      "description": "The data retention, dataset and compute configurations for the pipeline",
      "required": [
        "dataRetention",
        "datasets",
        "compute"
      ]
    },
    "DataPipelines": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DataPipelinesProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "The Data Pipeline Resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "DataPipelinesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPipelines"
          },
          "x-cadl-name": "DataPipelines[]",
          "description": "The DataPipelines items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a DataPipelines list operation.",
      "required": [
        "value"
      ]
    },
    "DataPipelinesProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Data pipeline provisioning state",
          "readOnly": true
        },
        "networkAnalyticsProductName": {
          "type": "string",
          "description": "The Network Analytics Prodcut to which this pipeline belongs to"
        },
        "networkAnalyticsProductRelease": {
          "type": "string",
          "description": "The release version of the corresponding product"
        },
        "pipelineType": {
          "type": "string",
          "description": "The pipeline type"
        },
        "datalakeHouses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The DLH array"
        },
        "dataIngestionPath": {
          "type": "string",
          "description": "the data ingestion path"
        },
        "dataPipelineConfiguration": {
          "$ref": "#/definitions/DataPipelineConfiguration",
          "description": "The data pipeline configuration"
        }
      },
      "description": "Details of the Data Pipeline Properties",
      "required": [
        "networkAnalyticsProductName",
        "networkAnalyticsProductRelease",
        "pipelineType",
        "datalakeHouses",
        "dataIngestionPath",
        "dataPipelineConfiguration"
      ]
    },
    "DataPipelinesUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-cadl-name": "Record<string>",
          "description": "Resource tags."
        },
        "properties": {
          "$ref": "#/definitions/DataPipelinesUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the DataPipelines."
    },
    "DataPipelinesUpdateProperties": {
      "type": "object",
      "properties": {
        "networkAnalyticsProductName": {
          "type": "string",
          "description": "The Network Analytics Prodcut to which this pipeline belongs to"
        },
        "networkAnalyticsProductRelease": {
          "type": "string",
          "description": "The release version of the corresponding product"
        },
        "pipelineType": {
          "type": "string",
          "description": "The pipeline type"
        },
        "datalakeHouses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The DLH array"
        },
        "dataIngestionPath": {
          "type": "string",
          "description": "the data ingestion path"
        },
        "dataPipelineConfiguration": {
          "$ref": "#/definitions/DataPipelineConfiguration",
          "description": "The data pipeline configuration"
        }
      },
      "description": "The updatable properties of the DataPipelines."
    },
    "DataRetentionConfiguration": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The dataset resource name"
        },
        "resourceDataRetentionProperties": {
          "$ref": "#/definitions/DataRetentionProperties",
          "description": "Dataset retention properties"
        }
      },
      "description": "The dataset retention config",
      "required": [
        "resourceName",
        "resourceDataRetentionProperties"
      ]
    },
    "DataRetentionProperties": {
      "type": "object",
      "properties": {
        "retentionDays": {
          "type": "string",
          "description": "Retention days for the data"
        }
      },
      "description": "Data Retention Properties",
      "required": [
        "retentionDays"
      ]
    },
    "DatasetConfiguration": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string",
          "description": "The name of the dataset"
        },
        "timestampKey": {
          "type": "string",
          "description": "The timestamp key for the dataset"
        },
        "columnsToMask": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "Columns to be masked"
        }
      },
      "description": "The pipeline dataset information ",
      "required": [
        "datasetName"
      ]
    },
    "DefaultActionType": {
      "type": "string",
      "enum": [
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "DefaultActionType",
        "modelAsString": true
      }
    },
    "IpRules": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "IP Rules Value"
        },
        "action": {
          "type": "string",
          "description": "The action of virtual network rule."
        }
      },
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "required": [
        "action"
      ]
    },
    "KustoClusterPrincipalAssignments": {
      "type": "object",
      "properties": {
        "systemIdentityName": {
          "type": "string",
          "description": "system Identity Name",
          "x-ms-mutability": [
            "create"
          ]
        },
        "role": {
          "$ref": "#/definitions/KustoRoleType",
          "description": "Kusto roles"
        },
        "principalType": {
          "$ref": "#/definitions/PrincipalType",
          "description": "Principal type."
        }
      },
      "description": "ADx Role assignments",
      "required": [
        "role",
        "principalType"
      ]
    },
    "KustoRoleType": {
      "type": "string",
      "enum": [
        "AllDatabasesAdmin",
        "AllDatabasesViewer"
      ],
      "x-ms-enum": {
        "name": "KustoRoleType",
        "modelAsString": true
      }
    },
    "Location": {
      "type": "string",
      "description": "Resource Location"
    },
    "ManagedResourceGroupConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of MRG"
        },
        "location": {
          "type": "string",
          "description": "MRG location"
        }
      },
      "description": "ManagedResourceGroup related Properties",
      "required": [
        "name",
        "location"
      ]
    },
    "MetricsIngestionEndpointProperties": {
      "type": "object",
      "properties": {
        "emigRegionName": {
          "type": "string",
          "description": "Name of the EMIG region where the compute should be deployed"
        },
        "genevaAccountName": {
          "type": "string",
          "description": "Name of the Geneva account to which the metrics should be sent for this resource"
        },
        "genevaStampUrl": {
          "type": "string",
          "description": "URL of the Geneva stamp hosting that account"
        },
        "genevaNamespace": {
          "type": "string",
          "description": "Name of the namespace within the Geneva account"
        },
        "eventHubUrl": {
          "type": "string",
          "description": "Event Hub URL to which the metrics should be sent for this resource",
          "readOnly": true
        },
        "eventHubName": {
          "type": "string",
          "description": "Event Hub name to which the metrics should be sent for this resource",
          "readOnly": true
        },
        "keyVaultUrl": {
          "type": "string",
          "description": "Key Vault URL where the connection string exists for authentication",
          "readOnly": true
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "description": "The resource-specific properties of a Metrics Ingestion Endpoint resource",
      "required": [
        "emigRegionName",
        "genevaAccountName",
        "genevaStampUrl",
        "genevaNamespace"
      ]
    },
    "MetricsIngestionEndpointResources": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/MetricsIngestionEndpointProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "A MetricsIngestionEndpoint Resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkAcls": {
      "type": "object",
      "properties": {
        "bypass": {
          "$ref": "#/definitions/BypassType",
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices"
        },
        "virtualNetworkRule": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualNetworkRule"
          },
          "x-cadl-name": "VirtualNetworkRule[]",
          "description": "Virtual Network Rule"
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRules"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "IpRules[]",
          "description": "IP rule with specific IP or IP range in CIDR format."
        },
        "resourceAccessRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAccessRules"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "ResourceAccessRules[]",
          "description": "Resource Access Rules."
        },
        "defaultActionType": {
          "$ref": "#/definitions/DefaultActionType",
          "description": "Default Action"
        }
      },
      "description": "Network rule set",
      "required": [
        "bypass",
        "virtualNetworkRule",
        "ipRules",
        "resourceAccessRules",
        "defaultActionType"
      ]
    },
    "NetworkAnalyticsProductInformation": {
      "type": "object",
      "properties": {
        "networkAnalyticsProductName": {
          "type": "string",
          "description": "Name of the Network Analytics Product"
        },
        "networkAnalyticsProductReleases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The releases for the product",
          "x-ms-identifiers": []
        },
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAnalyticsProductPipelineInformation"
          },
          "x-ms-identifiers": [],
          "x-cadl-name": "NetworkAnalyticsProductPipelineInformation[]",
          "description": "The pipelines supported by the product"
        }
      },
      "description": "Network Analytics Product Information",
      "required": [
        "networkAnalyticsProductName",
        "networkAnalyticsProductReleases",
        "pipelines"
      ]
    },
    "NetworkAnalyticsProductPipelineInformation": {
      "type": "object",
      "properties": {
        "pipelineName": {
          "type": "string",
          "description": "The pipeline name"
        },
        "datasets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The datasets supported by the pipeline"
        }
      },
      "description": "Data Pipeline Information",
      "required": [
        "pipelineName",
        "datasets"
      ]
    },
    "NetworkAnalyticsProducts": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkAnalyticsProductsProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "description": "The Network Analytics Product Resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "NetworkAnalyticsProductsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkAnalyticsProducts"
          },
          "x-cadl-name": "NetworkAnalyticsProducts[]",
          "description": "The NetworkAnalyticsProducts items on this page"
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items",
          "x-cadl-name": "Rest.ResourceLocation"
        }
      },
      "description": "The response of a NetworkAnalyticsProducts list operation.",
      "required": [
        "value"
      ]
    },
    "NetworkAnalyticsProductsProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Network Analytics Product Properties provisioning state",
          "readOnly": true
        },
        "networkAnalyticsProductInformation": {
          "$ref": "#/definitions/NetworkAnalyticsProductInformation",
          "description": "The Network Analytics product information"
        }
      },
      "description": "Details of the Network Analytics Product Properties",
      "required": [
        "networkAnalyticsProductInformation"
      ]
    },
    "NetworkAnalyticsProductsUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkAnalyticsProductsUpdateProperties",
          "x-ms-client-flatten": true
        }
      },
      "description": "The type used for update operations of the NetworkAnalyticsProducts."
    },
    "NetworkAnalyticsProductsUpdateProperties": {
      "type": "object",
      "properties": {
        "networkAnalyticsProductInformation": {
          "$ref": "#/definitions/NetworkAnalyticsProductInformation",
          "description": "The Network Analytics product information"
        }
      },
      "description": "The updatable properties of the NetworkAnalyticsProducts."
    },
    "PrincipalType": {
      "type": "string",
      "enum": [
        "App",
        "Group",
        "User"
      ],
      "x-ms-enum": {
        "name": "PrincipalType",
        "modelAsString": true
      }
    },
    "PrincipalTypeValues": {
      "type": "string",
      "enum": [
        "App",
        "Group",
        "User"
      ],
      "x-ms-enum": {
        "name": "PrincipalTypeValues",
        "modelAsString": true
      }
    },
    "PrivateEndPoint": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "privateLinkServiceId": {
          "type": "string",
          "description": "The private link resource service id"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-cadl-name": "string[]",
          "description": "The private link resource group id."
        },
        "customDnsConfigs": {
          "type": "string",
          "description": "The private link resource customDnsConfigs."
        }
      },
      "description": "Private End Point Resource",
      "required": [
        "subnetId",
        "privateLinkServiceId",
        "groupIds",
        "customDnsConfigs"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The status of the current operation.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "ResourceAccessRules": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "resourceId": {
          "type": "string",
          "description": "Resource ID"
        }
      },
      "description": "Resource Access Rules.",
      "required": [
        "tenantId",
        "resourceId"
      ]
    },
    "RestorePolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Restore Policy enabled or disabled boolean value"
        },
        "days": {
          "type": "integer",
          "format": "int32",
          "description": "Restore Policy in days"
        }
      },
      "description": "Restore Policy",
      "required": [
        "enabled",
        "days"
      ]
    },
    "StorageProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "StorageProperties",
          "readOnly": true
        },
        "managedResourceGroupConfiguration": {
          "$ref": "#/definitions/ManagedResourceGroupConfiguration",
          "description": "Managed Resource Group Configuration."
        },
        "uniqueIdentifierName": {
          "type": "string",
          "description": "unique Identifier Name",
          "x-ms-mutability": [
            "create"
          ]
        },
        "commonStorageAccountProperties": {
          "$ref": "#/definitions/CommonStorageAccountProperties",
          "description": "Common Storage Account Properties."
        },
        "bronzeStorageAccountProperties": {
          "$ref": "#/definitions/BronzeStorageAccountProperties",
          "description": "Bronze Storage Account Properties.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "azureDataExplorerProperties": {
          "$ref": "#/definitions/AzureDataExplorerProperties",
          "description": "Azure DataExplorer Cluster Properties."
        }
      },
      "description": "Details of the NetworkAnalytics Storage.",
      "required": [
        "uniqueIdentifierName",
        "commonStorageAccountProperties",
        "azureDataExplorerProperties"
      ]
    },
    "Versions": {
      "type": "string",
      "enum": [
        "2022-11-15-preview",
        "2023-03-31",
        "2023-04-30"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2022_11_15_preview",
            "value": "2022-11-15-preview"
          },
          {
            "name": "v2023_03_31",
            "value": "2023-03-31"
          },
          {
            "name": "v2023_04_30",
            "value": "2023-04-30"
          }
        ]
      }
    },
    "VirtualNetworkConfiguration": {
      "type": "object",
      "properties": {
        "subnetId": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "enginePublicIpId": {
          "type": "string",
          "description": "Engine Public IP ID"
        },
        "dataManagementPublicIpId": {
          "type": "string",
          "description": "Data Management Public Ip ID"
        }
      },
      "description": "Virtual Network Configuration",
      "required": [
        "subnetId",
        "enginePublicIpId",
        "dataManagementPublicIpId"
      ]
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet"
        },
        "action": {
          "type": "string",
          "description": "The action of virtual network rule."
        },
        "state": {
          "type": "string",
          "description": "Gets the state of virtual network rule."
        }
      },
      "description": "Virtual Network Rule",
      "required": [
        "id"
      ]
    }
  },
  "parameters": {}
}
