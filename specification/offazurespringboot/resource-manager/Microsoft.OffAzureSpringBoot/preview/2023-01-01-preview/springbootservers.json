{
  "swagger": "2.0",
  "info": {
    "title": "OffAzureSpringBoot",
    "description": "The Microsoft.OffAzureSpringBoot Rest API spec.",
    "version": "2023-01-01-preview"
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers/{springbootserversName}": {
      "get": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_Get",
        "description": "List springbootservers resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootserversNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootservers_Get_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_Get_MaximumSet_Gen.json"
          },
          "springbootservers_Get_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_CreateOrUpdate",
        "description": "Create springbootservers resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootserversNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootservers",
            "description": "Create a springbootservers payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "201": {
            "description": "Creates the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootservers_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "springbootservers_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_Delete",
        "description": "Delete springbootservers resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootserversNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "204": {
            "description": "Deletes the springbootservers resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootservers_Delete_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_Delete_MaximumSet_Gen.json"
          },
          "springbootservers_Delete_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_Update",
        "description": "Update springbootservers resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootserversNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootservers",
            "description": "Update a springbootservers payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootserversPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "201": {
            "description": "Updates the springbootservers resource.",
            "schema": {
              "$ref": "#/definitions/springbootserversModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootservers_Update_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_Update_MaximumSet_Gen.json"
          },
          "springbootservers_Update_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_Update_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers": {
      "get": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_ListByResourceGroup",
        "description": "List springbootservers resource by resourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootservers under the resource group.",
            "schema": {
              "$ref": "#/definitions/springbootserversListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootservers_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "springbootservers_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootservers": {
      "get": {
        "tags": [
          "springbootservers"
        ],
        "operationId": "springbootservers_ListBySubscription",
        "description": "List springbootservers resource by subscription",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootservers under the subscription.",
            "schema": {
              "$ref": "#/definitions/springbootserversListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootservers_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/springbootservers_ListBySubscription_MaximumSet_Gen.json"
          },
          "springbootservers_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/springbootservers_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "springbootserversProperties": {
      "type": "object",
      "required": [
        "server"
      ],
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Target server port for remote login"
        },
        "server": {
          "type": "string",
          "description": "Server is the target server name or ip address to discover of SpringBootServer."
        },
        "machineArmId": {
          "type": "string",
          "description": "The machine Id from ARM"
        },
        "totalApps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of apps been discovered"
        },
        "springBootApps": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of spring boot apps been discovered"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "description": "The springbootservers resource definition."
    },
    "springbootserversModel": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/springbootserversProperties",
          "description": "The springbootservers resource definition."
        },
        "extendedLocation": {
          "type": "object",
          "description": "The extended location definition.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The springbootservers envelope resource definition."
    },
    "springbootserversPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The springbootservers resource patch definition."
    },
    "springbootserversListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/springbootserversModel"
          },
          "description": "The springbootsites list."
        },
        "nextLink": {
          "type": "string",
          "description": "The link used to get the next page of springbootservers resources list."
        }
      },
      "description": "The springbootservers list resource definition."
    }
  },
  "parameters": {
    "SiteNameParameter": {
      "x-ms-parameter-location": "client",
      "name": "siteName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The springbootsites name."
    },
    "springbootserversNameParameter": {
      "x-ms-parameter-location": "client",
      "name": "springbootserversName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The springbootservers name."
    }
  }
}
