{
  "swagger": "2.0",
  "info": {
    "title": "OffAzureSpringBoot",
    "description": "The Microsoft.OffAzureSpringBoot Rest API spec.",
    "version": "2023-01-01-preview"
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps/{springbootappsName}": {
      "get": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_Get",
        "description": "Get a springbootapps resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootappsNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootapps_Get_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_Get_MaximumSet_Gen.json"
          },
          "springbootapps_Get_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_CreateOrUpdate",
        "description": "Create a springbootapps resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootappsNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootapps",
            "description": "Create a springbootapps payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "201": {
            "description": "Creates the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootapps_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "springbootapps_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_Delete",
        "description": "Delete a springbootapps resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootappsNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "204": {
            "description": "Deletes the springbootapps resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootapps_Delete_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_Delete_MaximumSet_Gen.json"
          },
          "springbootapps_Delete_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_Update",
        "description": "Update a springbootapps resource.",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootappsNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootapps",
            "description": "Update a springbootapps payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootappsPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "201": {
            "description": "Updates the springbootapps resource.",
            "schema": {
              "$ref": "#/definitions/springbootappsModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootapps_Update_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_Update_MaximumSet_Gen.json"
          },
          "springbootapps_Update_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_Update_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps": {
      "get": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_ListByResourceGroup",
        "description": "List springbootapps resource by resourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootapps under the resource group.",
            "schema": {
              "$ref": "#/definitions/springbootappsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootapps_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "springbootapps_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{siteName}/springbootapps": {
      "get": {
        "tags": [
          "springbootapps"
        ],
        "operationId": "springbootapps_ListBySubscription",
        "description": "List springbootapps resource by subscription",
        "parameters": [
          {
            "$ref": "#/parameters/SiteNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootapps under the subscription.",
            "schema": {
              "$ref": "#/definitions/springbootappsListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootapps_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/springbootapps_ListBySubscription_MaximumSet_Gen.json"
          },
          "springbootapps_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/springbootapps_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "springbootappsProperties": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string",
          "description": "The name of SpringBootApp."
        },
        "appPort": {
          "type": "integer",
          "format": "int32",
          "description": "The application port."
        },
        "appType": {
          "type": "string",
          "description": "The application type, whether it is a SpringBoot app."
        },
        "applicationConfigurations": {
          "type": "array",
          "description": "The application configuration file list.",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "The application config file name."
              },
              "value": {
                "type": "string",
                "description": "The application config file content, only contains config keys."
              }
            },
            "required": [
              "key",
              "value"
            ]
          }
        },
        "bindingPorts": {
          "type": "array",
          "description": "The application binding port list.",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "buildJdkVersion": {
          "type": "string",
          "description": "The jdk version in build."
        },
        "certificates": {
          "type": "array",
          "description": "The certificate file list.",
          "items": {
            "type": "string"
          }
        },
        "checksum": {
          "type": "string",
          "description": "The checksum of jar file."
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The dependency list."
        },
        "environments": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The environment variable list."
        },
        "instanceCount": {
          "type": "integer",
          "format": "int32",
          "description": "The total instance count the app deployed."
        },
        "jarFileLocation": {
          "type": "string",
          "description": "The jar file location on the server."
        },
        "jvmMemoryInMB": {
          "type": "integer",
          "format": "int32",
          "description": "The jvm heap memory allocated."
        },
        "jvmOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The jvm options."
        },
        "miscs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": {
                "type": "string",
                "description": "The miscs. key."
              },
              "value": {
                "type": "string",
                "description": "The miscs. value."
              }
            },
            "required": [
              "key",
              "value"
            ]
          },
          "description": "The other types of date collected."
        },
        "runtimeJdkVersion": {
          "type": "string",
          "description": "The jdk version installed on server"
        },
        "servers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The server list the app installed"
        },
        "machineArmIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The machine ARM id list the app belongs to."
        },
        "siteName": {
          "type": "string",
          "description": "The site name."
        },
        "springBootVersion": {
          "type": "string",
          "description": "The spring boot version."
        },
        "staticContentLocations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The static content location list."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      },
      "description": "The springbootapps resource definition."
    },
    "springbootappsModel": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/springbootappsProperties",
          "description": "The springbootapps resource definition."
        },
        "extendedLocation": {
          "type": "object",
          "description": "The extended location definition.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The springbootapps envelope resource definition."
    },
    "springbootappsPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The springbootapps resource patch definition."
    },
    "springbootappsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/springbootappsModel"
          },
          "description": "The springbootsites list."
        },
        "nextLink": {
          "type": "string",
          "description": "The link used to get the next page of springbootapps resources list."
        }
      },
      "description": "The springbootapps list resource definition."
    }
  },
  "parameters": {
    "SiteNameParameter": {
      "x-ms-parameter-location": "client",
      "name": "siteName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The springbootsites name."
    },
    "springbootappsNameParameter": {
      "x-ms-parameter-location": "client",
      "name": "springbootappsName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The springbootapps name."
    }
  }
}
