{
  "swagger": "2.0",
  "info": {
    "title": "OffAzureSpringBoot",
    "description": "The Microsoft.OffAzureSpringBoot Rest API spec.",
    "version": "2023-01-01-preview"
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{springbootsitesName}": {
      "get": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_Get",
        "description": "Get a springbootsites resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootsitesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootsites_Get_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_Get_MaximumSet_Gen.json"
          },
          "springbootsites_Get_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_Get_MinimumSet_Gen.json"
          }
        }
      },
      "put": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_CreateOrUpdate",
        "description": "Create a springbootsites resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootsitesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootsites",
            "description": "Create a springbootsites payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "201": {
            "description": "Creates the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootsites_CreateOrUpdate_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_CreateOrUpdate_MaximumSet_Gen.json"
          },
          "springbootsites_CreateOrUpdate_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_CreateOrUpdate_MinimumSet_Gen.json"
          }
        }
      },
      "delete": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_Delete",
        "description": "Delete a springbootsites resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootsitesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "204": {
            "description": "Deletes the springbootsites resource."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootsites_Delete_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_Delete_MaximumSet_Gen.json"
          },
          "springbootsites_Delete_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_Delete_MinimumSet_Gen.json"
          }
        }
      },
      "patch": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_Update",
        "description": "Update a springbootsites resource.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/springbootsitesNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "name": "springbootsites",
            "description": "Update a springbootsites payload.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/springbootsitesPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updates the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "201": {
            "description": "Updates the springbootsites resource.",
            "schema": {
              "$ref": "#/definitions/springbootsitesModel"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootsites_Update_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_Update_MaximumSet_Gen.json"
          },
          "springbootsites_Update_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_Update_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites/{springbootsitesName}/RefreshSite": {
      "post": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_TriggerRefreshSite",
        "description": "Trigger refresh springbootsites action",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/springbootsitesNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Trigger refresh success"
          },
          "202": {
            "description": "Trigger refresh success"
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "springbootsites_TriggerRefreshSite_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_TriggerRefreshSite_MaximumSet_Gen.json"
          },
          "springbootsites_TriggerRefreshSite_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_TriggerRefreshSite_MinimumSet_Gen.json"
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "location"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OffAzureSpringBoot/springbootsites": {
      "get": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_ListByResourceGroup",
        "description": "List springbootsites resource by resourceGroup.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootsites under the resource group.",
            "schema": {
              "$ref": "#/definitions/springbootsitesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootsites_ListByResourceGroup_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_ListByResourceGroup_MaximumSet_Gen.json"
          },
          "springbootsites_ListByResourceGroup_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_ListByResourceGroup_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.OffAzureSpringBoot/springbootsites": {
      "get": {
        "tags": [
          "springbootsites"
        ],
        "operationId": "springbootsites_ListBySubscription",
        "description": "List springbootsites resource by subscription",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Lists all springbootsites under the subscription.",
            "schema": {
              "$ref": "#/definitions/springbootsitesListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "springbootsites_ListBySubscription_MaximumSet_Gen": {
            "$ref": "./examples/springbootsites_ListBySubscription_MaximumSet_Gen.json"
          },
          "springbootsites_ListBySubscription_MinimumSet_Gen": {
            "$ref": "./examples/springbootsites_ListBySubscription_MinimumSet_Gen.json"
          }
        }
      }
    },
    "/providers/Microsoft.OffAzureSpringBoot/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "List operations.",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Describe the result of a successful operation.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderOperationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "Operations_List_MaximumSet_Gen": {
            "$ref": "./examples/Operations_List_MaximumSet_Gen.json"
          },
          "Operations_List_MinimumSet_Gen": {
            "$ref": "./examples/Operations_List_MinimumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "springbootsitesProperties": {
      "type": "object",
      "description": "The springbootsites resource definition.",
      "properties": {
        "masterSiteId": {
          "type": "string",
          "description": "The master site ID from Azure Migrate."
        },
        "migrateProjectId": {
          "type": "string",
          "description": "The migrate project ID from Azure Migrate."
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true
          }
        }
      }
    },
    "springbootsitesModel": {
      "type": "object",
      "x-ms-azure-resource": true,
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/springbootsitesProperties",
          "description": "The springbootsites resource definition."
        },
        "extendedLocation": {
          "type": "object",
          "description": "The extended location definition.",
          "properties": {
            "type": {
              "type": "string",
              "description": "The extended location type."
            },
            "name": {
              "type": "string",
              "description": "The extended location name."
            }
          }
        }
      },
      "required": [
        "location"
      ],
      "description": "The springbootsites envelope resource definition."
    },
    "springbootsitesPatch": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        }
      },
      "description": "The springbootsites resource patch definition."
    },
    "springbootsitesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/springbootsitesModel"
          },
          "description": "The springbootsites list."
        },
        "nextLink": {
          "type": "string",
          "description": "The link used to get the next page of springbootsites resources list."
        }
      },
      "description": "The springbootsites list resource definition."
    },
    "ResourceProviderOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceProviderOperation"
          },
          "description": "The resource provider operation list."
        },
        "nextLink": {
          "type": "string",
          "description": "The link used to get the next page of resource operation list."
        }
      },
      "description": "Results of the request to list operations."
    },
    "ResourceProviderOperation": {
      "type": "object",
      "properties": {
        "isDataAction": {
          "type": "string",
          "description": "Indicates whether the operation applies to data-plane."
        },
        "name": {
          "type": "string",
          "description": "Operation name, in format of {provider}/{resource}/{operation}"
        },
        "display": {
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "description": "The resource provider."
            },
            "resource": {
              "type": "string",
              "description": "Resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "description": "Type of operation: get, read, delete, etc."
            },
            "description": {
              "type": "string",
              "description": "Description of this operation."
            }
          },
          "description": "Display metadata associated with the operation."
        }
      },
      "description": "Results of the request to list operations."
    }
  },
  "parameters": {
    "springbootsitesNameParameter": {
      "x-ms-parameter-location": "client",
      "name": "springbootsitesName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "description": "The springbootsites name."
    }
  }
}
