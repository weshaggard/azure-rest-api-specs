{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.ServiceLinker",
    "description": "Microsoft.ServiceLinker provider",
    "version": "2022-07-01-privatepreview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/devConnectors": {
      "get": {
        "deprecated": false,
        "description": "Returns list of devConnector which connects to the resource.",
        "operationId": "DevConnector_List",
        "x-ms-examples": {
          "DevConnectorList": {
            "$ref": "./examples/DevConnectorList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "devConnector details.",
            "schema": {
              "$ref": "#/definitions/ResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/devConnectors/{resourceName}": {
      "get": {
        "description": "Returns devConnector resource for a given name.",
        "operationId": "devConnector_Get",
        "x-ms-examples": {
          "devConnector": {
            "$ref": "./examples/DevConnectors.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "devConnector details.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update devConnector resource.",
        "operationId": "devConnector_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PutdevConnector": {
            "$ref": "./examples/PutDevConnector.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "description": "devConnector details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "devConnector"
        ],
        "operationId": "devConnector_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "description": "Delete a devConnector.",
        "x-ms-examples": {
          "DeletedevConnector": {
            "$ref": "./examples/DeleteDevConnector.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The devConnector is deleted."
          },
          "204": {
            "description": "Deleted. The devConnector is not found."
          },
          "202": {
            "description": "Long running operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "devConnector"
        ],
        "operationId": "devConnector_Update",
        "description": "Operation to update an existing devConnector.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PatchdevConnector": {
            "$ref": "./examples/PatchDevConnector.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "description": "devConnector details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a devConnector.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Servicelinker/devConnector/{resourceName}/validateHealthy": {
      "post": {
        "tags": [
          "devConnector"
        ],
        "operationId": "devConnector_Validate",
        "description": "Validate a devConnector.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ValidatedevConnectoruccess": {
            "$ref": "./examples/ValidateLinkerSuccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ValidateOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ServiceLinker/devConnector/{resourceName}/generateConfigurations": {
      "post": {
        "tags": [
          "devConnector"
        ],
        "operationId": "devConnector_GenerateConfigurations",
        "description": "Generate configurations for a devConnector.",
        "x-ms-examples": {
          "GenerateConfiguration": {
            "$ref": "./examples/GenerateConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "description": "Connection Info, including format, secret store, etc",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConnectionInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConfigurationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/linkers": {
      "get": {
        "deprecated": false,
        "description": "Returns list of Linkers which connects to the resource.",
        "operationId": "Linker_List",
        "x-ms-examples": {
          "LinkerList": {
            "$ref": "./examples/LinkerList.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Linker details.",
            "schema": {
              "$ref": "#/definitions/ResourceList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/Linkers/{resourceName}": {
      "get": {
        "description": "Returns Linker resource for a given name.",
        "operationId": "Linker_Get",
        "x-ms-examples": {
          "Linker": {
            "$ref": "./examples/Linker.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Linker details.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Create or update Linker resource.",
        "operationId": "Linker_CreateOrUpdate",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PutLinker": {
            "$ref": "./examples/PutLinker.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "description": "Linker details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Delete",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "description": "Delete a Linker.",
        "x-ms-examples": {
          "DeleteLinker": {
            "$ref": "./examples/DeleteLinker.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The Linker is deleted."
          },
          "204": {
            "description": "Deleted. The Linker is not found."
          },
          "202": {
            "description": "Long running operation."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Update",
        "description": "Operation to update an existing Linker.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "PatchLinker": {
            "$ref": "./examples/PatchLinker.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          },
          {
            "name": "parameters",
            "description": "Linker details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LinkerPatch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes a Linker.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "201": {
            "description": "Long running operation.",
            "schema": {
              "$ref": "#/definitions/LinkerResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/Linkers/{resourceName}/validateHealthy": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_Validate",
        "description": "Validate a Linker.",
        "x-ms-long-running-operation": true,
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-examples": {
          "ValidateLinkerSuccess": {
            "$ref": "./examples/ValidateLinkerSuccess.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ValidateOperationResult"
            }
          },
          "202": {
            "description": "Accepted - Returns this status until the asynchronous operation has completed."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/Linkers/{resourceName}/listConfigurations": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_ListConfigurations",
        "description": "list source configurations for a Linker.",
        "x-ms-examples": {
          "GetConfiguration": {
            "$ref": "./examples/GetConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConfigurationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.ServiceLinker/Linkers/{resourceName}/generateConfigurations": {
      "post": {
        "tags": [
          "Linkers"
        ],
        "operationId": "Linker_GenerateConfigurations",
        "description": "Generate configurations for a Linker.",
        "x-ms-examples": {
          "GenerateConfiguration": {
            "$ref": "./examples/GenerateConfigurations.json"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/ConfigurationResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.ServiceLinker/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists the available ServiceLinker REST API operations.",
        "x-ms-examples": {
          "GetConfiguration": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The request has succeeded.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    }
  },
  "definitions": {
    "TargetServiceType": {
      "description": "The target service type.",
      "type": "string",
      "enum": [
        "AzureResource",
        "ConfluentBootstrapServer",
        "ConfluentSchemaRegistry",
        "SelfHostedServer"
      ],
      "x-ms-enum": {
        "name": "targetServiceType",
        "modelAsString": true
      }
    },
    "TargetServiceBase": {
      "description": "The target service properties",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "The target service type.",
          "$ref": "#/definitions/TargetServiceType"
        }
      },
      "required": [
        "type"
      ]
    },
    "AzureResourceType": {
      "description": "The azure resource type.",
      "type": "string",
      "enum": [
        "KeyVault"
      ],
      "x-ms-enum": {
        "name": "azureResourceType",
        "modelAsString": true
      }
    },
    "AzureResourcePropertiesBase": {
      "description": "The azure resource properties",
      "discriminator": "type",
      "type": "object",
      "properties": {
        "type": {
          "description": "The azure resource type.",
          "$ref": "#/definitions/AzureResourceType"
        }
      },
      "required": [
        "type"
      ]
    },
    "AzureResource": {
      "x-ms-discriminator-value": "AzureResource",
      "type": "object",
      "description": "The azure resource info when target service type is AzureResource",
      "allOf": [
        {
          "$ref": "#/definitions/TargetServiceBase"
        }
      ],
      "properties": {
        "id": {
          "description": "The Id of azure resource.",
          "type": "string"
        },
        "resourceProperties": {
          "x-nullable": true,
          "description": "The azure resource connection related properties.",
          "$ref": "#/definitions/AzureResourcePropertiesBase"
        }
      }
    },
    "AzureKeyVaultProperties": {
      "x-ms-discriminator-value": "KeyVault",
      "type": "object",
      "description": "The resource properties when type is Azure Key Vault",
      "allOf": [
        {
          "$ref": "#/definitions/AzureResourcePropertiesBase"
        }
      ],
      "properties": {
        "connectAsKubernetesCsiDriver": {
          "x-nullable": true,
          "description": "True if connect via Kubernetes CSI Driver.",
          "type": "boolean"
        }
      }
    },
    "ConfluentBootstrapServer": {
      "x-ms-discriminator-value": "ConfluentBootstrapServer",
      "type": "object",
      "description": "The service properties when target service type is ConfluentBootstrapServer",
      "allOf": [
        {
          "$ref": "#/definitions/TargetServiceBase"
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "SelfHostedServer": {
      "x-ms-discriminator-value": "SelfHostedServer",
      "type": "object",
      "description": "The service properties when target service type is SelfHostedServer",
      "allOf": [
        {
          "$ref": "#/definitions/TargetServiceBase"
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "ConfluentSchemaRegistry": {
      "x-ms-discriminator-value": "ConfluentSchemaRegistry",
      "type": "object",
      "description": "The service properties when target service type is ConfluentSchemaRegistry",
      "allOf": [
        {
          "$ref": "#/definitions/TargetServiceBase"
        }
      ],
      "properties": {
        "endpoint": {
          "description": "The endpoint of service.",
          "type": "string"
        }
      }
    },
    "CleanupMode": {
      "description": "The cleanup mode to indicate whether clean up operation when resource is deleted or updated",
      "type": "string",
      "enum": [
        "Disable",
        "Forcely"
      ],
      "x-ms-enum": {
        "name": "CleanupMode",
        "modelAsString": true
      }
    },
    "AuthType": {
      "description": "The authentication type.",
      "type": "string",
      "enum": [
        "systemAssignedIdentity",
        "userAssignedIdentity",
        "servicePrincipalSecret",
        "servicePrincipalCertificate",
        "secret",
        "accessKey",
        "userAccount"
      ],
      "x-ms-enum": {
        "name": "AuthType",
        "modelAsString": true
      }
    },
    "SecretType": {
      "description": "The secret type.",
      "type": "string",
      "enum": [
        "rawValue",
        "keyVaultSecretUri",
        "keyVaultSecretReference"
      ],
      "x-ms-enum": {
        "name": "SecretType",
        "modelAsString": true
      }
    },
    "SecretInfoBase": {
      "description": "The secret info",
      "discriminator": "secretType",
      "type": "object",
      "properties": {
        "secretType": {
          "description": "The secret type.",
          "$ref": "#/definitions/SecretType"
        }
      },
      "required": [
        "secretType"
      ]
    },
    "ValueSecretInfo": {
      "x-ms-discriminator-value": "rawValue",
      "type": "object",
      "description": "The secret info when type is rawValue. It's for scenarios that user input the secret.",
      "allOf": [
        {
          "$ref": "#/definitions/SecretInfoBase"
        }
      ],
      "properties": {
        "value": {
          "x-nullable": true,
          "description": "The actual value of the secret.",
          "type": "string",
          "x-ms-secret": true
        }
      }
    },
    "KeyVaultSecretReferenceSecretInfo": {
      "x-ms-discriminator-value": "keyVaultSecretReference",
      "type": "object",
      "description": "The secret info when type is keyVaultSecretReference. It's for scenario that user provides a secret stored in user's keyvault and source is Azure Kubernetes. The key Vault's resource id is Linkered to secretStore.keyVaultId.",
      "allOf": [
        {
          "$ref": "#/definitions/SecretInfoBase"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the Key Vault secret.",
          "type": "string"
        },
        "version": {
          "x-nullable": true,
          "description": "Version of the Key Vault secret.",
          "type": "string"
        }
      }
    },
    "KeyVaultSecretUriSecretInfo": {
      "x-ms-discriminator-value": "keyVaultSecretUri",
      "type": "object",
      "description": "The secret info when type is keyVaultSecretUri. It's for scenario that user provides a secret stored in user's keyvault and source is Web App, Spring Cloud or Container App.",
      "allOf": [
        {
          "$ref": "#/definitions/SecretInfoBase"
        }
      ],
      "properties": {
        "value": {
          "description": "URI to the keyvault secret",
          "type": "string"
        }
      }
    },
    "AuthenticationBase": {
      "description": "The authentication info",
      "discriminator": "authType",
      "type": "object",
      "properties": {
        "authType": {
          "description": "The authentication type.",
          "$ref": "#/definitions/AuthType"
        },
        "cleanupMode": {
          "description": "Indidate whether to clean up previous operation when Linker is updating or deleting",
          "$ref": "#/definitions/CleanupMode"
        }
      },
      "required": [
        "authType"
      ]
    },
    "SecretAuthInfo": {
      "x-ms-discriminator-value": "secret",
      "type": "object",
      "description": "The authentication info when authType is secret",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationBase"
        }
      ],
      "properties": {
        "name": {
          "x-nullable": true,
          "description": "Username or account name for secret auth.",
          "type": "string"
        },
        "secretInfo": {
          "x-nullable": true,
          "description": "Password or key vault secret for secret auth.",
          "$ref": "#/definitions/SecretInfoBase"
        }
      }
    },
    "UserAssignedIdentityAuthInfo": {
      "x-ms-discriminator-value": "userAssignedIdentity",
      "type": "object",
      "description": "The authentication info when authType is userAssignedIdentity",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationBase"
        }
      ],
      "properties": {
        "clientId": {
          "description": "Client Id for userAssignedIdentity.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription id for userAssignedIdentity.",
          "type": "string"
        }
      }
    },
    "SystemAssignedIdentityAuthInfo": {
      "x-ms-discriminator-value": "systemAssignedIdentity",
      "type": "object",
      "description": "The authentication info when authType is systemAssignedIdentity",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationBase"
        }
      ]
    },
    "ServicePrincipalSecretAuthInfo": {
      "x-ms-discriminator-value": "servicePrincipalSecret",
      "type": "object",
      "description": "The authentication info when authType is servicePrincipal secret",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationBase"
        }
      ],
      "properties": {
        "clientId": {
          "description": "ServicePrincipal application clientId for servicePrincipal auth.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id for servicePrincipal auth.",
          "type": "string"
        },
        "secret": {
          "description": "Secret for servicePrincipal auth.",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "required": [
        "clientId",
        "principalId",
        "secret"
      ]
    },
    "ServicePrincipalCertificateAuthInfo": {
      "x-ms-discriminator-value": "servicePrincipalCertificate",
      "type": "object",
      "description": "The authentication info when authType is servicePrincipal certificate",
      "allOf": [
        {
          "$ref": "#/definitions/AuthenticationBase"
        }
      ],
      "properties": {
        "clientId": {
          "description": "Application clientId for servicePrincipal auth.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id for servicePrincipal auth.",
          "type": "string"
        },
        "certificate": {
          "description": "ServicePrincipal certificate for servicePrincipal auth.",
          "type": "string",
          "x-ms-secret": true
        }
      },
      "required": [
        "clientId",
        "principalId",
        "certificate"
      ]
    },
    "LinkerResource": {
      "type": "object",
      "description": "Linker of source and target resource",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ProxyResource",
          "description": "The resource model definition for an Azure Resource Manager proxy resource."
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "The properties of the Linker.",
          "$ref": "#/definitions/LinkerProperties",
          "x-ms-client-flatten": true
        },
        "systemData": {
          "x-nullable": true,
          "readOnly": true,
          "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/systemData",
          "description": "The system data."
        }
      }
    },
    "LinkerPatch": {
      "description": "A Linker to be updated.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Linker properties",
          "type": "object",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/LinkerProperties"
        }
      }
    },
    "ResourceList": {
      "description": "The list of Linker.",
      "type": "object",
      "properties": {
        "nextLinker": {
          "x-nullable": true,
          "description": "The Linker used to get the next page of Linker list.",
          "type": "string"
        },
        "value": {
          "description": "The list of Linkers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LinkerResource"
          }
        }
      }
    },
    "LinkerProperties": {
      "description": "The properties of the Linker.",
      "type": "object",
      "properties": {
        "targetService": {
          "$ref": "#/definitions/TargetServiceBase",
          "description": "The target service properties"
        },
        "authentication": {
          "description": "The authentication type.",
          "$ref": "#/definitions/AuthenticationBase"
        },
        "provisioningState": {
          "readOnly": true,
          "type": "string",
          "description": "The provisioning state. "
        },
        "network": {
          "x-nullable": true,
          "description": "The network solution.",
          "$ref": "#/definitions/NetworkBase"
        },
        "connectionInfo": {
          "x-nullable": true,
          "description": "The connection information consumed by applications, including secrets, connection strings.",
          "$ref": "#/definitions/ConnectionInfo"
        }
      }
    },
    "SourceConfiguration": {
      "description": "A configuration item for source resource",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of setting.",
          "type": "string"
        },
        "value": {
          "x-nullable": true,
          "description": "The value of setting",
          "type": "string"
        }
      }
    },
    "ConfigurationResult": {
      "description": "Configurations for source resource, include appSettings, connectionString and serviceBindings",
      "type": "object",
      "properties": {
        "configurations": {
          "description": "The configuration properties for source resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceConfiguration"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ValidateOperationResult": {
      "description": "The validation operation result for a Linker.",
      "type": "object",
      "properties": {
        "properties": {
          "x-nullable": true,
          "description": "The validation result detail.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/ValidateResult"
        },
        "resourceId": {
          "x-nullable": true,
          "description": "Validated Linker id.",
          "type": "string"
        },
        "status": {
          "x-nullable": true,
          "description": "Validation operation status.",
          "type": "string"
        }
      }
    },
    "ValidateResult": {
      "description": "The validation result for a Linker.",
      "type": "object",
      "properties": {
        "LinkerName": {
          "x-nullable": true,
          "description": "The Linker name.",
          "type": "string"
        },
        "isConnectionAvailable": {
          "x-nullable": true,
          "description": "A boolean value indicating whether the connection is available or not",
          "type": "boolean"
        },
        "reportStartTimeUtc": {
          "x-nullable": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time of the validation report."
        },
        "reportEndTimeUtc": {
          "x-nullable": true,
          "type": "string",
          "format": "date-time",
          "description": "The end time of the validation report."
        },
        "sourceId": {
          "x-nullable": true,
          "description": "The resource id of the Linker source application.",
          "type": "string"
        },
        "targetId": {
          "x-nullable": true,
          "description": "The resource Id of target service.",
          "type": "string"
        },
        "authType": {
          "x-nullable": true,
          "description": "The authentication type.",
          "$ref": "#/definitions/AuthType"
        },
        "validationDetail": {
          "description": "The detail of validation result",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationResultItem"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "ValidationResultItem": {
      "description": "The validation item for a Linker.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The validation item name.",
          "type": "string"
        },
        "description": {
          "x-nullable": true,
          "description": "The display name of validation item",
          "type": "string"
        },
        "result": {
          "x-nullable": true,
          "description": "The result of validation",
          "type": "string",
          "enum": [
            "success",
            "failure",
            "warning"
          ],
          "x-ms-enum": {
            "name": "ValidationResultStatus",
            "modelAsString": true
          }
        },
        "errorMessage": {
          "x-nullable": true,
          "description": "The error message of validation result",
          "type": "string"
        },
        "errorCode": {
          "x-nullable": true,
          "description": "The error code of validation result",
          "type": "string"
        }
      }
    },
    "NetworkBase": {
      "type": "object",
      "discriminator": "type",
      "description": "The network solution for Linker",
      "properties": {
        "type": {
          "x-nullable": true,
          "description": "Type of network solution.",
          "type": "string",
          "enum": [
            "firewall",
            "serviceEndpoint",
            "privateLink"
          ],
          "x-ms-enum": {
            "name": "networkType",
            "modelAsString": true
          }
        },
        "cleanupMode": {
          "description": "Indidate whether to clean up previous operation when Linker is updating or deleting",
          "$ref": "#/definitions/CleanupMode"
        }
      },
      "required": [
        "type"
      ]
    },
    "Firewall": {
      "x-ms-discriminator-value": "firewall",
      "type": "object",
      "description": "The network when type is firewall",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkBase"
        }
      ],
      "properties": {
        "IPRanges": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account."
        },
        "IncludeCallerIP": {
          "type": "boolean",
          "description": "Whether include the caller IP to firewall allow list when provision the resource."
         }
      }
    },
    "ServiceEndpoint": {
      "x-ms-discriminator-value": "serviceEndpoint",
      "type": "object",
      "description": "The network when type is serviceEndpoint",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkBase"
        }
      ]
    },
    "PrivateLink": {
      "x-ms-discriminator-value": "privateLink",
      "type": "object",
      "description": "The network when type is privateLink",
      "allOf": [
        {
          "$ref": "#/definitions/NetworkBase"
        }
      ]
    },
    "ConnectionInfo": {
      "type": "object",
      "description": "The connection information for Linker",
      "properties": {
        "format": {
          "description": "The application client type",
          "type": "string",
          "enum": [
            "none",
            "dotnet",
            "java",
            "python",
            "go",
            "php",
            "ruby",
            "django",
            "nodejs",
            "springBoot"
          ],
          "x-ms-enum": {
            "name": "clientType",
            "modelAsString": true
          }
        },
        "cleanupMode": {
          "description": "Indidate whether to clean up previous operation when Linker is updating or deleting",
          "$ref": "#/definitions/CleanupMode"
        },
        "customizedKeys": {
          "description": "A dictionary of customized key names.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "additionalSettings": {
          "description": "A dictionary of addtional settings.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretStore": {
          "x-nullable": true,
          "description": "An option to store secret value in secure place",
          "$ref": "#/definitions/SecretStore"
        },
        "scope": {
          "x-nullable": true,
          "type": "string",
          "description": "connection scope in source service."
        }
      }
    },
    "SecretStore": {
      "type": "object",
      "description": "An option to store secret value in secure place",
      "properties": {
        "keyVaultId": {
          "x-nullable": true,
          "type": "string",
          "description": "The key vault id to store secret"
        }
      }
    }
  },
  "parameters": {
    "ResourceNameParameter": {
      "name": "resourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of resource.",
      "x-ms-parameter-location": "method"
    },
    "ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID.",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    }
  }
}
