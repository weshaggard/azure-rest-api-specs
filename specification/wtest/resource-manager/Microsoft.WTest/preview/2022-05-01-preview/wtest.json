{
  "swagger": "2.0",
  "info": {
    "title": "WTestManagementClient",
    "description": "WTest provider",
    "version": "2022-05-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/Microsoft.WTest/employees": {
      "get": {
        "description": "Returns list of employees.",
        "operationId": "Employee_ListBySubscription",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details.",
            "schema": {
              "$ref": "#/definitions/EmployeeResourceList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/employees": {
      "get": {
        "description": "Returns list of employees.",
        "operationId": "Employee_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details.",
            "schema": {
              "$ref": "#/definitions/EmployeeResourceList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/employees/{employeeName}": {
      "get": {
        "description": "Returns employee resource for a given name.",
        "operationId": "Employee_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee details.",
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          }
        }
      },
      "delete": {
        "description": "Deletes employee resource for a given name.",
        "operationId": "Employee_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes the employee details."
          }
        }
      },
      "put": {
        "description": "Create or update employee resource.",
        "operationId": "Employee_CreateAndUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "name": "EmployeeResource",
            "description": "Employee details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          },
          "201": {
            "description": "Long running operation."
          }
        }
      },
      "patch": {
        "description": "Update employee details.",
        "operationId": "Employees_Post",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "name": "EmployeePatchResource",
            "description": "Employee patch details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeePatchResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          }
        }
      },
      "post": {
        "description": "Update employee details.",
        "operationId": "Employees_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "name": "EmployeeResource",
            "description": "Employee details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/EmployeeResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/employees/{employeeName}/nestedResourceType/{nestedResourceName}": {
      "get": {
        "description": "Returns nested resources for a given employee name",
        "operationId": "NestedResourceType_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Nested Resource Types.",
            "schema": {
              "$ref": "#/definitions/NestedResource"
            }
          }
        }
      },
      "put": {
        "description": "Create or update nested resource type.",
        "operationId": "NestedResourceType_CreateAndUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceNameParameter"
          },
          {
            "name": "NestedResourceType",
            "description": "Nested Resource Type details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NestedResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/NestedResource"
            }
          }
        }
      },
      "patch": {
        "description": "Update nested resource type details.",
        "operationId": "NestedResourceType_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          },
          {
            "$ref": "#/parameters/NestedResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/NestedResource"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/employees/{employeeName}/nestedResourceType": {
      "get": {
        "description": "Returns nested resources for a given employee name",
        "operationId": "NestedResourceType_List",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/EmployeeNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Nested Resource Types.",
            "schema": {
              "$ref": "#/definitions/NestedResourceList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/extensionResourceType": {
      "get": {
        "description": "Returns nextension resource for a given employee name",
        "operationId": "ExtensionResourceType_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Nested Resource Types.",
            "schema": {
              "$ref": "#/definitions/ExtensionResourceList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/extensionResourceType/{extensionResourceName}": {
      "get": {
        "description": "Returns extension resources",
        "operationId": "ExtensionResource_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ExtensionResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Extension Resources.",
            "schema": {
              "$ref": "#/definitions/ExtensionResource"
            }
          }
        }
      },
      "put": {
        "description": "Create or update extension resource.",
        "operationId": "ExtensionResource_CreateAndUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ExtensionResourceNameParameter"
          },
          {
            "name": "ExtensionResourceType",
            "description": "ExtensionResource details.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExtensionResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/ExtensionResource"
            }
          }
        }
      },
      "patch": {
        "description": "Update extension resource details.",
        "operationId": "ExtensionResource_Update",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ExtensionResourceNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful.",
            "schema": {
              "$ref": "#/definitions/ExtensionResource"
            }
          }
        }
      }
    },
    "/providers/Microsoft.WTest/operations": {
      "get": {
        "description": "Returns list of operations.",
        "operationId": "Operation_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "#/definitions/operationsList"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.WTest/rgLvlValidate": {
      "post": {
        "summary": "Validate if a resource can be created.",
        "description": "Description for Validate if a resource can be created.",
        "operationId": "RgLvlValidate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "validateRequest",
            "in": "body",
            "description": "Request with the resources to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.WTest/subLvlValidate": {
      "post": {
        "summary": "Validate if a resource can be created.",
        "description": "Description for Validate if a resource can be created.",
        "operationId": "SubLvlValidate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "name": "validateRequest",
            "in": "body",
            "description": "Request with the resources to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.WTest/tenantLvlValidate": {
      "post": {
        "summary": "Validate if a resource can be created.",
        "description": "Description for Validate if a resource can be created.",
        "operationId": "TenantLvlValidate",
        "parameters": [
          {
            "name": "validateRequest",
            "in": "body",
            "description": "Request with the resources to validate.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidateRequest"
            }
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ValidateResponse"
            }
          },
          "default": {
            "description": "App Service error response.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        }
      }
    },
    "/providers/Microsoft.WTest/locations/{location}/checkNameAvailability": {
      "post": {
        "description": "Checks that the WTest resource name is valid in s location and is not already in use.",
        "operationId": "Regional_CheckNameAvailability",
        "summary": "Check Name Availability",
        "tags": [
          "WTest"
        ],
        "parameters": [
          {
            "name": "nameAvailabilityParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the name availability.",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/providers/Microsoft.WTest/checkNameAvailability": {
      "post": {
        "description": "Checks that the WTest resource name is valid and is not already in use.",
        "operationId": "WTest_CheckNameAvailability",
        "summary": "Check Name Availability",
        "tags": [
          "WTest"
        ],
        "parameters": [
          {
            "name": "nameAvailabilityParameters",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/NameAvailabilityParameters"
            },
            "description": "Parameters supplied to the operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success. The response describes the name availability.",
            "schema": {
              "$ref": "#/definitions/NameAvailability"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "#/definitions/ResourceProviderDefaultErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "Resource": {
      "description": "An Azure resource.",
      "properties": {
        "id": {
          "description": "Azure resource Id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Azure resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Azure resource type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string",
          "readOnly": false
        },
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "EmployeeResource": {
      "type": "object",
      "description": "Employee details",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v4/types.json#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "type": "object",
          "required": [
            "firstName",
            "lastName",
            "group",
            "likesTea"
          ],
          "properties": {
            "firstName": {
              "type": "string",
              "description": "Employee full name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "middleName": {
              "type": "string",
              "description": "Employee middle name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "lastName": {
              "type": "string",
              "description": "Employee last name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc...",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "password": {
              "type": "string",
              "description": "The password.",
              "x-ms-secret": true
            },
            "identificationNumber": {
              "type": "string",
              "readOnly": true,
              "description": "unique id assigned at the time of user creation"
            },
            "likesTea": {
              "type": "string",
              "description": "Gets or sets the deployment mode.",
              "enum": [
                "Yes"
              ],
              "x-ms-enum": {
                "name": "likesTea",
                "modelAsString": true
              }
            },
            "location": {
              "description": "Location of the resource.",
              "type": "string",
              "readOnly": false
            },
            "tags": {
              "description": "resource tags.",
              "type": "object",
              "readOnly": false,
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "StressTestResource": {
      "type": "object",
      "description": "Stress test details",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "type": "object",
          "required": [
            "firstName",
            "lastName",
            "group",
            "likesTea"
          ],
          "properties": {
            "firstName": {
              "type": "string",
              "description": "Stress test resource name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "middleName": {
              "type": "string",
              "description": "middle name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "lastName": {
              "type": "string",
              "description": "last name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc...",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "password": {
              "type": "string",
              "description": "The password.",
              "x-ms-secret": true
            },
            "identificationNumber": {
              "type": "string",
              "readOnly": true,
              "description": "unique id assigned at the time of user creation"
            },
            "likesTea": {
              "type": "string",
              "description": "Gets or sets the deployment mode.",
              "enum": [
                "Yes"
              ],
              "x-ms-enum": {
                "name": "likesTea",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "EmployeePatchResource": {
      "type": "object",
      "description": "Employee patch properties",
      "properties": {
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc..."
            }
          }
        }
      }
    },
    "StressTestPatchResource": {
      "type": "object",
      "description": "Stress test patch properties",
      "properties": {
        "tags": {
          "description": "resource tags.",
          "type": "object",
          "readOnly": false,
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "properties": {
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc..."
            }
          }
        }
      }
    },
    "EmployeeResourceList": {
      "description": "The list of employees.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of employees list.",
          "type": "string"
        },
        "value": {
          "description": "The list of recommendations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmployeeResource"
          }
        }
      }
    },
    "StressTestResourceList": {
      "description": "The list of stress test resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of stress test resources list.",
          "type": "string"
        },
        "value": {
          "description": "The list of stress test resources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StressTestResource"
          }
        }
      }
    },
    "NestedResource": {
      "type": "object",
      "description": "Nested Resource details",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "properties": {
            "firstName": {
              "type": "string",
              "description": "Nested Resource full name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "middleName": {
              "type": "string",
              "description": "Nested Resource name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "lastName": {
              "type": "string",
              "description": "Nested Resource name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc...",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "identificationNumber": {
              "type": "string",
              "readOnly": true,
              "description": "unique id assigned at the time of user creation"
            },
            "likesTea": {
              "type": "string",
              "description": "Gets or sets the deployment mode.",
              "enum": [
                "Yes"
              ],
              "x-ms-enum": {
                "name": "likesTea",
                "modelAsString": true
              }
            }
          },
          "required": [
            "firstName",
            "lastName",
            "group",
            "likesTea"
          ],
          "type": "object"
        }
      }
    },
    "NestedResourceList": {
      "description": "The list of nested resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of nested resources list.",
          "type": "string"
        },
        "value": {
          "description": "The list of recommendations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedResource"
          }
        }
      }
    },
    "FreeFormResource": {
      "type": "object",
      "description": "FreeForm Resource details",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "Employee full name.",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "middleName": {
          "type": "string",
          "description": "Employee middle name.",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^[A-Za-z0-9-._]+$"
        },
        "lastName": {
          "type": "string",
          "description": "Employee last name.",
          "minLength": 1,
          "maxLength": 10,
          "pattern": "^[A-Za-z0-9-._]+$"
        }
      }
    },
    "ExtensionResource": {
      "type": "object",
      "description": "Extension Resource details",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "properties": {
            "firstName": {
              "type": "string",
              "description": "Extension Resource full name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "middleName": {
              "type": "string",
              "description": "Extension Resource name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "lastName": {
              "type": "string",
              "description": "Extension Resource name.",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "group": {
              "type": "string",
              "description": "group like Finance, HR etc...",
              "minLength": 1,
              "maxLength": 10,
              "pattern": "^[A-Za-z0-9-._]+$"
            },
            "identificationNumber": {
              "type": "string",
              "readOnly": true,
              "description": "unique id assigned at the time of user creation"
            },
            "likesTea": {
              "type": "string",
              "description": "Gets or sets the deployment mode.",
              "enum": [
                "Yes"
              ],
              "x-ms-enum": {
                "name": "likesTea",
                "modelAsString": true
              }
            }
          },
          "required": [
            "firstName",
            "lastName",
            "group",
            "likesTea"
          ],
          "type": "object"
        }
      }
    },
    "ExtensionResourceList": {
      "description": "The list of extension resources.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of extension resources list.",
          "type": "string"
        },
        "value": {
          "description": "The list of recommendations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtensionResource"
          }
        }
      }
    },
    "operation": {
      "description": "Operation provided by provider",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the operation"
        },
        "display": {
          "type": "object",
          "description": "Properties of the operation",
          "properties": {
            "provider": {
              "type": "string",
              "description": "Provider name"
            },
            "resource": {
              "type": "string",
              "description": "Resource name"
            },
            "operation": {
              "type": "string",
              "description": "Operation name"
            },
            "description": {
              "type": "string",
              "description": "Description of the operation"
            }
          }
        }
      }
    },
    "operationsList": {
      "description": "Lists the operations available.",
      "properties": {
        "nextLink": {
          "description": "Url to follow for getting next page of operations.",
          "type": "string"
        },
        "value": {
          "description": "Array of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/operation"
          }
        }
      },
      "required": [
        "value"
      ]
    },
    "ValidateProperties": {
      "description": "App properties used for validation.",
      "type": "object",
      "properties": {
        "serverFarmId": {
          "description": "ARM resource ID of an App Service plan that would host the app.",
          "type": "string"
        },
        "skuName": {
          "description": "Name of the target SKU for the App Service plan.",
          "type": "string"
        },
        "needLinuxWorkers": {
          "description": "<code>true</code> if App Service plan is for Linux workers; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "isSpot": {
          "description": "<code>true</code> if App Service plan is for Spot instances; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "capacity": {
          "format": "int32",
          "description": "Target capacity of the App Service plan (number of VMs).",
          "minimum": 1,
          "type": "integer"
        },
        "hostingEnvironment": {
          "description": "Name of App Service Environment where app or App Service plan should be created.",
          "type": "string"
        },
        "isXenon": {
          "description": "<code>true</code> if App Service plan is running as a windows container",
          "type": "boolean"
        },
        "containerRegistryBaseUrl": {
          "description": "Base URL of the container registry",
          "type": "string"
        },
        "containerRegistryUsername": {
          "description": "Username for to access the container registry",
          "type": "string"
        },
        "containerRegistryPassword": {
          "description": "Password for to access the container registry",
          "type": "string"
        },
        "containerImageRepository": {
          "description": "Repository name (image name)",
          "type": "string"
        },
        "containerImageTag": {
          "description": "Image tag",
          "type": "string"
        },
        "containerImagePlatform": {
          "description": "Platform (windows or linux)",
          "type": "string"
        }
      }
    },
    "ValidateRequest": {
      "description": "Resource validation request content.",
      "required": [
        "name",
        "type",
        "location",
        "properties"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name to verify.",
          "type": "string"
        },
        "type": {
          "description": "Resource type used for verification.",
          "enum": [
            "ServerFarm",
            "Site"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ValidateResourceTypes",
            "modelAsString": true
          }
        },
        "location": {
          "description": "Expected location of the resource.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ValidateProperties",
          "description": "Properties of the resource to validate.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ValidateResponse": {
      "description": "Describes the result of resource validation.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Result of validation.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ValidateResponseError",
          "description": "Error details for the case when validation fails."
        }
      }
    },
    "ValidateResponseError": {
      "description": "Error details for when validation fails.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Validation error code.",
          "type": "string"
        },
        "message": {
          "description": "Validation error message.",
          "type": "string"
        }
      }
    },
    "ErrorResponseBody": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorResponseBody"
          }
        }
      }
    },
    "ResourceProviderDefaultErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorResponseBody"
        }
      }
    },
    "NameAvailabilityParameters": {
      "description": "Data POST-ed to the nameAvailability action",
      "required": [
        "type",
        "name"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "The resource type.",
          "type": "string"
        },
        "name": {
          "description": "The resource name to validate. e.g.\"my-resource-name-here\"",
          "type": "string"
        }
      }
    },
    "NameAvailability": {
      "description": "Result of the request to check name availability. It contains a flag and possible reason of failure.",
      "type": "object",
      "properties": {
        "nameAvailable": {
          "description": "Indicates whether the name is available or not.",
          "type": "boolean"
        },
        "reason": {
          "description": "The reason of the availability. Required if name is not available.",
          "type": "string"
        },
        "message": {
          "description": "The message of the operation.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The Azure subscription ID."
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client Api Version."
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "EmployeeNameParameter": {
      "name": "employeeName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name employee resource.",
      "x-ms-parameter-location": "method"
    },
    "StressTestNameParameter": {
      "name": "stressTestName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name stress test resource.",
      "x-ms-parameter-location": "method"
    },
    "NestedResourceNameParameter": {
      "name": "nestedResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of nested resource.",
      "x-ms-parameter-location": "method"
    },
    "FreeFormResourceNameParameter": {
      "name": "freeFormResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of freeForm resource.",
      "x-ms-parameter-location": "method"
    },
    "ExtensionResourceNameParameter": {
      "name": "extensionResourceName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of extension resource.",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The Azure region",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}