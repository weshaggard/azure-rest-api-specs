{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Bluefin management service",
    "version": "2023-06-26-preview",
    "description": "Microsoft.Bluefin Resource Provider management API.",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "description": "Azure Active Directory OAuth2 Flow.",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "Operations"
    },
    {
      "name": "Instances"
    },
    {
      "name": "Pipelines"
    },
    {
      "name": "Datasets"
    }
  ],
  "paths": {
    "/providers/Microsoft.Bluefin/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-examples": {
          "Operations_List": {
            "$ref": "./examples/Operations_List.json"
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Bluefin/instances": {
      "get": {
        "operationId": "Instances_ListBySubscription",
        "tags": [
          "Instances"
        ],
        "description": "List Instance resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances": {
      "get": {
        "operationId": "Instances_ListByResourceGroup",
        "tags": [
          "Instances"
        ],
        "description": "List Instance resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/InstanceListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances/{instanceName}": {
      "get": {
        "operationId": "Instances_Get",
        "tags": [
          "Instances"
        ],
        "description": "Get a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Instances_CreateOrUpdate",
        "tags": [
          "Instances"
        ],
        "description": "Create a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Instances_Update",
        "tags": [
          "Instances"
        ],
        "description": "Update a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Instances_Delete",
        "tags": [
          "Instances"
        ],
        "description": "Delete a Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances/{instanceName}/datasets": {
      "get": {
        "operationId": "Datasets_ListByInstance",
        "tags": [
          "Datasets"
        ],
        "description": "List Dataset resources by Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DatasetListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances/{instanceName}/datasets/{datasetName}": {
      "get": {
        "operationId": "Datasets_Get",
        "tags": [
          "Datasets"
        ],
        "description": "Get a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Datasets_CreateOrUpdate",
        "tags": [
          "Datasets"
        ],
        "description": "Create a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Datasets_Update",
        "tags": [
          "Datasets"
        ],
        "description": "Update a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DatasetUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Dataset"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Datasets_Delete",
        "tags": [
          "Datasets"
        ],
        "description": "Delete a Dataset",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "datasetName",
            "in": "path",
            "description": "Name of dataset",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances/{instanceName}/pipelines": {
      "get": {
        "operationId": "Pipelines_ListByInstance",
        "tags": [
          "Pipelines"
        ],
        "description": "List Pipeline resources by Instance",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/PipelineListResult"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Bluefin/instances/{instanceName}/pipelines/{pipelineName}": {
      "get": {
        "operationId": "Pipelines_Get",
        "tags": [
          "Pipelines"
        ],
        "description": "Get a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "operationId": "Pipelines_CreateOrUpdate",
        "tags": [
          "Pipelines"
        ],
        "description": "Create a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true
      },
      "patch": {
        "operationId": "Pipelines_Update",
        "tags": [
          "Pipelines"
        ],
        "description": "Update a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PipelineUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "operationId": "Pipelines_Delete",
        "tags": [
          "Pipelines"
        ],
        "description": "Delete a Pipeline",
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "Name of instance",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "pipelineName",
            "in": "path",
            "description": "Name of pipeline",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Dataset": {
      "type": "object",
      "description": "A dataset resource belonging to a instance resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatasetProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "DatasetListResult": {
      "type": "object",
      "description": "The response of a Dataset list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Dataset items on this page",
          "items": {
            "$ref": "#/definitions/Dataset"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatasetProperties": {
      "type": "object",
      "description": "The properties of a Dataset resource.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the Dataset."
        },
        "payload": {
          "type": "string",
          "description": "Path to the payload in the message. Enrich will add only the payload to the enriched message, other fields will not be kept except for in the indexes."
        },
        "timestamp": {
          "type": "string",
          "description": "Path to an RFC3339 timestamp. If no path is provided, the ingestion time of the record is used for time-based joins."
        },
        "ttl": {
          "type": "string",
          "description": "Time to live."
        },
        "keys": {
          "$ref": "#/definitions/DatasetPropertyKeys",
          "description": "List of keys that can be used for joining on enrich"
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "displayName"
      ]
    },
    "DatasetPropertyKeys": {
      "type": "object",
      "description": "List of keys that can be used for joining on enrich.",
      "properties": {}
    },
    "DatasetUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Dataset.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatasetUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatasetUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Dataset.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the Dataset."
        },
        "payload": {
          "type": "string",
          "description": "Path to the payload in the message. Enrich will add only the payload to the enriched message, other fields will not be kept except for in the indexes."
        },
        "timestamp": {
          "type": "string",
          "description": "Path to an RFC3339 timestamp. If no path is provided, the ingestion time of the record is used for time-based joins."
        },
        "ttl": {
          "type": "string",
          "description": "Time to live."
        },
        "keys": {
          "$ref": "#/definitions/DatasetPropertyKeys",
          "description": "List of keys that can be used for joining on enrich"
        }
      }
    },
    "Instance": {
      "type": "object",
      "description": "Instance resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/InstanceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "InstanceListResult": {
      "type": "object",
      "description": "The response of a Instance list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Instance items on this page",
          "items": {
            "$ref": "#/definitions/Instance"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InstanceProperties": {
      "type": "object",
      "description": "Instance properties",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the instance."
        },
        "otelCollectorAddress": {
          "type": "string",
          "description": "Location of the Openn Telemetry collector that logs, traces and metrics are sent to."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "otelCollectorAddress"
      ]
    },
    "InstanceUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Instance.",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "$ref": "#/definitions/InstanceUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "InstanceUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Instance.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the instance."
        },
        "otelCollectorAddress": {
          "type": "string",
          "description": "Location of the Openn Telemetry collector that logs, traces and metrics are sent to."
        }
      }
    },
    "Pipeline": {
      "type": "object",
      "description": "A pipeline resource belonging to a instance resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "PipelineInput": {
      "type": "object",
      "description": "The input of a Pipeline resource.",
      "properties": {}
    },
    "PipelineListResult": {
      "type": "object",
      "description": "The response of a Pipeline list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Pipeline items on this page",
          "items": {
            "$ref": "#/definitions/Pipeline"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "PipelineProperties": {
      "type": "object",
      "description": "The properties of a Pipeline resource.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the pipeline."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the pipeline for customer consumption."
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag indicating whether the pipeline should be running or not."
        },
        "input": {
          "$ref": "#/definitions/PipelineInput",
          "description": "The input of a Pipeline resource."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The status of the last operation.",
          "readOnly": true
        }
      },
      "required": [
        "displayName",
        "enabled",
        "input"
      ]
    },
    "PipelineUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Pipeline.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PipelineUpdateProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PipelineUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Pipeline.",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User-friendly name for the pipeline."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the pipeline for customer consumption."
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag indicating whether the pipeline should be running or not."
        },
        "input": {
          "$ref": "#/definitions/PipelineInput",
          "description": "The input of a Pipeline resource."
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning status of the resource",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being created."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is being updated."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource is being moved."
          }
        ]
      }
    }
  },
  "parameters": {}
}
