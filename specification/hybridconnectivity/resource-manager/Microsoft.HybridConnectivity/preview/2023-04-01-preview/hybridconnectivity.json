{
  "swagger": "2.0",
  "info": {
    "title": "Hybrid Connectivity Management API",
    "description": "REST API for Hybrid Connectivity used for connectivity of on premises resources",
    "version": "2023-04-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/providers/Microsoft.HybridConnectivity/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists the available Hybrid Connectivity REST API operations.",
        "operationId": "Operations_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityOperationsList": {
            "$ref": "./examples/OperationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation details.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "description": "Retrieve the list of endpoints.",
        "operationId": "Endpoints_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsGet": {
            "$ref": "./examples/EndpointsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of endpoints.",
            "schema": {
              "$ref": "#/definitions/EndpointsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}": {
      "get": {
        "tags": [
          "Endpoints"
        ],
        "description": "Retrieve the endpoint resource associated with given endpoint name.",
        "operationId": "Endpoints_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsGetDefault": {
            "$ref": "./examples/EndpointsGetDefault.json"
          },
          "HybridConnectivityEndpointsGetCustom": {
            "$ref": "./examples/EndpointsGetCustom.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint details",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "Endpoints"
        ],
        "description": "Create or update the endpoint to the target resource.",
        "operationId": "Endpoints_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsPutDefault": {
            "$ref": "./examples/EndpointsPutDefault.json"
          },
          "HybridConnectivityEndpointsPutCustom": {
            "$ref": "./examples/EndpointsPutCustom.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "name": "EndpointResource",
            "description": "Endpoint details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint details.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Endpoints"
        ],
        "description": "Update the endpoint to the target resource.",
        "operationId": "Endpoints_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsPatchDefault": {
            "$ref": "./examples/EndpointsPatchDefault.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "name": "EndpointResource",
            "description": "Endpoint details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint resource.",
            "schema": {
              "$ref": "#/definitions/EndpointResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Endpoints"
        ],
        "description": "Deletes the endpoint access to the target resource.",
        "operationId": "Endpoints_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsDeleteDefault": {
            "$ref": "./examples/EndpointsDeleteDefault.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The endpoint is deleted successfully."
          },
          "204": {
            "description": "The endpoint has been deleted already."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listCredentials": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "description": "Gets the endpoint access credentials to the resource.",
        "operationId": "Endpoints_ListCredentials",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListCredentials": {
            "$ref": "./examples/EndpointsPostListCredentials.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/AccessTokenExpirationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Endpoint access credentials",
            "schema": {
              "$ref": "#/definitions/EndpointAccessResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listIngressGatewayCredentials": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "description": "Gets the ingress gateway endpoint credentials ",
        "operationId": "Endpoints_ListIngressGatewayCredentials",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListIngressGatewayCredentials": {
            "$ref": "./examples/EndpointsPostListIngressGatewayCredentials.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "$ref": "#/parameters/AccessTokenExpirationParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingress gateway access",
            "schema": {
              "$ref": "#/definitions/IngressGatewayResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/endpoints/{endpointName}/listManagedProxyDetails": {
      "post": {
        "tags": [
          "Endpoints"
        ],
        "description": "Fetches the managed proxy details ",
        "operationId": "Endpoints_ListManagedProxyDetails",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityEndpointsPostListManagedProxyDetails": {
            "$ref": "./examples/EndpointsPostListManagedProxyDetails.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/EndpointNameParameter"
          },
          {
            "name": "ManagedProxyRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManagedProxyRequest"
            },
            "description": "Object of type ManagedProxyRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Managed Proxy",
            "schema": {
              "$ref": "#/definitions/ManagedProxyResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes": {
      "get": {
        "tags": [
          "SolutionTypes"
        ],
        "description": "Retrieve the list of available solution types.",
        "operationId": "SolutionTypes_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionTypesListBySubscription": {
            "$ref": "./examples/SolutionTypesList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of solution types available",
            "schema": {
              "$ref": "#/definitions/SolutionTypeList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/solutionTypes/{solutionType}": {
      "get": {
        "tags": [
          "SolutionTypes"
        ],
        "description": "Retrieve the solution type by provided solution type.",
        "operationId": "SolutionTypes_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionTypesGet": {
            "$ref": "./examples/SolutionTypesGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/SolutionTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Solution type details",
            "schema": {
              "$ref": "#/definitions/SolutionTypeResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.HybridConnectivity/publicCloudConnectors": {
      "get": {
        "tags": [
          "publicCloudConnectors"
        ],
        "description": "Gets the public cloud connectors in the subscription.",
        "operationId": "publicCloudConnectors_SubscriptionList",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "PublicCloudConnectorsListBySubscription": {
            "$ref": "./examples/PublicCloudConnectorsListBySubscription.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PublicCloudConnectors resource",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors": {
      "get": {
        "tags": [
          "publicCloudConnectors"
        ],
        "description": "Gets the publicCloudConnector in the resource group.",
        "operationId": "publicCloudConnectors_ResourceGroupList",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "PublicCloudConnectorsGetByResourceGroup": {
            "$ref": "./examples/PublicCloudConnectorsListByResourceGroup.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of PublicCloudConnectors resource",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}": {
      "put": {
        "tags": [
          "publicCloudConnectors"
        ],
        "description": "Creates public cloud connectors resource.",
        "operationId": "publicCloudConnectors_CreatePublicCloudConnectors",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityPublicCloudConnectorsPut": {
            "$ref": "./examples/PublicCloudConnectorsPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "name": "PublicCloudConnectorsRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsResource"
            },
            "description": "Object of type PublicCloudConnectorsResource."
          }
        ],
        "responses": {
          "200": {
            "description": "Public cloud connectors response.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsResource"
            }
          },
          "201": {
            "description": "Public cloud connectors created",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Gets the public cloud connectors.",
        "operationId": "publicCloudConnectors_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityPublicCloudConnectorsGet": {
            "$ref": "./examples/PublicCloudConnectorsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The details of public cloud connectors.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Update the public cloud connectors resource.",
        "operationId": "publicCloudConnectors_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityPublicCloudConnectorsPatch": {
            "$ref": "./examples/PublicCloudConnectorsPatch.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "name": "PublicCloudConnectorsPatchRequest",
            "description": "The details of public cloud connectors resource.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatchablePublicCloudConnectorsResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of public cloud connectors resource.",
            "schema": {
              "$ref": "#/definitions/PublicCloudConnectorsResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PublicCloudConnectors"
        ],
        "description": "Deletes the public cloud connectors resource.",
        "operationId": "publicConnectors_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivityPublicCloudConnectorsDelete": {
            "$ref": "./examples/PublicCloudConnectorsDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v2/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The public cloud connector is deleted successfully."
          },
          "204": {
            "description": "The public cloud connector has been deleted already."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v2/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations": {
      "get": {
        "tags": [
          "SolutionConfiguration"
        ],
        "description": "Retrieve the List of solution configuration resources.",
        "operationId": "SolutionConfiguration_List",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionConfigurationsGet": {
            "$ref": "./examples/SolutionConfigurationsList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of solution configuration resources.",
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationList"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionName}": {
      "put": {
        "tags": [
          "SolutionConfiguration"
        ],
        "description": "Creates solution configuration with provided solution name",
        "operationId": "SolutionConfiguration_CreateOrUpdate",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionConfigurationPut": {
            "$ref": "./examples/SolutionConfigurationsPut.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          },
          {
            "name": "SolutionConfigurationRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationResource"
            },
            "description": "Object of type SolutionConfigurationRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Solution Configuration response",
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      },
      "get": {
        "tags": [
          "SolutionConfiguration"
        ],
        "description": "Retrieve the solution configuration identified by solution name.",
        "operationId": "SolutionConfiguration_Get",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionConfigurationGet": {
            "$ref": "./examples/SolutionConfigurationsGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Solution COnfiguration response",
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "SolutionConfiguration"
        ],
        "description": "Updates the solution configuration for solution name.",
        "operationId": "SolutionConfiguration_Update",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionConfigurationPatch": {
            "$ref": "./examples/SolutionConfigurationsPatch.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          },
          {
            "name": "SolutionConfigurationRequest",
            "description": "Solution configurations details",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Solution Configuration response",
            "schema": {
              "$ref": "#/definitions/SolutionConfigurationResource"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SolutionConfiguration"
        ],
        "description": "Deletes the solution configuration with provided solution name.",
        "operationId": "SolutionConfiguration_Delete",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "HybridConnectivitySolutionConfigurationDelete": {
            "$ref": "./examples/SolutionConfigurationsDelete.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The solution configuration is deleted successfully."
          },
          "204": {
            "description": "The solution configuration has been deleted already."
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionName}/inventory/{inventoryId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "Retrieve the inventory identified by inventory id.",
        "operationId": "Inventory_GetBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get inventory": {
            "$ref": "./examples/InventoryGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          },
          {
            "$ref": "#/parameters/InventoryIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Inventory details",
            "schema": {
              "$ref": "#/definitions/Inventory"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/solutionConfigurations/{solutionName}/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "description": "Retrieve a list of inventory by solution name.",
        "operationId": "Inventory_ListBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List inventory by solution name": {
            "$ref": "./examples/InventoryList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/SolutionNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "List inventory details by solution name",
            "schema": {
              "$ref": "#/definitions/InventoryListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}/AWSEC2": {
      "get": {
        "tags": [
          "AWSEC2"
        ],
        "description": "Retrieve a list of EC2 assets by public cloud connector.",
        "operationId": "EC2_ListBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List inventory by solution name": {
            "$ref": "./examples/EC2List.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "List EC2 assets by public cloud connector.",
            "schema": {
              "$ref": "#/definitions/EC2ListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}/AWSEC2/{assetId}": {
      "get": {
        "tags": [
          "AWSEC2"
        ],
        "description": "Retrieve the EC2 identified by asset Id.",
        "operationId": "EC2_GetBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get EC2": {
            "$ref": "./examples/EC2Get.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "$ref": "#/parameters/AssetIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Get EC2 asset details.",
            "schema": {
              "$ref": "#/definitions/EC2"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}/AWSLambda": {
      "get": {
        "tags": [
          "AWSLambda"
        ],
        "description": "Retrieve a list of Lambda assets by public cloud connector.",
        "operationId": "Lambda_ListBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "List inventory by solution name": {
            "$ref": "./examples/LambdaList.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "List Lambda assets by public cloud connector.",
            "schema": {
              "$ref": "#/definitions/LambdaListResult"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    },
    "/{resourceUri}/providers/Microsoft.HybridConnectivity/publicCloudConnectors/{publicCloudConnector}/AWSLambda/{assetId}": {
      "get": {
        "tags": [
          "AWSLambda"
        ],
        "description": "Retrieve the Lambda identified by asset id.",
        "operationId": "Lambda_GetBySolution",
        "produces": [
          "application/json"
        ],
        "x-ms-examples": {
          "Get Lambda": {
            "$ref": "./examples/LambdaGet.json"
          }
        },
        "parameters": [
          {
            "$ref": "../../../../../common-types/resource-management/v3/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceUriParameter"
          },
          {
            "$ref": "#/parameters/PublicCloudConnectorParameter"
          },
          {
            "$ref": "#/parameters/AssetIdParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        ],
        "responses": {
          "200": {
            "description": "Get Lambda asset details.",
            "schema": {
              "$ref": "#/definitions/Lambda"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "RelayNamespaceAccessProperties": {
      "type": "object",
      "description": "Azure relay hybrid connection access properties",
      "required": [
        "namespaceName",
        "namespaceNameSuffix",
        "hybridConnectionName"
      ],
      "properties": {
        "namespaceName": {
          "type": "string",
          "description": "The namespace name.",
          "minLength": 1,
          "maxLength": 200
        },
        "namespaceNameSuffix": {
          "type": "string",
          "description": "The suffix domain name of relay namespace.",
          "minLength": 1,
          "maxLength": 100
        },
        "hybridConnectionName": {
          "type": "string",
          "description": "Azure Relay hybrid connection name for the resource."
        },
        "accessKey": {
          "type": "string",
          "description": "Access key for hybrid connection.",
          "readOnly": true
        },
        "expiresOn": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration of access key in unix time."
        }
      }
    },
    "IngressGatewayResource": {
      "description": "The ingress gateway access credentials",
      "type": "object",
      "properties": {
        "relay": {
          "$ref": "#/definitions/RelayNamespaceAccessProperties",
          "x-ms-client-flatten": true
        },
        "ingress": {
          "$ref": "#/definitions/IngressProfileProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "IngressProfileProperties": {
      "type": "object",
      "description": "Ingress gateway profile",
      "required": [
        "hostname",
        "aadProfile"
      ],
      "properties": {
        "hostname": {
          "type": "string",
          "description": "The ingress hostname."
        },
        "aadProfile": {
          "$ref": "#/definitions/AADProfileProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "AADProfileProperties": {
      "type": "object",
      "description": "The AAD Profile",
      "required": [
        "serverId",
        "tenantId"
      ],
      "properties": {
        "serverId": {
          "type": "string",
          "description": "The arc ingress gateway server app id."
        },
        "tenantId": {
          "type": "string",
          "description": "The target resource home tenant id."
        }
      }
    },
    "EndpointAccessResource": {
      "description": "The endpoint access for the target resource.",
      "type": "object",
      "properties": {
        "relay": {
          "$ref": "#/definitions/RelayNamespaceAccessProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointProperties": {
      "type": "object",
      "description": "Endpoint details",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of endpoint.",
          "enum": [
            "default",
            "custom"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "resourceId": {
          "type": "string",
          "description": "The resource Id of the connectivity endpoint (optional)."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        }
      }
    },
    "EndpointResource": {
      "description": "The endpoint for the target resource.",
      "type": "object",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "The endpoint properties.",
          "$ref": "#/definitions/EndpointProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "EndpointsList": {
      "description": "The list of endpoints.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of endpoints list.",
          "type": "string"
        },
        "value": {
          "description": "The list of endpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EndpointResource"
          }
        }
      }
    },
    "ManagedProxyResource": {
      "type": "object",
      "description": "Managed Proxy",
      "required": [
        "proxy",
        "expiresOn"
      ],
      "properties": {
        "proxy": {
          "type": "string",
          "description": "The short lived proxy name."
        },
        "expiresOn": {
          "type": "integer",
          "format": "int64",
          "description": "The expiration time of short lived proxy name in unix epoch."
        }
      }
    },
    "ManagedProxyRequest": {
      "type": "object",
      "description": "Represent ManageProxy Request object.",
      "required": [
        "service"
      ],
      "properties": {
        "service": {
          "type": "string",
          "description": "The name of the service."
        },
        "hostname": {
          "type": "string",
          "description": "The target host name."
        }
      }
    },
    "PublicCloudConnectorsList": {
      "description": "The list of public cloud connectors.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of public cloud connectors list.",
          "type": "string"
        },
        "value": {
          "description": "The list of public cloud connectors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PublicCloudConnectorsResource"
          }
        }
      }
    },
    "PatchablePublicCloudConnectorsResource": {
      "type": "object",
      "description": "Represent public cloud connectors resource.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "The public cloud connectors properties",
          "$ref": "#/definitions/PublicCloudConnectorsProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCloudConnectorsResource": {
      "type": "object",
      "description": "Represent public cloud connectors resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "The public cloud connectors properties",
          "$ref": "#/definitions/PublicCloudConnectorsProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "PublicCloudConnectorsProperties": {
      "type": "object",
      "description": "The properties of public cloud connectors",
      "required": [
        "hostType",
        "awsCloudProfile"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "hostType": {
          "description": "Type of host the public cloud connector is referencing.",
          "type": "string",
          "enum": [
            "AWS"
          ],
          "x-ms-enum": {
            "name": "HostType",
            "modelAsString": true
          }
        },
        "awsCloudProfile": {
          "type": "object",
          "description": "The cloud profile for AWS.",
          "$ref": "#/definitions/AwsCloudProfile",
          "x-ms-client-flatten": true
        }
      }
    },
    "AwsCloudProfile": {
      "type": "object",
      "description": "The cloud profile for AWS.",
      "required": [
        "accountId"
      ],
      "properties": {
        "accountId": {
          "type": "string",
          "description": "Account id for the AWS account."
        },
        "excludedAccounts": {
          "type": "array",
          "description": "List of AWS accounts which needs to be excluded.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SolutionConfigurationList": {
      "description": "The list of solution configuration.",
      "type": "object",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of solution configuration list.",
          "type": "string"
        },
        "value": {
          "description": "The list of solution configuration.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SolutionConfigurationResource"
          }
        }
      }
    },
    "SolutionConfigurationResource": {
      "type": "object",
      "description": "Represent Solution configuration resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "The solution configuration properties",
          "$ref": "#/definitions/SolutionConfigurationProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SolutionConfigurationProperties": {
      "type": "object",
      "description": "The properties of Solution Configuration",
      "required": [
        "solutionType"
      ],
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        },
        "solutionType": {
          "type": "string",
          "description": "The type of the solution"
        },
        "solutionSettings": {
          "type": "object",
          "description": "solution settings",
          "x-nullable": true,
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "The status of solution configurations",
          "enum": [
            "New",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "solutionConfigurationStatus",
            "modelAsString": true
          }
        },
        "statusDetails": {
          "type": "string",
          "readOnly": true,
          "description": "The detailed message of status details"
        },
        "lastExecutionTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true,
          "description": "The last execution time of solution configuration"
        }
      }
    },
    "SolutionTypeList": {
      "type": "object",
      "description": "Response for solution types api",
      "properties": {
        "nextLink": {
          "description": "The link used to get the next page of solution type list.",
          "type": "string"
        },
        "value": {
          "type": "array",
          "description": "The list of solution types.",
          "items": {
            "$ref": "#/definitions/SolutionTypeResource"
          }
        }
      }
    },
    "SolutionTypeResource": {
      "type": "object",
      "description": "Represent Solution type resource.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "type": "object",
          "description": "The solution type properties",
          "$ref": "#/definitions/SolutionTypeProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "SolutionTypeProperties": {
      "type": "object",
      "description": "The properties of each solution",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "The name of the solution type."
        },
        "description": {
          "type": "string",
          "description": "Short description of solution type"
        },
        "awsIamConfigurationTemplateUri": {
          "type": "string",
          "description": "The link to aws cloud formation template."
        },
        "gcpProjectConfigurationTemplateUri": {
          "type": "string",
          "description": "The link to gcp script."
        },
        "supportedAzureRegions": {
          "type": "array",
          "description": "The locations this solution is supported",
          "items": {
            "type": "string"
          }
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        }
      }
    },
    "Inventory": {
      "type": "object",
      "description": "Definition of inventory.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/ProxyResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/InventoryProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the id of the inventory."
        }
      }
    },
    "InventoryProperties": {
      "type": "object",
      "description": "Definition of inventory.",
      "properties": {
        "cloudNativeType": {
          "type": "string",
          "description": "Gets or sets the cloud native resource type.",
          "enum": [
            "ec2"
          ],
          "x-ms-enum": {
            "name": "cloudNativeResourceType",
            "modelAsString": true
          }
        },
        "cloudNativeResourceId": {
          "type": "string",
          "description": "Gets or sets the cloud native resource name."
        },
        "azureResourceId": {
          "type": "string",
          "description": "Gets or sets the mapped azure resource id."
        },
        "status": {
          "type": "string",
          "description": "Gets or sets the status of the inventory.",
          "enum": [
            "New",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "inventoryStatus",
            "modelAsString": true
          }
        },
        "statusDetails": {
          "type": "string",
          "description": "Gets or sets the status details."
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The resource provisioning state.",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "type",
            "modelAsString": true
          }
        }
      }
    },
    "InventoryListResult": {
      "type": "object",
      "description": "The response model for the list of inventory operation.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Inventory"
          },
          "description": "A list of inventory."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      }
    },
    "EC2": {
      "type": "object",
      "description": "Definition of EC2",
      "allOf": [
        {
          "$ref": "#/definitions/AssetCommonProperties"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/EC2Properties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the id of the EC2."
        }
      }
    },
    "EC2Properties": {
      "type": "object",
      "description": "Definition of EC2 properties.",
      "properties": {
        "AmiLaunchIndex": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the AmiLaunchIndex."
        },
        "Architecture": {
          "type": "object",
          "properties": {
            "Value": {
              "type": "string",
              "description": "Gets or sets the architecture.",
              "enum": [
                "Arm64",
                "Arm64_mac",
                "I386",
                "X86_64",
                "X86_64_mac"
              ],
              "x-ms-enum": {
                "name": "architecture",
                "modelAsString": true
              }
            }
          }
        },
        "BlockDeviceMappings": {
          "type": "array",
          "description": "Gets or sets the BlockDeviceMappings.",
          "items": {
            "type": "object",
            "properties": {
              "DeviceName": {
                "type": "string"
              },
              "Ebs": {
                "type": "object",
                "properties": {
                  "AttachTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "DeleteOnTermination": {
                    "type": "boolean"
                  },
                  "Status": {
                    "type": "object",
                    "properties": {
                      "Value": {
                        "type": "string",
                        "enum": [
                          "Attached",
                          "Attaching",
                          "Detached",
                          "Detaching"
                        ],
                        "x-ms-enum": {
                          "name": "attachmentStatus",
                          "modelAsString": true
                        }
                      }
                    }
                  },
                  "VolumeId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "BootMode": {
          "$ref": "#/definitions/BootMode"
        },
        "CapacityReservationId": {
          "type": "string",
          "description": "Gets or sets ID of the Capacity Reservation."
        },
        "CapacityReservationSpecification": {
          "type": "object",
          "description": "Gets or sets the Capacity Reservation targeting option.",
          "properties": {
            "CapacityReservationPreference": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Open"
                  ],
                  "x-ms-enum": {
                    "name": "capacityReservationPreference",
                    "modelAsString": true
                  }
                }
              }
            },
            "CapacityReservationTarget": {
              "type": "object",
              "properties": {
                "CapacityReservationId": {
                  "type": "string"
                },
                "CapacityReservationResourceGroupArn": {
                  "type": "string"
                }
              }
            }
          }
        },
        "ClientToken": {
          "type": "string",
          "description": "Gets or sets the client token."
        },
        "CpuOptions": {
          "type": "object",
          "description": "Gets or sets CPU options.",
          "properties": {
            "CoreCount": {
              "type": "integer",
              "format": "int32"
            },
            "ThreadsPerCore": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "CurrentInstanceBootMode": {
          "description": "Gets or sets current boot mode.",
          "$ref": "#/definitions/BootMode"
        },
        "EbsOptimized": {
          "type": "boolean",
          "description": "Gets or sets EbsOptimized."
        },
        "ElasticGpuAssociations": {
          "type": "array",
          "description": "Gets or sets ElasticGpuAssociations.",
          "items": {
            "type": "object",
            "properties": {
              "ElasticGpuAssociationId": {
                "type": "string"
              },
              "ElasticGpuAssociationState": {
                "type": "string"
              },
              "ElasticGpuAssociationTime": {
                "type": "string"
              },
              "ElasticGpuId": {
                "type": "string"
              }
            }
          }
        },
        "ElasticInferenceAcceleratorAssociations": {
          "type": "array",
          "description": "Gets or sets ElasticInferenceAcceleratorAssociations.",
          "items": {
            "type": "object",
            "properties": {
              "ElasticInferenceAcceleratorArn": {
                "type": "string"
              },
              "ElasticInferenceAcceleratorAssociationId": {
                "type": "string"
              },
              "ElasticInferenceAcceleratorAssociationState": {
                "type": "string"
              },
              "ElasticInferenceAcceleratorAssociationTime": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "EnaSupport": {
          "type": "boolean",
          "description": "Gets or sets EnaSupport."
        },
        "EnclaveOptions": {
          "type": "object",
          "description": "Gets or sets EnclaveOptions.",
          "properties": {
            "Enabled": {
              "type": "boolean"
            }
          }
        },
        "HibernationOptions": {
          "type": "object",
          "description": "Gets or sets HibernationOptions.",
          "properties": {
            "Configured": {
              "type": "boolean"
            }
          }
        },
        "Hypervisor": {
          "type": "object",
          "description": "Gets or sets Hypervisor.",
          "properties": {
            "Value": {
              "type": "string",
              "enum": [
                "Ovm",
                "Xen"
              ],
              "x-ms-enum": {
                "name": "hypervisorType ",
                "modelAsString": true
              }
            }
          }
        },
        "IamInstanceProfile": {
          "type": "object",
          "description": "Gets or sets IAM instance profile.",
          "properties": {
            "Arn": {
              "type": "string"
            },
            "Id": {
              "type": "string"
            }
          }
        },
        "ImageId": {
          "type": "string",
          "description": "Gets or sets ImageId."
        },
        "InstanceId": {
          "type": "string",
          "description": "Gets or sets InstanceId."
        },
        "InstanceLifecycle": {
          "type": "object",
          "description": "Gets or sets InstanceLifecycle.",
          "properties": {
            "Value": {
              "type": "string",
              "enum": [
                "Scheduled",
                "Spot"
              ],
              "x-ms-enum": {
                "name": "instanceLifecycleType ",
                "modelAsString": true
              }
            }
          }
        },
        "InstanceType": {
          "type": "object",
          "description": "Gets or sets InstanceType.",
          "properties": {
            "Value": {
              "type": "string"
            }
          }
        },
        "Ipv6Address": {
          "type": "string",
          "description": "Gets or sets Ipv6Address."
        },
        "KernelId": {
          "type": "string",
          "description": "Gets or sets KernelId."
        },
        "KeyName": {
          "type": "string",
          "description": "Gets or sets the name of key pair."
        },
        "LaunchTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets the instance's LaunchTime."
        },
        "Licenses": {
          "type": "array",
          "description": "Gets or sets license configurations.",
          "items": {
            "type": "object",
            "properties": {
              "LicenseConfigurationArn": {
                "type": "string"
              }
            }
          }
        },
        "MaintenanceOptions": {
          "type": "object",
          "description": "Gets or sets MaintenanceOptions.",
          "properties": {
            "AutoRecovery": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Default",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "instanceAutoRecoveryState",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "MetadataOptions": {
          "type": "object",
          "description": "Gets or sets MetadataOptions.",
          "properties": {
            "HttpEndpoint": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "httpEndpoint ",
                    "modelAsString": true
                  }
                }
              }
            },
            "HttpProtocolIpv6": {
              "type": "object",
              "properties": {
                "Value": {
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "httpProtocolIpv6 ",
                    "modelAsString": true
                  }
                }
              }
            },
            "HttpPutResponseHopLimit": {
              "type": "integer",
              "format": "int32"
            },
            "HttpTokens": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Optional",
                    "Required"
                  ],
                  "x-ms-enum": {
                    "name": "httpTokens ",
                    "modelAsString": true
                  }
                }
              }
            },
            "InstanceMetadataTags": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "instanceMetadataTags ",
                    "modelAsString": true
                  }
                }
              }
            },
            "State": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Applied",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "instanceMetadataOptionsState",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "Monitoring": {
          "type": "object",
          "description": "Gets or sets Monitoring.",
          "properties": {
            "State": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Disabling",
                    "Enabled",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "monitoringState",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "NetworkInterfaces": {
          "type": "array",
          "description": "Gets or sets NetworkInterfaces.",
          "items": {
            "type": "object",
            "properties": {
              "Association": {
                "type": "object",
                "properties": {
                  "CarrierIp": {
                    "type": "string"
                  },
                  "CustomerOwnedIp": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "IpOwnerId": {
                    "type": "boolean"
                  },
                  "PublicDnsName": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "PublicIp": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "Attachment": {
                "type": "object",
                "properties": {
                  "AttachmentId": {
                    "type": "string"
                  },
                  "AttachTime": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "DeleteOnTermination": {
                    "type": "boolean"
                  },
                  "DeviceIndex": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "NetworkCardIndex": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "Status": {
                    "type": "object",
                    "properties": {
                      "Value": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "Description": {
                "type": "string"
              },
              "Groups": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "GroupId": {
                      "type": "string"
                    },
                    "GroupName": {
                      "type": "string"
                    }
                  }
                }
              },
              "InterfaceType": {
                "type": "string"
              },
              "Ipv4Prefixes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Ipv4Prefix": {
                      "type": "string"
                    }
                  }
                }
              },
              "Ipv6Addresses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Ipv6Address": {
                      "type": "string"
                    }
                  }
                }
              },
              "Ipv6Prefixes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Ipv6Prefix": {
                      "type": "string"
                    }
                  }
                }
              },
              "MacAddress": {
                "type": "string"
              },
              "NetworkInterfaceId": {
                "type": "string"
              },
              "OwnerId": {
                "type": "string"
              },
              "PrivateDnsName": {
                "type": "string"
              },
              "PrivateIpAddress": {
                "type": "string"
              },
              "PrivateIpAddresses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Association": {
                      "type": "string"
                    },
                    "Primary": {
                      "type": "boolean"
                    },
                    "PrivateDnsName": {
                      "type": "string"
                    },
                    "PrivateIpAddress": {
                      "type": "string"
                    }
                  }
                }
              },
              "SourceDestCheck": {
                "type": "boolean"
              },
              "Status": {
                "type": "object",
                "properties": {
                  "Value": {
                    "type": "string"
                  }
                }
              },
              "SubnetId": {
                "type": "string"
              },
              "VpcId": {
                "type": "string"
              }
            }
          }
        },
        "OutpostArn": {
          "type": "string",
          "description": "Gets or sets OutpostArn."
        },
        "Placement": {
          "type": "object",
          "description": "Gets or sets Placement.",
          "properties": {
            "Affinity": {
              "type": "string"
            },
            "AvailabilityZone": {
              "type": "string"
            },
            "GroupId": {
              "type": "string"
            },
            "GroupName": {
              "type": "string"
            },
            "HostId": {
              "type": "string"
            },
            "HostResourceGroupArn": {
              "type": "string"
            },
            "PartitionNumber": {
              "type": "integer",
              "format": "int32"
            },
            "SpreadDomain": {
              "type": "string"
            },
            "Tenancy": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "Dedicated",
                    "Default",
                    "Host"
                  ],
                  "x-ms-enum": {
                    "name": "tenancyType",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "Platform": {
          "type": "string",
          "description": "Gets or sets the platform.",
          "enum": [
            "Windows"
          ],
          "x-ms-enum": {
            "name": "platformValue",
            "modelAsString": true
          }
        },
        "PlatformDetails": {
          "type": "string",
          "description": "Gets or sets the PlatformDetails."
        },
        "PrivateDnsName": {
          "type": "string",
          "description": "Gets or sets the PrivateDnsName."
        },
        "PrivateDnsNameOptions": {
          "type": "object",
          "description": "Gets or sets PrivateDnsNameOptions.",
          "properties": {
            "EnableResourceNameDnsAAAARecord": {
              "type": "boolean"
            },
            "EnableResourceNameDnsARecord": {
              "type": "boolean"
            },
            "HostnameType": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "enum": [
                    "IpName",
                    "ResourceName"
                  ],
                  "x-ms-enum": {
                    "name": "hostnameType",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "PrivateIpAddress": {
          "type": "string",
          "description": "Gets or sets PrivateIpAddress."
        },
        "ProductCodes": {
          "type": "array",
          "description": "Gets or sets ProductCodes.",
          "items": {
            "type": "object",
            "properties": {
              "ProductCodeId": {
                "type": "string"
              },
              "ProductCodeType": {
                "type": "object",
                "properties": {
                  "Value": {
                    "type": "string",
                    "enum": [
                      "Devpay",
                      "Marketplace"
                    ],
                    "x-ms-enum": {
                      "name": "productCodeValues",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          }
        },
        "PublicDnsName": {
          "type": "string",
          "description": "Gets or sets PublicDnsName."
        },
        "PublicIpAddress": {
          "type": "string",
          "description": "Gets or sets PublicIpAddress."
        },
        "RamdiskId": {
          "type": "string",
          "description": "Gets or sets RamdiskId."
        },
        "RootDeviceName": {
          "type": "string",
          "description": "Gets or sets RootDeviceName."
        },
        "RootDeviceType": {
          "type": "object",
          "description": "Gets or sets RootDeviceType.",
          "properties": {
            "Value": {
              "type": "string",
              "enum": [
                "Ebs",
                "InstanceStore"
              ],
              "x-ms-enum": {
                "name": "deviceType",
                "modelAsString": true
              }
            }
          }
        },
        "SecurityGroups": {
          "type": "array",
          "description": "Gets or sets SecurityGroups.",
          "items": {
            "type": "object",
            "properties": {
              "GroupId": {
                "type": "string"
              },
              "GroupName": {
                "type": "string"
              }
            }
          }
        },
        "SourceDestCheck": {
          "type": "boolean",
          "description": "Gets or sets SourceDestCheck."
        },
        "SpotInstanceRequestId": {
          "type": "string",
          "description": "Gets or sets SpotInstanceRequestId."
        },
        "SriovNetSupport": {
          "type": "string",
          "description": "Gets or sets SriovNetSupport."
        },
        "State": {
          "type": "object",
          "description": "Gets or sets the State.",
          "properties": {
            "Code": {
              "type": "integer",
              "format": "int32"
            },
            "Name": {
              "type": "string",
              "enum": [
                "Pending",
                "Running",
                "ShuttingDown",
                "Stopped",
                "Stopping",
                "Terminated"
              ],
              "x-ms-enum": {
                "name": "ec2State",
                "modelAsString": true
              }
            }
          }
        },
        "StateReason": {
          "type": "object",
          "description": "Gets or sets StateReason.",
          "properties": {
            "Code": {
              "type": "string"
            },
            "Message": {
              "type": "string"
            }
          }
        },
        "StateTransitionReason": {
          "type": "string",
          "description": "Gets or sets StateTransitionReason."
        },
        "SubnetId": {
          "type": "string",
          "description": "Gets or sets SubnetId."
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "description": "Gets or sets the tags."
        },
        "TpmSupport": {
          "type": "string",
          "description": "Gets or sets TpmSupport."
        },
        "UsageOperation": {
          "type": "string",
          "description": "Gets or sets UsageOperation."
        },
        "UsageOperationUpdateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Gets or sets UsageOperationUpdateTime."
        },
        "VirtualizationType": {
          "type": "object",
          "description": "Gets or sets VirtualizationType.",
          "properties": {
            "Value": {
              "type": "string",
              "enum": [
                "Hvm",
                "Paravirtual"
              ],
              "x-ms-enum": {
                "name": "virtualizationType",
                "modelAsString": true
              }
            }
          }
        },
        "VpcId": {
          "type": "string",
          "description": "Gets or sets VpcId."
        }
      }
    },
    "BootMode": {
      "type": "object",
      "description": "Gets or sets the boot mode.",
      "properties": {
        "Value": {
          "type": "string",
          "enum": [
            "LegacyBios",
            "Uefi",
            "UefiPreferred"
          ],
          "x-ms-enum": {
            "name": "bootMode",
            "modelAsString": true
          }
        }
      }
    },
    "Tag": {
      "type": "object",
      "description": "Definition of Tags.",
      "properties": {
        "Key": {
          "type": "string",
          "description": "Gets or sets the key."
        },
        "Value": {
          "type": "string",
          "description": "Gets or sets the value."
        }
      }
    },
    "Lambda": {
      "type": "object",
      "description": "Definition of Lambda",
      "allOf": [
        {
          "$ref": "#/definitions/AssetCommonProperties"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/LambdaProperties",
          "x-ms-client-flatten": true,
          "description": "Gets or sets the id of the Lambda."
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "ErrorCode": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "LambdaProperties": {
      "type": "object",
      "description": "Definition of Lambda properties.",
      "properties": {
        "Architectures": {
          "type": "array",
          "description": "Gets or sets the size of the architecture.",
          "items": {
            "type": "string"
          }
        },
        "CodeSha256": {
          "type": "string",
          "description": "Gets or sets the size of the function's deployment package's SHA256."
        },
        "CodeSize": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the size of the function's deployment package's size."
        },
        "DeadLetterConfig": {
          "type": "object",
          "description": "Gets or sets the size of the function's dead letter queue.",
          "properties": {
            "TargetArn": {
              "type": "string"
            }
          }
        },
        "Description": {
          "type": "string",
          "description": "Gets or sets the size of the description."
        },
        "Environment": {
          "type": "object",
          "description": "Gets or sets the size of the Environment.",
          "properties": {
            "Error": {
              "$ref": "#/definitions/Error"
            },
            "Variables": {
              "type": "array",
              "items": {}
            }
          }
        },
        "EphemeralStorage": {
          "type": "object",
          "description": "Gets or sets the size of the function's EphemeralStorage.",
          "properties": {
            "Size": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "FileSystemConfigs": {
          "type": "array",
          "description": "Gets or sets the Amazon EFS file system.",
          "items": {
            "type": "object",
            "properties": {
              "Arn": {
                "type": "string"
              },
              "LocalMountPath": {
                "type": "string"
              }
            }
          }
        },
        "FunctionArn": {
          "type": "string",
          "description": "Gets or sets the function name."
        },
        "FunctionName": {
          "type": "string",
          "description": "Gets or sets the function name."
        },
        "Handler": {
          "type": "string",
          "description": "Gets or sets the handler."
        },
        "ImageConfigResponse": {
          "type": "object",
          "description": "Gets or sets the function's image configuration values.",
          "properties": {
            "Error": {
              "$ref": "#/definitions/Error"
            },
            "ImageConfig": {
              "type": "object",
              "properties": {
                "Command": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "EntryPoint": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "IsCommandSet": {
                  "type": "boolean"
                },
                "IsEntryPointSet": {
                  "type": "boolean"
                },
                "FunctionName": {
                  "type": "string"
                },
                "WorkingDirectory": {
                  "type": "string"
                }
              }
            }
          }
        },
        "KMSKeyArn": {
          "type": "string",
          "description": "Gets or sets the KMSKeyArn."
        },
        "LastModified": {
          "type": "string",
          "description": "Gets or sets the last modified."
        },
        "LastUpdateStatus": {
          "type": "string",
          "description": "Gets or sets the last update state.",
          "enum": [
            "Failed",
            "InProgress",
            "Successful"
          ],
          "x-ms-enum": {
            "name": "lastUpdateStatus",
            "modelAsString": true
          }
        },
        "LastUpdateStatusReason": {
          "type": "string",
          "description": "Gets or sets the last update state reason."
        },
        "LastUpdateStatusReasonCode": {
          "type": "string",
          "description": "Gets or sets the code of last update state reason."
        },
        "Layers": {
          "type": "array",
          "description": "Gets or sets the layer.",
          "items": {
            "type": "object",
            "properties": {
              "Arn": {
                "type": "string"
              },
              "CodeSize": {
                "type": "integer",
                "format": "int64"
              },
              "SigningJobArn": {
                "type": "string"
              },
              "SigningProfileVersionArn": {
                "type": "string"
              }
            }
          }
        },
        "MasterArn": {
          "type": "string",
          "description": "Gets or sets the master ARN."
        },
        "MemorySize": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the memory size."
        },
        "PackageType": {
          "type": "object",
          "description": "Gets or sets the type of deployment package.",
          "properties": {
            "Value": {
              "type": "string",
              "enum": [
                "Image",
                "Zip"
              ],
              "x-ms-enum": {
                "name": "packageType",
                "modelAsString": true
              }
            }
          }
        },
        "RevisionId": {
          "type": "string",
          "description": "Gets or sets the revision Id."
        },
        "Role": {
          "type": "string",
          "description": "Gets or sets the function's execution role."
        },
        "Runtime": {
          "type": "object",
          "description": "Gets or sets the runtime.",
          "properties": {
            "Value": {
              "type": "string"
            }
          }
        },
        "RuntimeVersionConfig": {
          "type": "object",
          "description": "Gets or sets the runtime version config.",
          "properties": {
            "RuntimeVersionArn": {
              "type": "string"
            }
          }
        },
        "SigningJobArn": {
          "type": "string",
          "description": "Gets or sets the ARN of the signing job."
        },
        "SigningProfileVersionArn": {
          "type": "string",
          "description": "Gets or sets the ARN of the signing profile version."
        },
        "SnapStart": {
          "type": "object",
          "description": "Gets or sets the SnapStart.",
          "properties": {
            "ApplyOn": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "description": "Gets or sets the snap start optimization status.",
                  "enum": [
                    "None",
                    "PublishedVersions"
                  ],
                  "x-ms-enum": {
                    "name": "OptimizationStatus",
                    "modelAsString": true
                  }
                }
              }
            },
            "OptimizationStatus": {
              "type": "object",
              "properties": {
                "Value": {
                  "type": "string",
                  "description": "Gets or sets the snap start optimization status.",
                  "enum": [
                    "Off",
                    "On"
                  ],
                  "x-ms-enum": {
                    "name": "OptimizationStatus",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "State": {
          "type": "string",
          "description": "Gets or sets the state.",
          "enum": [
            "Failed",
            "InProgress",
            "Successful"
          ],
          "x-ms-enum": {
            "name": "lambdaState",
            "modelAsString": true
          }
        },
        "StateReason": {
          "type": "string",
          "description": "Gets or sets the state reason."
        },
        "StateReasonCode": {
          "type": "string",
          "description": "Gets or sets the code of state reason."
        },
        "Timeout": {
          "type": "integer",
          "format": "int32",
          "description": "Gets or sets the timeout."
        },
        "TracingConfig": {
          "type": "object",
          "properties": {
            "Mode": {
              "type": "string",
              "description": "Gets or sets the tracing mode.",
              "enum": [
                "Active",
                "PassThrough"
              ],
              "x-ms-enum": {
                "name": "tracingMode",
                "modelAsString": true
              }
            }
          }
        },
        "Version": {
          "type": "string",
          "description": "Gets or sets the version."
        },
        "VpcConfig": {
          "$ref": "#/definitions/vpcConfig"
        }
      }
    },
    "vpcConfig": {
      "type": "object",
      "description": "Definition of VPC Config.",
      "properties": {
        "SecurityGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the VPC security group IDs."
        },
        "SubnetIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Gets or sets the VPC subnet IDs."
        },
        "VpcId": {
          "type": "string",
          "description": "Gets or sets the ID of the VPC."
        }
      }
    },
    "EC2ListResult": {
      "type": "object",
      "description": "The response model for the list of EC2 assets.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EC2"
          },
          "description": "A list of EC2 assets."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      }
    },
    "LambdaListResult": {
      "type": "object",
      "description": "The response model for the list of Lambda assets.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Lambda"
          },
          "description": "A list of Lambda assets."
        },
        "nextLink": {
          "type": "string",
          "description": "Gets or sets the next link."
        }
      }
    },
    "AssetCommonProperties": {
      "type": "object",
      "description": "Common properties of assets.",
      "allOf": [
        {
          "$ref": "../../../../../common-types/resource-management/v3/types.json#/definitions/TrackedResource"
        }
      ],
      "properties": {
        "resourceType": {
          "type": "string",
          "description": "Gets or sets the resource type."
        },
        "cloudProvider": {
          "type": "string",
          "description": "Gets or sets the platform of asset.",
          "enum": [
            "AWS",
            "GCP"
          ],
          "x-ms-enum": {
            "name": "cloudProviderName",
            "modelAsString": true
          }
        },
        "cloudNativeUniqueId": {
          "type": "string",
          "description": "Gets or sets asset's unique Id from cloud provider."
        },
        "cloudNativeRegion": {
          "type": "string",
          "description": "Gets or sets the asset region from cloud provider."
        }
      }
    }
  },
  "parameters": {
    "ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The fully qualified Azure Resource manager identifier of the resource to be connected.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "EndpointNameParameter": {
      "name": "endpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The endpoint name.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "AccessTokenExpirationParameter": {
      "name": "expiresin",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int64",
      "default": 10800,
      "minimum": 600,
      "maximum": 10800,
      "description": "The is how long the endpoint access token is valid (in seconds).",
      "x-ms-parameter-location": "method"
    },
    "SolutionNameParameter": {
      "name": "solutionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The solution name.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "SolutionTypeParameter": {
      "name": "solutionType",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of solution type to fetch the details",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "InventoryIdParameter": {
      "name": "inventoryId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The inventory id.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "AssetIdParameter": {
      "name": "assetId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The asset id.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    },
    "PublicCloudConnectorParameter": {
      "name": "publicCloudConnector",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of public cloud connector.",
      "x-ms-skip-url-encoding": true,
      "x-ms-parameter-location": "method"
    }
  }
}